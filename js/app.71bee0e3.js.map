{"version":3,"file":"js/app.71bee0e3.js","mappings":"mEAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACA,EAAG,aAAa,CAACE,IAAI,KAAKC,MAAM,CAAC,KAAOL,EAAIM,KAAK,qBAAoB,EAAM,cAAe,EAAK,MAAQN,EAAIO,MAAM,OAASP,EAAIQ,QAAQC,GAAG,CAAC,gBAAgBT,EAAIU,WAAW,gBAAgBV,EAAIW,aAAa,iBAAiBX,EAAIY,cAAc,oBAAoBZ,EAAIa,aAAa,KAAOb,EAAIc,MAAMC,YAAYf,EAAIgB,GAAG,CAAC,CAACC,IAAI,2BAA2BC,GAAG,WAAW,MAAO,CAAChB,EAAG,MAAM,CAACiB,YAAY,iCAAiC,CAACjB,EAAG,QAAQ,CAACiB,YAAY,eAAed,MAAM,CAAC,KAAO,OAAO,YAAc,QAAQH,EAAG,SAAS,CAACO,GAAG,CAAC,MAAQT,EAAIoB,WAAW,CAACpB,EAAIqB,GAAG,SAAS,EAAEC,OAAM,GAAM,CAACL,IAAI,kBAAkBC,GAAG,SAASK,GAAS,MAAO,CAACrB,EAAG,cAAc,CAACiB,YAAY,wBAAwBd,MAAM,CAAC,MAAQkB,EAAQC,SAAS,CAACtB,EAAG,eAAe,CAACG,MAAM,CAAC,KAAO,GAAG,IAAMkB,EAAQE,WAAW,GAAGvB,EAAG,MAAM,CAACiB,YAAY,wBAAwB,CAACjB,EAAG,IAAI,CAACiB,YAAY,wBAAwB,CAAEI,EAAQG,UAAWxB,EAAG,OAAO,CAACiB,YAAY,kBAAkBnB,EAAI2B,KAAKzB,EAAG,OAAO,CAACiB,YAAY,uBAAuB,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAGL,EAAQM,gBAAgB3B,EAAG,OAAO,CAACiB,YAAY,uBAAuB,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAGL,EAAQO,aAAe9B,EAAI+B,WAAWR,EAAQO,cAAgB,IAAI,SAAS5B,EAAG,IAAI,CAACiB,YAAY,0BAA0B,CAACjB,EAAG,OAAO,CAAC8B,SAAS,CAAC,UAAYhC,EAAI4B,GAAGL,EAAQU,oBAAoB,GAAG,CAAChB,IAAI,gBAAgBC,GAAG,SAASK,GAAS,MAAO,CAACrB,EAAG,MAAM,CAACiB,YAAY,sBAAsB,CAACjB,EAAG,OAAO,CAACF,EAAIqB,GAAGrB,EAAI4B,GAAGL,EAAQM,cAAeN,EAAQW,SAAUhC,EAAG,OAAO,CAACF,EAAIqB,GAAG,KAAKrB,EAAI4B,GAAGL,EAAQY,GAAKZ,EAAQa,QAAQC,KAAOd,EAAQe,cAAc,OAAOtC,EAAI2B,OAAOzB,EAAG,IAAI,CAACiB,YAAY,2BAA2BV,GAAG,CAAC,MAAQ,SAAS8B,GAAQ,OAAOvC,EAAIwC,aAAajB,EAAQ,IAAI,CAACvB,EAAIqB,GAAG,WAAW,GAAG,CAACJ,IAAI,SAASC,GAAG,SAASK,GAAS,MAAO,CAAEA,EAAQW,SAAUhC,EAAG,MAAM,CAACiB,YAAY,cAAc,CAACjB,EAAG,MAAM,CAACiB,YAAY,oBAAoB,CAACnB,EAAIqB,GAAG,SAASnB,EAAG,MAAMA,EAAG,MAAM,CAACiB,YAAY,qBAAqB,CAACnB,EAAIqB,GAAG,UAAUnB,EAAG,MAAMA,EAAG,MAAM,CAACiB,YAAY,oBAAoB,CAACnB,EAAIqB,GAAG,SAASnB,EAAG,QAAQ,CAACiB,YAAY,cAAcd,MAAM,CAAC,YAAc,WAAWH,EAAG,MAAM,CAACiB,YAAY,kCAAkCnB,EAAIyC,GAAIlB,EAAQa,QAAQM,UAAU,SAASC,GAAM,OAAOzC,EAAG,gBAAgB,CAAC0C,WAAW,CAAC,CAACC,KAAK,oBAAoBC,QAAQ,8BAA8BC,MAAO/C,EAAIgD,WAAYC,WAAW,aAAaC,UAAU,CAAC,SAAU,KAAQjC,IAAI0B,EAAKQ,QAAQ9C,MAAM,CAAC,QAAUsC,IAAO,CAACzC,EAAG,MAAM,CAACiB,YAAY,qBAAqB,CAACjB,EAAG,MAAM,CAACiB,YAAY,qBAAqB,CAACjB,EAAG,MAAM,CAACG,MAAM,CAAC,IAAMsC,EAAKlB,OAASzB,EAAIoD,WAAaT,EAAKlB,OAASzB,EAAIqD,mBAAmB,IAAM,cAAcnD,EAAG,MAAM,CAACiB,YAAY,iCAAiC,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAGe,EAAKW,gBAAgB,IAAG,KAAKtD,EAAI2B,KAAK,OAAOzB,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,cAAc,cAAe,EAAM,OAAS,IAAI,MAAQ,IAAI,UAAW,IAAO,CAACH,EAAG,SAAS,CAACiB,YAAY,MAAMd,MAAM,CAAC,KAAO,KAAK,CAACH,EAAG,MAAM,CAACiB,YAAY,mBAAmB,CAACnB,EAAIqB,GAAG,YAAYnB,EAAG,MAAM,CAACiB,YAAY,kBAAkB,CAACjB,EAAG,OAAO,CAACG,MAAM,CAAC,aAAe,QAAQ,CAACH,EAAG,QAAQ,CAAC0C,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO/C,EAAIsD,SAAUL,WAAW,aAAa5C,MAAM,CAAC,KAAO,OAAO,GAAK,WAAW,YAAc,WAAW,UAAY,KAAK,aAAe,IAAI2B,SAAS,CAAC,MAAShC,EAAIsD,UAAW7C,GAAG,CAAC,MAAQ,SAAS8B,GAAWA,EAAOgB,OAAOC,YAAiBxD,EAAIsD,SAASf,EAAOgB,OAAOR,MAAK,KAAK7C,EAAG,QAAQ,CAAC0C,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO/C,EAAIyD,SAAUR,WAAW,aAAa5C,MAAM,CAAC,KAAO,WAAW,GAAK,WAAW,YAAc,cAAc,UAAY,MAAM2B,SAAS,CAAC,MAAShC,EAAIyD,UAAWhD,GAAG,CAAC,MAAQ,SAAS8B,GAAWA,EAAOgB,OAAOC,YAAiBxD,EAAIyD,SAASlB,EAAOgB,OAAOR,MAAK,KAAK7C,EAAG,SAAS,CAACiB,YAAY,qBAAqBd,MAAM,CAAC,KAAO,UAAUI,GAAG,CAAC,MAAQT,EAAI0D,QAAQ,CAAC1D,EAAIqB,GAAG,qBAAqBnB,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,mBAAmB,cAAe,EAAM,OAAS,GAAG,MAAQ,MAAM,CAACL,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAI2D,oBAAoBzD,EAAG,gBAAgB,CAACG,MAAM,CAAC,MAAQ,MAAM,SAAW,gBAAgBH,EAAG,SAAS,CAACG,MAAM,CAAC,OAASL,EAAI4D,UAAU,CAAC1D,EAAG,aAAa,CAACG,MAAM,CAAC,MAAQ,MAAM,MAAQ,IAAI,OAAS,IAAI,aAAa,OAAOI,GAAG,CAAC,eAAeT,EAAI6D,aAAaC,MAAM,CAACf,MAAO/C,EAAI+D,WAAWC,KAAMC,SAAS,SAAUC,GAAMlE,EAAImE,KAAKnE,EAAI+D,WAAY,OAAQG,EAAI,EAAEjB,WAAW,sBAAsB/C,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAO,cAAc,cAAe,EAAK,OAAS,IAAI,MAAQ,IAAI,UAAW,IAAO,CAACH,EAAG,MAAM,CAACiB,YAAY,iBAAiB,CAACjB,EAAG,MAAM,CAACiB,YAAY,gBAAgB,CAACjB,EAAG,KAAK,CAACiB,YAAY,eAAe,CAACnB,EAAIqB,GAAG,UAAUnB,EAAG,OAAO,CAACF,EAAIqB,GAAG,WAAWnB,EAAG,QAAQ,CAAC0C,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO/C,EAAIoE,WAAYnB,WAAW,eAAe9B,YAAY,0BAA0Bd,MAAM,CAAC,YAAc,WAAW2B,SAAS,CAAC,MAAShC,EAAIoE,YAAa3D,GAAG,CAAC,MAAQ,SAAS8B,GAAWA,EAAOgB,OAAOC,YAAiBxD,EAAIoE,WAAW7B,EAAOgB,OAAOR,MAAK,OAAO7C,EAAG,MAAM,CAACiB,YAAY,iDAAiD,CAACjB,EAAG,MAAM,CAACiB,YAAY,gBAAgB,CAACjB,EAAG,MAAM,CAACF,EAAIqB,GAAG,SAASnB,EAAG,SAAS,CAAC0C,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO/C,EAAIqE,aAAcpB,WAAW,iBAAiB5C,MAAM,CAAC,SAAW,GAAG,KAAO,MAAMI,GAAG,CAAC,OAAS,SAAS8B,GAAQ,IAAI+B,EAAgBC,MAAMC,UAAUC,OAAOC,KAAKnC,EAAOgB,OAAOoB,SAAQ,SAASC,GAAG,OAAOA,EAAEC,QAAQ,IAAGC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAE7B,MAAM,OAAOgC,CAAG,IAAI/E,EAAIqE,aAAa9B,EAAOgB,OAAO0B,SAAWX,EAAgBA,EAAc,EAAE,IAAItE,EAAIyC,GAAIzC,EAAIkF,sBAAsBxC,UAAU,SAASC,GAAM,OAAOzC,EAAG,SAAS,CAACe,IAAI0B,EAAKQ,QAAQnB,SAAS,CAAC,MAAQW,EAAKQ,UAAU,CAACnD,EAAIqB,GAAGrB,EAAI4B,GAAGe,EAAKW,YAAY,IAAG,KAAKpD,EAAG,MAAM,CAACiB,YAAY,uBAAuB,CAACjB,EAAG,SAAS,CAACO,GAAG,CAAC,MAAQT,EAAImF,aAAa,CAACnF,EAAIqB,GAAG,QAAQnB,EAAG,SAAS,CAACO,GAAG,CAAC,MAAQT,EAAIoF,cAAc,CAACpF,EAAIqB,GAAG,UAAUnB,EAAG,MAAM,CAACiB,YAAY,gBAAgB,CAACjB,EAAG,MAAM,CAACF,EAAIqB,GAAG,QAAQnB,EAAG,SAAS,CAAC0C,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAO/C,EAAIqF,cAAepC,WAAW,kBAAkB5C,MAAM,CAAC,SAAW,GAAG,KAAO,MAAMI,GAAG,CAAC,OAAS,SAAS8B,GAAQ,IAAI+B,EAAgBC,MAAMC,UAAUC,OAAOC,KAAKnC,EAAOgB,OAAOoB,SAAQ,SAASC,GAAG,OAAOA,EAAEC,QAAQ,IAAGC,KAAI,SAASF,GAAG,IAAIG,EAAM,WAAYH,EAAIA,EAAEI,OAASJ,EAAE7B,MAAM,OAAOgC,CAAG,IAAI/E,EAAIqF,cAAc9C,EAAOgB,OAAO0B,SAAWX,EAAgBA,EAAc,EAAE,IAAItE,EAAIyC,GAAIzC,EAAIsF,mBAAmB5C,UAAU,SAASC,GAAM,OAAOzC,EAAG,SAAS,CAACe,IAAI0B,EAAKQ,QAAQnB,SAAS,CAAC,MAAQW,EAAKQ,UAAU,CAACnD,EAAIqB,GAAGrB,EAAI4B,GAAGe,EAAKW,YAAY,IAAG,OAAOpD,EAAG,MAAM,CAACiB,YAAY,sCAAsC,CAACjB,EAAG,SAAS,CAACO,GAAG,CAAC,MAAQT,EAAIuF,cAAc,CAACvF,EAAIqB,GAAG,QAAQnB,EAAG,SAAS,CAACO,GAAG,CAAC,MAAQT,EAAIwF,cAAc,CAACxF,EAAIqB,GAAG,cAAcnB,EAAG,QAAQ,CAAC0C,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAQ/C,EAAIyF,aAAcxC,WAAW,kBAAkB5C,MAAM,CAAC,KAAO,YAAY,cAAe,EAAM,OAAS,OAAO,MAAQ,IAAI,YAAa,EAAK,UAAY,OAAO,UAAW,IAAO,CAACH,EAAG,MAAM,CAACiB,YAAY,oDAAoD,CAAEnB,EAAI0F,WAAY,CAACxF,EAAG,MAAM,CAACiB,YAAY,eAAe,CAACjB,EAAG,QAAQ,CAACG,MAAM,CAAC,SAAW,GAAG,MAAQ,IAAI2B,SAAS,CAAC,OAAQ,EAAK,UAAYhC,EAAI2F,eAAezF,EAAG,MAAM,CAACiB,YAAY,kBAAkB,CAACjB,EAAG,MAAM,CAACiB,YAAY,2BAA2B,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAIM,KAAKuB,gBAAgB3B,EAAG,SAAS,CAACiB,YAAY,yBAAyBd,MAAM,CAAC,GAAK,eAAe,MAAQ,MAAM,OAAS,YAAYL,EAAIyC,GAAIzC,EAAI4F,eAAe,UAAUC,EAAOC,IAAe,OAAO5F,EAAG,MAAM,CAACe,IAAI4E,EAAM1E,YAAY,gBAAgB,CAACjB,EAAG,QAAQ,CAACG,MAAM,CAAC,SAAW,IAAI2B,SAAS,CAAC,UAAY8D,KAAgB5F,EAAG,MAAM,CAACiB,YAAY,kBAAkB,CAACjB,EAAG,MAAM,CAACiB,YAAY,2BAA2B,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAI+F,aAAaC,IAAIH,GAAOvC,aAAapD,EAAG,SAAS,CAACiB,YAAY,yBAAyBd,MAAM,CAAC,GAAK,iBAAmBwF,EAAM,MAAQ,MAAM,OAAS,WAAW,KAAI,CAAC3F,EAAG,MAAM,CAACiB,YAAY,eAAe,CAACjB,EAAG,QAAQ,CAACG,MAAM,CAAC,SAAW,GAAG,MAAQ,IAAI2B,SAAS,CAAC,UAAYhC,EAAI2F,aAAalF,GAAG,CAAC,QAAUT,EAAIiG,WAAW/F,EAAG,MAAM,CAACiB,YAAY,kBAAkB,CAACjB,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,IAAML,EAAIM,KAAKmB,UAAUvB,EAAG,MAAM,CAACiB,YAAY,sCAAsC,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAIM,KAAKuB,kBAAkB3B,EAAG,SAAS,CAACiB,YAAY,yBAAyBd,MAAM,CAAC,GAAK,eAAe,MAAQ,MAAM,OAAS,aAAaL,EAAIyC,GAAIzC,EAAI4F,eAAe,UAAUC,EAAOK,IAAe,OAAOhG,EAAG,MAAM,CAACe,IAAI4E,EAAM1E,YAAY,gBAAgB,CAACjB,EAAG,QAAQ,CAACG,MAAM,CAAC,SAAW,IAAI2B,SAAS,CAAC,UAAYkE,KAAgBhG,EAAG,MAAM,CAACiB,YAAY,kBAAkB,CAACjB,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,MAAM,CAAC,IAAML,EAAI+F,aAAaC,IAAIH,GAAOpE,OAASzB,EAAIoD,WAAapD,EAAI+F,aAAaC,IAAIH,GAAOpE,OAASzB,EAAIqD,sBAAsBnD,EAAG,MAAM,CAACiB,YAAY,sCAAsC,CAACnB,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAI+F,aAAaC,IAAIH,GAAOvC,eAAepD,EAAG,SAAS,CAACiB,YAAY,yBAAyBd,MAAM,CAAC,GAAK,iBAAmBwF,EAAM,MAAQ,MAAM,OAAS,YAAY,MAAK,GAAG3F,EAAG,MAAM,CAACiB,YAAY,sCAAsC,CAACjB,EAAG,MAAM,CAACA,EAAG,SAAS,CAACiB,YAAY,kBAAkBV,GAAG,CAAC,MAAQT,EAAImG,WAAW,CAACnG,EAAIqB,GAAG,YAAYnB,EAAG,MAAM,CAACiB,YAAY,wBAAwB,CAACjB,EAAG,OAAO,CAACF,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAIoG,eAAelG,EAAG,SAAS,CAACiB,YAAY,uBAAuBV,GAAG,CAAC,MAAQT,EAAIqG,SAAS,CAACnG,EAAG,OAAO,CAACiB,YAAY,mBAAmBjB,EAAG,OAAO,CAACF,EAAIqB,GAAG,kBAAkBnB,EAAG,YAAYA,EAAG,MAAM,CAAC0C,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO/C,EAAIyF,aAAcxC,WAAW,iBAAiB9B,YAAY,kDAAkD,CAACjB,EAAG,SAAS,CAACiB,YAAY,cAAcV,GAAG,CAAC,MAAQT,EAAIsG,YAAYpG,EAAG,MAAM,CAACF,EAAIqB,GAAGrB,EAAI4B,GAAG5B,EAAIoG,kBAAkB,EACr5S,EACIG,EAAkB,GCFtB,IAAIC,EAAWC,SACf,OACI,CACIC,MAAO,MACPC,SAAU,CACN,CACI,KAAQ,QACR,MAAS,OACT,IAAOH,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,KACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,KACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,OACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,OACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,8BAI9B,CACIE,MAAO,MACPC,SAAU,CACN,CACI,KAAQ,QACR,MAAS,OACT,IAAOH,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,KACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,KACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,IACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,IACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,MACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,OACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,KACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,QACR,MAAS,OACT,IAAOA,EAAW,2BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,OACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,OACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,IACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,IACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,IACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,MACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,OACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,4BAEtB,CACI,KAAQ,SACR,MAAS,KACT,IAAOA,EAAW,+BCtPnB,MAAMI,EACjBC,WAAAA,CAAYC,EAAS,MAKjB7G,KAAK6G,OAASA,GAAkB,CAC5BC,WAAY,CACR,CACIC,KAAM,CAAC,+BAAgC,4BAE3C,CACIA,KAAM,0BACN1D,SAAU,OACV2D,WAAY,UAIxBhH,KAAKiH,YAAc,CACfC,OAAO,EACPC,OAAO,GAGXnH,KAAKoH,UAAY,CAAC,EAClBpH,KAAKqH,IAAM,IAAIC,IACftH,KAAKuH,OAAS,IAClB,CAEAC,YAAAA,CAAaJ,GACT,MAAM,QAACK,EAAO,iBAAEC,EAAgB,eAAEC,EAAc,mBAAEC,GAAsBR,EACxEpH,KAAKoH,UAAUK,QAAUA,EACzBzH,KAAKoH,UAAUM,iBAAmBA,EAClC1H,KAAKoH,UAAUO,eAAiBA,EAChC3H,KAAKoH,UAAUQ,mBAAqBA,CACxC,CAEAC,cAAAA,CAAeZ,GACXjH,KAAKiH,YAAcA,CACvB,CAEA,UAAMa,GACF,IAKI,OAJK9H,KAAKuH,SAENvH,KAAKuH,aAAeQ,UAAUC,aAAaC,aAAajI,KAAKiH,cAE1DjH,KAAKuH,MAChB,CAAE,MAAOW,GAEL,OADAC,QAAQC,MAAMF,GACNA,EAAEtF,MACN,IAAK,gBACDyF,MAAM,uCACN,MACJ,IAAK,gBACL,IAAK,wBAED,MACJ,QACIA,MAAO,4CAA2CH,EAAEI,WACpD,MAER,MAAM,IAAIC,MAAM,oBACpB,CACJ,CAEAC,MAAAA,GAEI,IAAIC,EAAK,IAAIC,kBAAkB1I,KAAK6G,QAChC7F,EAAMhB,KAAK2I,0BA0Df,OAzDA3I,KAAKqH,IAAIuB,IAAI5H,EAAKyH,GAClBA,EAAGI,QAAU,EAAGC,QAAOC,cACnBD,EAAME,SAAW,KAEbhJ,KAAKoH,UAAUK,QAAQzG,EAAK+H,EAAQ,CACvC,EAGLN,EAAGQ,oBAAsBC,UACrB,IAEI,IAAIC,QAAcV,EAAGW,cACrBD,EAAME,IAAMrJ,KAAKsJ,WAAWH,EAAME,WAC5BZ,EAAGc,oBAAoBJ,GAI7BnJ,KAAKoH,UAAUM,iBAAiB1G,EAAKyH,EAAGe,iBAC5C,CAAE,MAAOtB,GACLC,QAAQC,MAAMF,EAClB,GAGJO,EAAGgB,eAAiB,EAAGC,gBAEnB1J,KAAKoH,UAAUO,eAAe3G,EAAK0I,EAAU,EAGjDjB,EAAGkB,2BAA6B,KAC5B,OAAQlB,EAAGmB,oBACP,IAAK,SAED5J,KAAK6J,MAAM7I,GACX,MAEJ,IAAK,SAEDyH,EAAGqB,aACH,MAER,EAGJrB,EAAGsB,0BAA6B7B,IAC5BC,QAAQ6B,IAAI9B,EAAE,EAGlBO,EAAGwB,uBAAyB,KACxB,OAAQxB,EAAGyB,gBACP,IAAK,SAEDlK,KAAK6J,MAAM7I,GACX,MAER,EAGGA,CACX,CAEAmJ,QAAAA,CAASnJ,GACL,IAAIyH,EAAKzI,KAAKqH,IAAItB,IAAI/E,GAEtB,IAAK,MAAM8H,KAAS9I,KAAKuH,OAAO6C,YAC5B3B,EAAG0B,SAASrB,EAAO9I,KAAKuH,OAEhC,CAEAsC,KAAAA,CAAM7I,GACF,IAAIyH,EAAKzI,KAAKqH,IAAItB,IAAI/E,GACtByH,EAAGI,QAAU,KACbJ,EAAG4B,cAAgB,KACnB5B,EAAG6B,eAAiB,KACpB7B,EAAGgB,eAAiB,KACpBhB,EAAGkB,2BAA6B,KAChClB,EAAGwB,uBAAyB,KAC5BxB,EAAGsB,0BAA4B,KAC/BtB,EAAGQ,oBAAsB,KAEzBR,EAAGoB,QACHpB,EAAK,KACLzI,KAAKqH,IAAIkD,OAAOvJ,GAGhBhB,KAAKoH,UAAUQ,mBAAmB5G,EACtC,CAEAwJ,QAAAA,GACIxK,KAAKqH,IAAIoD,SAAQ,CAAChC,EAAIzH,KAClBhB,KAAK6J,MAAM7I,EAAI,IAEnBhB,KAAKqH,IAAIqD,QACT1K,KAAKuH,OAAS,IAClB,CAEAoB,uBAAAA,GACI,OAAO3I,KAAKqH,IAAIjF,IACpB,CAEA,yBAAMuI,CAAoBC,GAEtB,IAAI5J,EAAMhB,KAAKwI,SACXC,EAAKzI,KAAKqH,IAAItB,IAAI/E,SAEhByH,EAAGoC,qBAAqBD,SAIxB5K,KAAK8H,OACX9H,KAAKmK,SAASnJ,GACd,IAAI8J,QAAerC,EAAGsC,eAKtB,OAJAD,EAAOzB,IAAMrJ,KAAKsJ,WAAWwB,EAAOzB,WAC9BZ,EAAGc,oBAAoBuB,GAGtB,CAAC9J,MAAK4J,YAAanC,EAAGe,iBACjC,CAEA,0BAAMwB,CAAqBhK,EAAK4J,GAE5B,IAAInC,EAAKzI,KAAKqH,IAAItB,IAAI/E,GACtB,aAAayH,EAAGoC,qBAAqBD,EACzC,CAEA,8BAAMK,CAAyBjK,EAAK0I,GAChC,IAAIjB,EAAKzI,KAAKqH,IAAItB,IAAI/E,GACtB,aAAayH,EAAGyC,gBAAgBxB,EACpC,CAEAJ,UAAAA,CAAWD,GAEP,OAAOA,EAAI8B,QAAQ,iBAAkB,qDACzC,E,cC3MJ,IAAI5E,EAAWC,SACA,MAAM4E,IA2EpBC,EAAAA,EAAAA,GA3EoBD,EAAQ,SACV,IAAIC,EAAAA,EAAAA,GADFD,EAAQ,iBAEA,GAAE7E,sBAA0B8E,EAAAA,EAAAA,GAFpCD,EAAQ,aAGL,MAAKC,EAAAA,EAAAA,GAHRD,EAAQ,qBAIG,IAAGC,EAAAA,EAAAA,GAJdD,EAAQ,iBAKD,UAAiBC,EAAAA,EAAAA,GALxBD,EAAQ,iBAMD,WAAkBC,EAAAA,EAAAA,GANzBD,EAAQ,gBAOF,WAEvBC,EAAAA,EAAAA,GATiBD,EAAQ,iBAUD,MAAGC,EAAAA,EAAAA,GAVVD,EAAQ,eAWH,MAAGC,EAAAA,EAAAA,GAXRD,EAAQ,gBAYF,MAAGC,EAAAA,EAAAA,GAZTD,EAAQ,mBAaC,MAE1BC,EAAAA,EAAAA,GAfiBD,EAAQ,cAgBJ,MAAIC,EAAAA,EAAAA,GAhBRD,EAAQ,YAiBN,MAAIC,EAAAA,EAAAA,GAjBND,EAAQ,YAkBN,MAAIC,EAAAA,EAAAA,GAlBND,EAAQ,aAmBL,MAAKC,EAAAA,EAAAA,GAnBRD,EAAQ,gBAoBF,MAAIC,EAAAA,EAAAA,GApBVD,EAAQ,aAqBL,MAAKC,EAAAA,EAAAA,GArBRD,EAAQ,gBAsBF,MAAIC,EAAAA,EAAAA,GAtBVD,EAAQ,gBAuBF,MAAIC,EAAAA,EAAAA,GAvBVD,EAAQ,iBAwBD,MAAIC,EAAAA,EAAAA,GAxBXD,EAAQ,cAyBJ,MAAIC,EAAAA,EAAAA,GAzBRD,EAAQ,qBA0BG,MAAIC,EAAAA,EAAAA,GA1BfD,EAAQ,sBA2BI,MAAIC,EAAAA,EAAAA,GA3BhBD,EAAQ,mBA4BC,MAAIC,EAAAA,EAAAA,GA5BbD,EAAQ,oBA6BE,MAE3BC,EAAAA,EAAAA,GA/BiBD,EAAQ,eAgCH,MAAGC,EAAAA,EAAAA,GAhCRD,EAAQ,aAiCL,MAAGC,EAAAA,EAAAA,GAjCND,EAAQ,cAkCJ,MAAGC,EAAAA,EAAAA,GAlCPD,EAAQ,iBAmCD,MAExBC,EAAAA,EAAAA,GArCiBD,EAAQ,eAsCH,MAAGC,EAAAA,EAAAA,GAtCRD,EAAQ,aAuCL,MAAGC,EAAAA,EAAAA,GAvCND,EAAQ,cAwCJ,MAAGC,EAAAA,EAAAA,GAxCPD,EAAQ,iBAyCD,MAExBC,EAAAA,EAAAA,GA3CiBD,EAAQ,cA4CJ,MAAIC,EAAAA,EAAAA,GA5CRD,EAAQ,YA6CN,OAAIC,EAAAA,EAAAA,GA7CND,EAAQ,aA8CL,OAAIC,EAAAA,EAAAA,GA9CPD,EAAQ,gBA+CF,OAEvBC,EAAAA,EAAAA,GAjDiBD,EAAQ,eAkDH,OAAIC,EAAAA,EAAAA,GAlDTD,EAAQ,mBAmDC,OAAIC,EAAAA,EAAAA,GAnDbD,EAAQ,qBAoDG,OAAIC,EAAAA,EAAAA,GApDfD,EAAQ,mBAqDC,OAK1BC,EAAAA,EAAAA,GA1DiBD,EAAQ,aA2DL,MAAGC,EAAAA,EAAAA,GA3DND,EAAQ,WA4DP,MAAGC,EAAAA,EAAAA,GA5DJD,EAAQ,cA6DJ,MAAGC,EAAAA,EAAAA,GA7DPD,EAAQ,cA8DJ,MAAGC,EAAAA,EAAAA,GA9DPD,EAAQ,YA+DN,MAAGC,EAAAA,EAAAA,GA/DLD,EAAQ,WAgEP,MAElBC,EAAAA,EAAAA,GAlEiBD,EAAQ,yBAmEO,MAAGC,EAAAA,EAAAA,GAnElBD,EAAQ,2BAoES,MAElCC,EAAAA,EAAAA,GAtEiBD,EAAQ,QAuEV,MAAGC,EAAAA,EAAAA,GAvEDD,EAAQ,UAwER,MAAGC,EAAAA,EAAAA,GAxEHD,EAAQ,SAyET,MAAGC,EAAAA,EAAAA,GAzEFD,EAAQ,sBA0EI,K,gEC3ElB,MAAME,EACjBC,OAAAA,CAAQC,GACJxL,KAAKwL,KAAOA,CAChB,CAEAC,OAAAA,GACI,OAAOzL,KAAKwL,IAChB,E,gDCLG,MAAME,EACT,aAAOC,CAAOC,GAEV,OAAOC,KAAKC,UAAUF,EAC1B,CAEA,aAAOG,CAAOC,GACV,OAAOH,KAAKI,MAAMD,EAEtB,CAEA,eAAOE,CAASN,GACZ,IAAItI,EAAS,CAAC,EACd,IAAK,IAAItC,KAAO4K,EACZtI,EAAOtC,GAAO4K,EAAI5K,GAEtB,OAAOsC,CACX,CAEA,mBAAO6I,GACH,OAAOC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GAC/C,CAEA,mBAAaC,CAAOC,GAEhB,IAAIC,QAAeD,EAAKE,cACpBC,QAAmBC,OAAOC,OAAOC,OAAO,UAAWL,GACnDM,EAAY1I,MAAM2I,KAAK,IAAIC,WAAWN,IAC1C,OAAOI,EAAUnI,KAAKsI,GAAMA,EAAEb,SAAS,IAAIc,SAAS,EAAG,OAAMC,KAAK,GACtE,EA6BG,SAASC,IACZ,IAAIC,GAAO,IAAIC,MAAOC,UAEtB,OADAF,GAAQG,YAAYC,MACb,uCAAuCxC,QAAQ,SAAS,SAC3DyC,GAEA,IAAIC,GAAQN,EAAuB,GAAhBnB,KAAKC,UAAiB,GAAK,EAE9C,OADAkB,EAAOnB,KAAK0B,MAAMP,EAAO,KACR,MAATK,EAAeC,EAAe,EAAPA,EAAc,GAAKvB,SAAS,GAC/D,GACJ,CApCAyB,OAAOxJ,UAAUyJ,aAAe,SAAUC,EAAQ9C,GAC9C,IAAIa,EAAMhM,KAIV,OAHAiO,EAAOxD,SAAQ,CAAC3H,EAAO9B,KACnBgL,EAAMA,EAAIb,QAAQ,IAAI+C,OAAOpL,EAAO,MAAOqI,EAAQnK,GAAK,IAErDgL,CACX,EAEAwB,KAAKjJ,UAAU4J,OAAS,SAAUA,EAAS,eACvC,IAAIF,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC9C,EAAU,CAACnL,KAAKoO,eAAgBpO,KAAKqO,WAAa,GAAG/B,WAAWc,SAAS,EAAG,KAC5EpN,KAAKsO,UAAUhC,WAAWc,SAAS,EAAG,KAAMpN,KAAKuO,WAAWjC,WAAWc,SAAS,EAAG,KACnFpN,KAAKwO,aAAalC,WAAWc,SAAS,EAAG,KAAMpN,KAAKyO,aAAanC,WAAWc,SAAS,EAAG,KACxFpN,KAAKoO,cAAc9B,WAAWc,SAAS,EAAG,KAAKsB,UAAU,IAC7D,OAAOP,EAAOH,aAAaC,EAAQ9C,EACvC,EAEAqC,KAAKjJ,UAAUoK,UAAY,SAAUR,EAAS,eAC1C,IAAIF,EAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxC9C,EAAU,CAACnL,KAAK4O,kBAAmB5O,KAAK6O,cAAgB,GAAGvC,WAAWc,SAAS,EAAG,KAClFpN,KAAK8O,aAAaxC,WAAWc,SAAS,EAAG,KAAMpN,KAAK+O,cAAczC,WAAWc,SAAS,EAAG,KACzFpN,KAAKgP,gBAAgB1C,WAAWc,SAAS,EAAG,KAAMpN,KAAKiP,gBAAgB3C,WAAWc,SAAS,EAAG,KAC9FpN,KAAK4O,iBAAiBtC,WAAWc,SAAS,EAAG,KAAKsB,UAAU,IAChE,OAAOP,EAAOH,aAAaC,EAAQ9C,EACvC,EC1De,MAAM+D,EACjBtI,WAAAA,GACI5G,KAAKmP,QAAUnP,KAAKoP,aACpBpP,KAAKqP,KAAOrP,KAAKsP,OACrB,CAEAA,OAAAA,GAAW,CAEXF,UAAAA,GAAc,ECHX,MAAMG,UAAuBjE,EAChC9E,OAAAA,CAAQgJ,EAAIC,GACR,OAAQA,EAAKC,MAGT,KAAKtE,EAASuE,aACd,KAAKvE,EAASwE,WACd,KAAKxE,EAASyE,UACd,KAAKzE,EAAS0E,WACV,MACJ,KAAK1E,EAAS2E,cACVP,EAAGQ,OAAOjM,KAAK,eACf,MACJ,KAAKqH,EAAS6E,eACVT,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAMX,EAAKA,KACXC,KAAM,UAEV,MACJ,KAAKtE,EAASiF,WACd,CACI,IAAIhQ,EAAOoP,EAAKpP,KAEhBmP,EAAGQ,OAAOM,KAAK,eAEfd,EAAGnP,KAAK6B,GAAK7B,EAAK6C,QAClBsM,EAAGnP,KAAKuB,YAAcvB,EAAKgD,SAC3BmM,EAAGnP,KAAKmB,OAASnB,EAAKmB,OAASgO,EAAGrM,WAAa9C,EAAKmB,OAAS4J,EAASmF,eAEtEf,EAAGgB,UAAU,OAAQ3E,KAAKC,UAAU0D,EAAGnP,OACvCmP,EAAGiB,aAAa7H,IAAIvI,EAAK6C,QAAS7C,GAClCmP,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAO,GAAEZ,EAAGnP,KAAKuB,mBACjB8N,KAAM,YAIVF,EAAGkB,YAAYtF,EAASuF,mBAGxBnB,EAAGkB,YAAYtF,EAASwF,kBAGxBpB,EAAGkB,YAAYtF,EAASyF,WACxB,KACJ,CACA,KAAKzF,EAASyF,UACd,CACI,IAAIC,EAAQrB,EAAKqB,MACjB,IAAK,IAAIzQ,KAAQyQ,EACbtB,EAAGiB,aAAa7H,IAAIvI,EAAK6C,QAAS7C,GAEtC,KACJ,CACA,KAAK+K,EAAS2F,YACd,CACI,IAAI1Q,EAAOoP,EAAKpP,KAEhBmP,EAAGwB,GAAGC,cAAc,CAChB/O,GAAIoL,IACJ4D,OAAQ,UACRxB,KAAM,QACNyB,SAAU1B,EAAK2B,UACfC,QAAU,MAAKhR,EAAKgD,iBACpBiO,YAAa,MACd,GACC9B,EAAGnP,KAAK6B,KAAO7B,EAAK6C,YAClBsM,EAAGnN,aACLhC,EAAKoB,WAAY,EACjB+N,EAAGiB,aAAa7H,IAAIvI,EAAK6C,QAAS7C,GAClCmP,EAAG+B,cAAclR,EAAK6C,QAAS,CAACzB,WAAW,IAC3C+N,EAAG+B,cAAc,IAAK,CAAClP,aAAamN,EAAGnN,aAAcd,OAAQ,QAEjE,KACJ,CACA,KAAK6J,EAASuF,kBACVnB,EAAGnN,aAAeoN,EAAKA,KACvBD,EAAG+B,cAAc,IAAK,CAAClP,aAAamN,EAAGnN,eACvC,MACJ,KAAK+I,EAASoG,UACd,CACI,IAAInR,EAAOoP,EAAKpP,KACZmP,EAAGnP,KAAK6B,KAAO7B,EAAK6C,UACpBsM,EAAGwB,GAAGC,cAAc,CAChB/O,GAAIoL,IACJ4D,OAAQ,UACRxB,KAAM,QACNyB,SAAU1B,EAAK2B,UACfC,QAAU,MAAKhR,EAAKgD,iBACpBiO,YAAa,IACbG,SAAU,KACX,GACHjC,EAAGnN,aAAe+J,KAAKsF,MAAMlC,EAAGnN,aAAc,GAC9CmN,EAAGiB,aAAalG,OAAOlK,EAAK6C,SAC5BsM,EAAG+B,cAAc,IAAK,CAAClP,aAAamN,EAAGnN,aAAcd,OAAQ,OAC7DiO,EAAG+B,cAAclR,EAAK6C,QAAS,CAACzB,WAAW,KAE/C,KACJ,CACA,KAAK2J,EAASuG,WACd,CACI,IAAItR,EAAOoP,EAAKpP,KACZ6C,EAAU7C,EAAK6C,QACnBsM,EAAGoC,QAAQvR,GAEX,IAAIwR,EAAUrC,EAAGsC,WAAW/L,IAAI7C,GAC5B2O,GACAA,EAAQxR,GAEZ,KACJ,CACA,KAAK+K,EAAS2G,cACd,KAAK3G,EAAS4G,YACd,KAAK5G,EAAS6G,cAEVzC,EAAGnP,KAAK6R,UAAY,EACpB1C,EAAG9L,gBAAkB8L,EAAG9L,gBAAkB+L,EAAKA,KAC/CD,EAAGQ,OAAOjM,KAAK,oBACf,MAGJ,KAAKqH,EAAS+G,oBAAqB,CAC/B3C,EAAGnP,KAAKmB,OAASgO,EAAGrM,WAAasM,EAAKA,KAEtCD,EAAGgB,UAAU,OAAQ3E,KAAKC,UAAU0D,EAAGnP,OAEvC,IAAIA,EAAOmP,EAAGiB,aAAa1K,IAAIyJ,EAAGnP,KAAK6B,IACvC7B,EAAKmB,OAASiO,EAAKA,KACnBD,EAAGiB,aAAa7H,IAAI4G,EAAGnP,KAAK6B,GAAI7B,GAChCmP,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAM,SACNV,KAAM,YAEV,KACJ,CACA,KAAKtE,EAASgH,iBACV5C,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAM,SACNV,KAAM,SAEV,MAIJ,KAAKtE,EAASiH,eACd,KAAKjH,EAASkH,cACd,KAAKlH,EAASmH,aACd,KAAKnH,EAASoH,YACd,KAAKpH,EAASqH,aACd,KAAKrH,EAASsH,YACd,KAAKtH,EAASuH,YACd,KAAKvH,EAASwH,WACd,CACI,IAAIC,EAAYpD,EAAKoD,UACrB,GAAIA,IAAcrD,EAAGnP,KAAK6B,GAAI,OAG9B,IAAI4Q,EAAcrD,EAAKqD,YACnB7Q,EAAW6Q,GAAgBA,IAAgBtD,EAAGnP,KAAK6B,GACvD,GAAID,EAAU,CACV,IAAIX,EAAUkO,EAAGwB,GAAG+B,YAAYD,GAChC,IAAKxR,EAAS,CACVkO,EAAGkB,YAAYtF,EAAS4H,iBAAkB,IAAKF,GAC/C,IAAIG,EAAU,IAAIC,SAASrB,IACvBrC,EAAG2D,iBAAiBvK,IAAIkK,EAAajB,EAAQ,IAEjDoB,EAAQG,MAAMjD,IACVX,EAAG2D,iBAAiB5I,OAAO4F,EAAMjO,IAEjCsN,EAAG6D,gBAAgBlD,EAAM,GAEjC,CACJ,CAGAX,EAAG8D,aAAaT,GAAYxS,IACxBmP,EAAG+D,mBAAmBlT,GACtBmP,EAAGgE,eAAe/D,EAAMpP,EAAK,IAEjC,KACJ,CAEA,KAAK+K,EAASqI,uBACd,KAAKrI,EAASsI,yBACd,CACI,IAAIC,EAAalE,EAAKqD,YAClBjB,EAAUrC,EAAGoE,UAAU7N,IAAI4N,GAC3B9B,GACAA,EAAQpC,GAEZ,KACJ,CAGA,KAAKrE,EAASyI,oBACd,CAEI,IAAIhC,EAAUrC,EAAGsE,YAAY/N,IAAI0J,EAAKA,KAAKsE,MAC3ClC,EAAQpC,EAAKA,MACb,KACJ,CAGA,KAAKrE,EAAS4I,MACd,KAAK5I,EAAS6I,QACd,KAAK7I,EAAS8I,OAEV1E,EAAGgE,eAAe/D,GAClB,MAGJ,QAEIzP,KAAKwL,KAAKhF,QAAQgJ,EAAIC,GACtB,MAGZ,EAGG,MAAM0E,UAAyBjF,EAClCI,OAAAA,GACI,MAAO,CACH0B,GAAI,KACJoD,WAAY5N,iCACZrD,WAAYqD,2BACZpD,mBAAoBgI,EAASmF,eAC7BjQ,MAAO+T,OAAOC,WAAa,GAC3B/T,OAAQ8T,OAAOE,YAAc,GAC7BlR,SAAU,GACVG,SAAU,GACVnD,KAAM,CAAC6B,GAAI,EAAGN,YAAa,GAAIJ,OAAQ4J,EAASmF,eAAgB2B,UAAW,GAC3EsC,OAAQ,KACRC,gBAAiB,EACjB/Q,gBAAiB,GACjBrB,aAAc,EACdoO,aAAc,IAAInJ,IAClBsM,UAAW,IAAItM,IACfoN,UAAW,IAAIpN,IACfwK,WAAY,IAAIxK,IAChBwM,YAAa,IAAIxM,IACjBqN,kBAAmB,IAAIrN,IACvB6L,iBAAkB,IAAI7L,IACtB3D,OAAQ,GACRG,WAAY,CACRC,MAAM,GAGlB,CAEAqL,UAAAA,GACI,MAAO,CAEHwF,MAAAA,GAEI,IAAIvU,EAAOwL,KAAKI,MAAMjM,KAAK6U,UAAU,SACjB,kBAATxU,GACPL,KAAKK,KAAK6B,GAAK7B,EAAK6B,GACpBlC,KAAKK,KAAKuB,YAAcvB,EAAKuB,YAC7B5B,KAAKK,KAAKmB,OAASnB,EAAKmB,OAASnB,EAAKmB,OAAS4J,EAASmF,eACxDvQ,KAAK0Q,YAAYtF,EAASiF,aAE1BrQ,KAAKgQ,OAAOjM,KAAK,cAEzB,EACA+Q,SAAAA,CAAUxM,GACN,IAAImH,EAAO/D,EAAWK,OAAOzD,EAAQ+G,MACrCI,EAAK2B,UAA6B,IAAjB3B,EAAK2B,UACtBpR,KAAK+U,MAAM,UAAWtF,GACtBzP,KAAKgQ,OAAOM,KAAK,oBACjBtQ,KAAKgV,gBAAgBxO,QAAQxG,KAAMyP,EACvC,EACAwF,OAAAA,GAEI,IAAKjV,KAAKK,KAAK6R,UAAW,OAC1B,GAAIlS,KAAKwU,OAAOU,aAAeC,UAAUC,KAAM,OAI/C,IAAIC,EAFJrV,KAAK0D,iBAAmB,IAAI8J,MAAQW,SAAW,cAC/CnO,KAAKgQ,OAAOjM,KAAK,oBAEjB,IAAIuR,EAAUA,KACV,IAEI,GAAItV,KAAKyU,iBAAmBrJ,EAASmK,WAOjC,OANAlB,OAAOmB,cAAcH,GACrBrV,KAAKkQ,QAAQ,CACTC,MAAO,MACPC,KAAM,iBACNV,KAAM,SAEH1P,KAAKgQ,OAAOM,KAAK,oBAE5B,GAAItQ,KAAKwU,OAAOU,aAAeC,UAAUC,KASrC,OARAf,OAAOmB,cAAcH,GACrBrV,KAAKwU,OAAOiB,iBAAiB,UAAWzV,KAAK8U,WAC7C9U,KAAKwU,OAAOiB,iBAAiB,QAASzV,KAAKiV,SAC3CjV,KAAKwU,OAAOiB,iBAAiB,QAASzV,KAAK0V,SAE3C1V,KAAK4U,SAEL5U,KAAKyU,gBAAkB,EAChBzU,KAAKgQ,OAAOM,KAAK,oBAE5BtQ,KAAKwU,OAAS,IAAIW,UAAUnV,KAAKoU,YACjCpU,KAAKwU,OAAOmB,WAAa,cACzB3V,KAAKyU,iBACT,CAAE,MAAOvM,GACLlI,KAAK+U,MAAM7M,EACf,GAEJmN,EAAQhB,OAAOuB,YAAYN,EAAS,IACxC,EACAI,OAAAA,CAAQxN,GACJlI,KAAK+U,MAAM7M,GACXlI,KAAKkQ,QAAQ,CACTC,MAAO,MACPC,KAAM,UACNV,KAAM,SAEd,EAGA5N,UAAAA,CAAWsP,GACP,IAAIyE,EAAO,IAAIrI,KAAK4D,GAChB0E,GAAa,IAAItI,MAAQC,UAAYoI,EAAKpI,UAAY,MACtDU,EAAS2H,EAAW,MAAQ,YAChC,OAAOD,EAAK1H,OAAOA,EACvB,EACA4G,KAAAA,GACI,IAAK3J,EAAS2K,MACV,OACJ,IAAIpI,GAAO0G,OAAO3G,YAAYC,MAAQ,KAAMqI,QAAQ,GACpD7N,QAAQgI,MAAMxC,GACdxF,QAAQ6B,OAAOiM,WACf9N,QAAQ+N,UACZ,EACArB,SAAAA,CAAUjS,GACN,IAAIuT,EAASvT,EAAO,IAChBwT,EAAKC,SAASC,OAAOC,MAAM,KAC/B,IAAK,IAAIC,KAAKJ,EAAI,CACd,MAAuB,MAAhBI,EAAEC,OAAO,GACZD,EAAIA,EAAE9H,UAAU,EAAG8H,EAAEE,QAEzB,GAA0B,IAAtBF,EAAEG,QAAQR,GACV,OAAOS,SAASJ,EAAE9H,UAAUyH,EAAOO,OAAQF,EAAEE,QAErD,CACA,OAAO,CACX,EACAlG,SAAAA,CAAU5N,EAAME,GACZ,IAAI+T,EAAM,IAAIrJ,KACdqJ,EAAIC,QAAQD,EAAIpJ,UAA0C,GAA9BrC,EAAS2L,mBAA0B,GAAK,GAAK,KACzEV,SAASC,OAAS1T,EAAO,IAAMoU,OAAOlU,GAAS,YAAc+T,EAAII,aACrE,EACAvG,WAAAA,CAAYhB,EAAMoD,EAAc,IAAKrD,EAAO,KAAMvN,EAAK,GAAIgV,EAAW,IAClE,IAAIC,EAAW,CACXzH,KAAMtE,EAASiH,eACfS,YAAa,IACbrD,KAAM,GACNyH,SAAUA,GAAsBxL,EAAWS,gBAE3CkD,EAAO+H,OAAOC,OAAOF,EAAU,CAC/BzH,OACAmD,UAAW7S,KAAKK,KAAK6B,GACrB4Q,cACArD,SAEAvN,IAAImN,EAAKnN,GAAKA,GAClBlC,KAAK+U,MAAM,OAAQ1F,GACnBrP,KAAKwU,OAAO3T,KAAK6K,EAAWC,OAAO0D,GACvC,EACAiI,YAAAA,CAAa7H,EAAM8H,EAAS,MACxB,IAAIrV,EAAIwN,EAAM2B,EAASmG,EAAUC,EAgE7BnG,EA9DJ,OADApP,EAAKuN,EAAKvN,GACFuN,EAAKC,MACT,KAAKtE,EAASiH,eACd,KAAKjH,EAASuE,aACd,KAAKvE,EAASkH,cAEV5C,EAAO,OACP2B,EAAU5B,EAAKA,KACf+H,EAAW,EACXC,EAAW,GACX,MAEJ,KAAKrM,EAASmH,aACd,KAAKnH,EAASwE,WACd,KAAKxE,EAASoH,YAEV9C,EAAO,QACP2B,EAAUrR,KAAKmD,WAAasM,EAAKA,KAAKiI,KACtCF,EAAW/H,EAAKA,KAAKrN,KACrBqV,EAAWhI,EAAKA,KAAK7M,KACrB,MAEJ,KAAKwI,EAASuH,YACd,KAAKvH,EAASyE,UACd,KAAKzE,EAASwH,WAEVlD,EAAO,OACP2B,EAAUrR,KAAKmD,WAAasM,EAAKA,KAAKiI,KACtCF,EAAW/H,EAAKA,KAAKrN,KACrBqV,EAAWhI,EAAKA,KAAK7M,KACrB,MAEJ,KAAKwI,EAASqH,aACd,KAAKrH,EAAS0E,WACd,KAAK1E,EAASsH,YAEVhD,EAAO,QACP2B,EAAUrR,KAAKmD,WAAasM,EAAKA,KAAKiI,KACtCF,EAAW/H,EAAKA,KAAKrN,KACrBqV,EAAWhI,EAAKA,KAAK7M,KACrB,MAEJ,KAAKwI,EAASuM,aACd,CACIjI,EAAO,QACP,IAAIkI,EAAcL,EAAOrU,UAAYlD,KAAKK,KAAK6B,GAAM,IAAMqV,EAAOlU,SAClEgO,EAAUuG,EAAa,QACvBJ,EAAW,EACXC,EAAW,GACX,KACJ,CACA,KAAKrM,EAAS4I,MACd,KAAK5I,EAAS6I,QACd,KAAK7I,EAAS8I,OAEVhS,EAAKoL,IACLoC,EAAO,QACP2B,EAAU5B,EAAKA,KACf+H,EAAW,EACXC,EAAW,GACX,MAIR,OAAQhI,EAAKC,MACT,KAAKtE,EAASkH,cACd,KAAKlH,EAASoH,YACd,KAAKpH,EAASwH,WACd,KAAKxH,EAASsH,YAEVpB,EAAc7B,EAAKoD,UACnB,MAEJ,QAEIvB,EAAc7B,EAAKqD,YACnB,MAGR,MAAO,CACH5Q,GAAIA,EACJgP,OAAQ,UACRxB,OACAyB,SAAU1B,EAAK2B,UACfC,UACAC,cACAkG,WACAC,WACAhG,SAAU,CAENvP,GAAIuN,EAAKoD,UACTjR,YAAa2V,EAASA,EAAOlU,SAAW,GACxC7B,OAAQ+V,GAAUA,EAAO/V,OAASxB,KAAKmD,WAAaoU,EAAO/V,OAAS4J,EAASmF,gBAGzF,EACAiD,cAAAA,CAAe/D,EAAM8H,EAAS,MAC1B,IAAIM,EAAS7X,KAAKsX,aAAa7H,EAAM8H,GACrCvX,KAAK+U,MAAM,SAAU8C,GACrB7X,KAAKgR,GAAGC,cAAc4G,GAAQ,EAElC,EACAtG,aAAAA,CAAcoC,EAAYmE,GACtB9X,KAAKgR,GAAGO,cAAc,CAClBrP,GAAIyR,KACDmE,GAEX,EACAvE,kBAAAA,CAAmBlT,EAAM0X,EAAc,IACnC,IAAI1I,EAAO,CACPnN,GAAI7B,EAAK6C,QACTtB,YAAavB,EAAKgD,SAClB7B,OAAQnB,EAAKmB,OAASxB,KAAKmD,WAAa9C,EAAKmB,OAAS4J,EAASmF,eAC/DvO,YAAa+V,EACbnS,MAAO,WAGP3D,UAAU,EACVR,UAAWpB,EAAKoB,UAChBuW,aAAc,IAAIxK,MAAQC,UAAYC,YAAYC,OAAS,KAE/D3N,KAAKgR,GAAGiH,cAAc5I,EAC1B,EACAuC,OAAAA,CAAQvR,GACJ,OAAOL,KAAKyQ,aAAa7H,IAAIvI,EAAK6C,QAAS7C,EAC/C,EACA6X,OAAAA,CAAQhV,GACJ,OAAOlD,KAAKyQ,aAAa1K,IAAI7C,EACjC,EACAoQ,YAAAA,CAAapQ,EAASc,EAAW,IAAImU,UACjC,IAAI9X,EAAOL,KAAKkY,QAAQhV,GACxB,GAAI7C,EACA2D,EAAS3D,OACN,CACHL,KAAK0Q,YAAYtF,EAASuG,WAAYzO,EAASA,GAC/C,IAAI+P,EAAU,IAAIC,SAASrB,IACvB7R,KAAK8R,WAAWlJ,IAAI1F,EAAS2O,EAAQ,IAEzCoB,EAAQG,MAAM/S,IACVL,KAAK8R,WAAWvH,OAAOlK,EAAK6C,SAE5BlD,KAAKuT,mBAAmBlT,GACjBA,KACR+S,KAAKpP,EACZ,CACJ,EACAqP,eAAAA,CAAgBlD,EAAO4H,EAAc,GAAI5V,EAAU,IAAImF,KACnD,IAAI+H,EAAO,CACPnN,GAAIiO,EAAMjO,GACVN,YAAauO,EAAMvN,KACnBpB,OAAQ2O,EAAM3O,OAASxB,KAAKmD,WAAagN,EAAM3O,OAAS4J,EAASmF,eACjEvO,YAAa+V,EACbnS,MAAO,QAGPvD,aAAc,EACdJ,UAAU,EACVE,QAASA,EACT6V,aAAc,IAAIxK,MAAQC,UAAYC,YAAYC,OAAS,KAE/D3N,KAAKgR,GAAGiH,cAAc5I,EAC1B,EAGA5L,KAAAA,CAAMyE,GACFA,EAAEkQ,iBACF,IAAI/U,EAAWrD,KAAKqD,SAASgV,OAC7B,OAAIhV,EAASqT,OAAS,GAClB1W,KAAKkQ,QAAQ,CACTC,MAAO,MACPC,KAAM,aACNV,KAAM,WAEH,IAGX1P,KAAKwU,OAAO3T,KAAK6K,EAAWC,OAAO,CAC/B+D,KAAMtE,EAAS2E,cACf1M,SAAUA,EAASkJ,OAAO,EAAG,IAC7B/I,SAAUxD,KAAKwD,SAAWxD,KAAKwD,SAAW,aAEvC,EACX,EACA/C,UAAAA,CAAWa,EAASkK,GAChB,IAAIwM,EAAc1W,EAAQ0W,WAAa,EAAK1W,EAAQ0W,aAAe,IAAIxK,MAAQC,UAAYC,YAAYC,OAAS,IAC5G+B,EAAOpO,EAAQW,SAAWmJ,EAASqI,uBAAyBrI,EAASsI,yBAErET,EAAU,IAAIC,SAAQ,CAACrB,EAASyG,KAChC,IACItY,KAAK0Q,YAAYhB,EAAMpO,EAAQY,GAAI8V,GACnChY,KAAK4T,UAAUhL,IAAItH,EAAQY,GAAI2P,EACnC,CAAE,MAAO3J,GACLoQ,EAAOpQ,GACPlI,KAAK+U,MAAM7M,EACf,KAEJ+K,EAAQG,MAAM3D,IACV,IAAI8I,EAAgB,IAAIC,IACpB7E,EAAalE,EAAKqD,YAClB2F,EAAOhJ,EAAKA,KAChBzP,KAAK4T,UAAUrJ,OAAOoJ,GAEtB8E,EAAK/B,SAAWpV,EAAQ0W,WAAaS,EAAK,GAAGrH,UAAY,MAGzD,IAAK,IAAIsH,KAAOD,EAAM,CAClB,IAAI5F,EAAY6F,EAAI7F,UAChBxS,EAAOL,KAAKkY,QAAQrF,GACnBxS,GACDkY,EAAcI,IAAI9F,EAE1B,CACA,IAAI+F,EAAe,GACnBL,EAAc9N,SAASvH,IACnB,IAAI2V,EAAW,IAAI3F,SAASrB,IACxB7R,KAAK8R,WAAWlJ,IAAI1F,EAAS2O,GAC7B7R,KAAK0Q,YAAYtF,EAASuG,WAAYzO,EAAS,GAAI,GAAIA,EAAQ,IAEnE2V,EAASzF,MAAM/S,IACXL,KAAKuT,mBAAmBlT,EAAK,IAEjCuY,EAAaE,KAAKD,EAAS,IAG/B3F,QAAQ6F,IAAIH,GAAcxF,MAAK,KAC3B,IAAI4F,EAAW,GACf,IAAK,IAAIN,KAAOD,EAAM,CAClB,IAAI5F,EAAY6F,EAAI7F,UAChBxS,EAAOL,KAAKkY,QAAQrF,GACxB6F,EAAItH,UAA4B,IAAhBsH,EAAItH,UACpB4H,EAASF,KAAK9Y,KAAKsX,aAAaoB,EAAKrY,GACzC,CACA,IAAI4Y,EAAUR,EAAK/B,OAAS,GAE5BlL,EAAKwN,EAAUC,GAGfV,EAAc9N,SAASvH,IACnBlD,KAAK8R,WAAWvH,OAAOrH,EAAQ,GACjC,GACJ,GAEV,EAEArC,IAAAA,CAAKyH,EAASkD,EAAM0N,GAChB,IAII,GAHAlZ,KAAK+U,MAAM,QAASzM,EAAS4Q,GAGzBA,EAAM,CACN,IAAIC,EAAc,CACd,cAEAA,EAAYC,SAASF,EAAKxJ,QAC1BpH,EAAQoH,KAAO,QAEvB,CAEA,IAmBI2J,EAnBAvG,EAAcxK,EAAQgJ,YACtBhQ,EAAUtB,KAAKgR,GAAG+B,YAAYD,GAC9BwG,GAAehY,EAAQW,SAAW,EAClCsX,EAAW,CACX,MAAS,CAACnO,EAASmH,aAAcnH,EAASoO,gBAC1C,KAAQ,CAACpO,EAASuH,YAAavH,EAASqO,eACxC,KAAQ,CAACrO,EAASiH,eAAgBjH,EAASsO,kBAC3C,MAAS,CAACtO,EAASqH,aAAcrH,EAASuO,iBAE1CjK,EAAO6J,EAASjR,EAAQoH,MAAM4J,GAGlC,IAAKJ,EAED,OADAlZ,KAAK0Q,YAAYhB,EAAMoD,EAAaxK,EAAQ+I,QAAS/I,EAAQpG,IACtDsJ,IAMX,OAAQlD,EAAQoH,MACZ,IAAK,QACL,QACI2J,EAAajO,EAASwO,eACtB,MACJ,IAAK,QACDP,EAAajO,EAASyO,eACtB,MACJ,IAAK,OACDR,EAAajO,EAAS0O,cACtB,MAER,GAAIZ,EAAK9W,KAAOiX,EAMZ,OALArZ,KAAKkQ,QAAQ,CACTC,MAAO,MACPC,KAAM,YAAeiJ,EAAa,QAAa,IAC/C3J,KAAM,UAEHlE,EAAK,CAAC0F,OAAO,WAGxBlR,KAAKwU,OAAO3T,KAAKqY,GACjB,IAAIa,EAAazR,EAAQpG,GACrB8X,EAAUtO,EAAWc,OAAO0M,GAChCc,EAAQ5G,MAAMW,GACH,IAAIb,SAASrB,IAChB7R,KAAK8T,YAAYlL,IAAImL,EAAMlC,EAAQ,MAExCuB,MAAM6G,IACL,IAAI,KAAClG,EAAI,KAAE2D,GAAQuC,EACnBja,KAAK8T,YAAYvJ,OAAOwJ,GACxB,IAAI1E,EAAO,CACPzM,KAAMsW,EAAKtW,KACX8U,OACAtV,KAAM8W,EAAK9W,MAEfpC,KAAK0Q,YAAYhB,EAAMoD,EAAazD,EAAM/G,EAAQpG,IAElDlC,KAAKgR,GAAGkJ,cAAc,CAClBhY,GAAI6X,EACJ1I,QAASrR,KAAKmD,WAAauU,IAE/BlM,GAAM,GAEd,CAAE,MAAOtD,GACLlI,KAAK+U,MAAM7M,GACXsD,EAAK,CAAC0F,OAAO,UACjB,CACJ,EAGA3O,YAAAA,GAEIvC,KAAKgR,GAAGmJ,aAAa,CACjBC,SAAU,cACVC,QAAS,GACT/Z,MAAO,IACPC,OAAQP,KAAKsa,IAAIC,aAAe,IAExC,EAGA7Z,YAAAA,CAAawH,EAAGlH,EAAKsH,GACjB,IAAIqL,EAAarL,EAAQgJ,YAKzB,OAHAtR,KAAKuR,cAAcoC,EAAY,CAACpS,OAAQ,IAExCvB,KAAK+U,MAAM7M,EAAGlH,EAAKsH,GACXA,EAAQoH,MACZ,IAAK,QAED1P,KAAKwa,aAAalS,EAAQ+I,SAC1B,MAEJ,IAAK,OAEDgD,OAAOvM,KAAKQ,EAAQ+I,SACpB,MAGZ,EAGA1Q,aAAAA,CAAcW,GACV,IAAIqS,EAAarS,EAAQY,GAEzB,GADAlC,KAAKuR,cAAcoC,EAAY,CAACpS,OAAQ,IACpCD,EAAQW,UAAY0R,IAAerS,EAAQa,QAAQC,KAAM,CAEzD,IAAIqY,EAAW9G,EACf3T,KAAK0Q,YAAYtF,EAASsP,mBAAoB,EAAGD,GAEjD,IAAIxH,EAAU,IAAIC,SAASrB,IACvB7R,KAAK2U,kBAAkB/L,IAAI6R,EAAU5I,EAAQ,IAEjDoB,EAAQG,MAAMjR,IACVA,EAAQsI,SAASkQ,IACbrZ,EAAQa,QAAQyG,IAAI+R,EAAOzX,QAASyX,EAAO,IAE/C3a,KAAK4a,cAAc,GAE3B,CACJ,EAGAJ,YAAAA,CAAaK,GACT,IAAIlX,EAAS0S,SAASyE,iBAAiB,0CACnClV,EAAQ,EACZ5F,KAAK2D,OAAS,GACdA,EAAO8G,SAAQ,CAACsQ,EAAOC,KACnBhb,KAAK2D,OAAOmV,KAAKiC,EAAME,KACnBF,EAAME,MAAQJ,IACdjV,EAAQoV,EACZ,IAEJhb,KAAKkb,WAAW,CACZvX,OAAQ3D,KAAK2D,OACbe,QAAS,CACLyW,SAAS,EACTC,iBAAkBxV,IAG9B,EAGAyV,UAAAA,GACI,MAAO,EACX,EAGAC,gBAAAA,GAAoB,EAGpB1a,YAAAA,GACIZ,KAAK8D,WAAWC,MAAO,CAC3B,EAEAH,WAAAA,CAAY2X,GACRC,MAAMD,GACDnI,MAAKqI,GAAOA,EAAIhP,SAChB2G,MAAK3G,IACF,IAAIuN,EAAUtO,EAAWc,OAAOC,GAEhC,OADAzM,KAAKwU,OAAO3T,KAAK4L,GACVuN,CAAO,IACf5G,MAAMW,GAEF,IAAIb,SAASrB,IAChB7R,KAAK8T,YAAYlL,IAAImL,EAAMlC,EAAQ,MAExCuB,MAAM6G,IAEL,IAAI,KAACvC,EAAI,KAAEtV,EAAI,KAAE2R,GAAQkG,EACzBja,KAAK8T,YAAYvJ,OAAOwJ,GACxB/T,KAAK0Q,YAAYtF,EAASsQ,mBAAoB,IAAK,CAAChE,OAAMtV,QAAM,IACjEuZ,OAAOzT,IACNlI,KAAK+U,MAAM7M,EAAE,GAErB,EAER,EC9yBG,MAAM0T,UAAqBtQ,EAC9B9E,OAAAA,CAAQgJ,EAAIC,GACR,OAAQA,EAAKC,MAET,KAAKtE,EAASuM,aACd,CACI,IAAIxH,EAAQV,EAAKA,KACjBD,EAAGqM,OAAOjT,IAAIuH,EAAMjO,GAAIiO,GAExBX,EAAG6D,gBAAgBlD,GAEnB,IAAI2L,EAAW3L,EAAM2L,SAErBtM,EAAG8D,aAAawI,GAAWzb,IACvBmP,EAAGgE,eAAe/D,EAAMpP,EAAK,IAEjC,KACJ,CACA,KAAK+K,EAASwF,iBACd,CACI,IAAIiL,EAASpM,EAAKA,KAClB,IAAK,IAAIgL,KAAYrD,OAAO2E,KAAKF,GAAS,CACtC,IAAI1L,EAAQ0L,EAAOpB,GACnBtK,EAAMjO,GAAKuY,EACXjL,EAAGqM,OAAOjT,IAAI6R,EAAUtK,GACxBX,EAAG6D,gBAAgBlD,EAAO,IAC9B,CACA,KACJ,CACA,KAAK/E,EAASsP,mBACd,CACI,IAAIrL,EAAOI,EAAKA,KACZgL,EAAWpL,EAAKoL,SAChBtY,EAAUkN,EAAKlN,QACf0P,EAAUrC,EAAGmF,kBAAkB5O,IAAI0U,GACnC5I,GACAA,EAAQ1P,GAEZ,KACJ,CACA,KAAKiJ,EAAS4H,iBACd,CACI,IAAI3D,EAAOI,EAAKA,KACZgL,EAAWpL,EAAKnN,GAChB2P,EAAUrC,EAAG2D,iBAAiBpN,IAAI0U,GAClC5I,GACAA,EAAQxC,GAEZ,KACJ,CACA,QAEIrP,KAAKwL,KAAKhF,QAAQgJ,EAAIC,GACtB,MAGZ,EAGG,MAAMuM,UAAuB9M,EAChCI,OAAAA,GACI,MAAO,CACHnL,WAAY,GACZc,sBAAuB,IAAIqC,IAC3BjC,mBAAoB,IAAIiC,IACxBlD,aAAc,GACdgB,cAAe,GACfyW,OAAQ,IAAIvU,IAEZvE,WAAY,CACR,CACIqN,KAAM,MACN6L,QAASC,GACEA,EAAS5a,QAAQ4B,UAAYlD,KAAKK,KAAK6B,GAElDia,MAAOA,CAACjU,EAAGgU,EAAU5L,KACjB,MAAM,KAAE8L,EAAI,QAAE9a,GAAY4a,EAC1BE,EAAKC,QAAQ9I,mBAAmBjS,EAAS,QACzC8a,EAAKzb,cAAcW,EAAQ4B,SAC3BoN,IACA8L,EAAKE,aAAa,IAKtC,CAEAlN,UAAAA,GACI,MAAO,CAEHjO,QAAAA,GACInB,KAAKmE,WAAa,GAClBnE,KAAKiF,sBAAwB,IAAIqC,IAAItH,KAAKyQ,cAC1CzQ,KAAKiF,sBAAsBsF,OAAOvK,KAAKK,KAAK6B,IAC5ClC,KAAKqF,mBAAmBqF,QACxB1K,KAAKgQ,OAAOjM,KAAK,cACrB,EACAmB,UAAAA,GACIlF,KAAKoF,cAAcqF,SAASvH,IACxB,IAAI7C,EAAOL,KAAKqF,mBAAmBU,IAAI7C,GACvClD,KAAKiF,sBAAsB2D,IAAI1F,EAAS7C,GACxCL,KAAKqF,mBAAmBkF,OAAOrH,EAAQ,IAE3ClD,KAAK4a,cACT,EACAzV,WAAAA,GACInF,KAAKoE,aAAaqG,SAASvH,IACvB,IAAI7C,EAAOL,KAAKiF,sBAAsBc,IAAI7C,GAC1ClD,KAAKqF,mBAAmBuD,IAAI1F,EAAS7C,GACrCL,KAAKiF,sBAAsBsF,OAAOrH,EAAQ,IAE9ClD,KAAK4a,cACT,EACAtV,WAAAA,GACItF,KAAKgQ,OAAOM,KAAK,cACrB,EACA/K,WAAAA,GACI,GAAwB,KAApBvF,KAAKmE,WACL,OAAOnE,KAAKkQ,QAAQ,CAChBC,MAAO,MACPC,KAAM,UACNV,KAAM,UAGd,IAAI6M,EAAavc,KAAKqF,mBAAmBjD,KACzC,GAAIma,EAAa,EACb,OAAOvc,KAAKkQ,QAAQ,CAChBC,MAAO,MACPC,KAAM,aACNV,KAAM,UAKd,IAAID,EAAO,CACP7M,KAAM5C,KAAKmE,WACXhC,QAAS,IAAInC,KAAKqF,mBAAmB0W,SAEzC/b,KAAK0Q,YAAYtF,EAASuM,aAAc,EAAGlI,GAC3CzP,KAAKgQ,OAAOM,KAAK,cACrB,EAER,EC/IW,MAAMkM,EACjB5V,WAAAA,CAAYW,GACR,MAAMkV,EAAW,IAAIC,aACrB1c,KAAK2c,SAAWF,EAASG,iBAIzB5c,KAAK6c,OAASJ,EAASK,wBAAwBvV,GAC/CvH,KAAK6c,OAAOE,QAAQ/c,KAAK2c,UACzB3c,KAAKgd,WAAa,IACtB,CAEAC,SAAAA,CAAUC,EAAQC,EAAgB,aAC9B,MAAMC,EAAYF,EAAOG,WAAW,MAE9BC,EAAQJ,EAAO5c,MACfid,EAASL,EAAO3c,OACtB,OAAQ4c,GACJ,IAAK,YACL,CACInd,KAAK2c,SAASa,QAAU,IACxB,MAAMC,EAAezd,KAAK2c,SAASa,QACnCrV,QAAQ6B,IAAIyT,GAIZ,MAAMC,EAAY,IAAIxQ,WAAWuQ,GAEjCL,EAAUO,UAAU,EAAG,EAAGL,EAAOC,GAEjC,MAAMK,EAAOA,KACT5d,KAAKgd,WAAaa,sBAAsBD,GAExC5d,KAAK2c,SAASmB,sBAAsBJ,GAEpCN,EAAUW,UAAY,qBACtBX,EAAUY,SAAS,EAAG,EAAGV,EAAOC,GAEhCH,EAAUa,UAAY,EACtBb,EAAUc,YAAc,eAExBd,EAAUe,YAEV,MAAMC,EAAsB,EAARd,EAAeG,EACnC,IAAIY,EAAI,EAER,IAAK,IAAIrD,EAAI,EAAGA,EAAIyC,EAAczC,IAAK,CACnC,MAAMsD,EAAIZ,EAAU1C,GAAK,IACnBuD,EAAKD,EAAIf,EAAU,EAEf,IAANvC,EACAoC,EAAUoB,OAAOH,EAAGE,GAEpBnB,EAAUqB,OAAOJ,EAAGE,GAGxBF,GAAKD,CACT,CAEAhB,EAAUqB,OAAOnB,EAAOC,EAAS,GACjCH,EAAUsB,QAAQ,EAGtBd,IACA,KACJ,CACA,IAAK,iBACL,CACI5d,KAAK2c,SAASa,QAAU,IACxB,MAAMmB,EAAkB3e,KAAK2c,SAASiC,kBACtCzW,QAAQ6B,IAAI2U,GAGZ,MAAME,EAAe,IAAI3R,WAAWyR,GAEpCvB,EAAUO,UAAU,EAAG,EAAGL,EAAOC,GAEjC,MAAMuB,EAAUA,KACZ9e,KAAKgd,WAAaa,sBAAsBiB,GAExC9e,KAAK2c,SAASoC,qBAAqBF,GAEnCzB,EAAUW,UAAY,eACtBX,EAAUY,SAAS,EAAG,EAAGV,EAAOC,GAEhC,MAAMyB,EAAY1B,EAAQqB,EAAmB,IAC7C,IAAIN,EAAI,EAER,IAAK,IAAIrD,EAAI,EAAGA,EAAI2D,EAAiB3D,IAAK,CACtC,MAAMiE,EAAYJ,EAAa7D,GAE/BoC,EAAUW,UAAY,QAAUkB,EAAY,KAAO,UACnD7B,EAAUY,SACNK,EACAd,EAAS0B,EAAY,EACrBD,EACAC,EAAY,GAGhBZ,GAAKW,EAAW,CACpB,GAGJF,IACA,KACJ,EAER,CAEAjV,KAAAA,GACIqV,qBAAqBlf,KAAKgd,YAC1Bhd,KAAK6c,OAAOsC,aACZnf,KAAK6c,OAAS,KACd7c,KAAK2c,SAAW,IACpB,EChHG,MAAMyC,UAAmB9T,EAC5B9E,OAAAA,CAAQgJ,EAAIC,GACR,OAAQA,EAAKC,MAET,KAAKtE,EAASiU,WACd,CACI,IAAIhQ,EAAOI,EAAKA,KACZoD,EAAYpD,EAAKoD,UACjBC,EAAcrD,EAAKqD,YACvB,GAAID,IAAcrD,EAAGnP,KAAK6B,GAItB,OAFAsN,EAAG8P,YAAcjQ,EAAKkQ,aACtB/P,EAAGgQ,gBAAkB1M,GAElB,GAAItD,EAAGiQ,YAAa,CAEvB,IAAInX,EAAUkH,EAAGnP,KAAKuB,YAAc,SAKpC,YAJA4N,EAAGkB,YAAYtF,EAASsU,YAAa7M,EAAW,CAC5CnD,KAAM,OACNpH,WAGR,CAGA,IAAInB,EAAQkI,EAAKlI,MACblF,EAAWoN,EAAKpN,SAChB0d,EAAQ,qCACZA,GAAS,oCACTA,GAAS,SACTA,GAAS1d,EAAW,OAAS,OAC7B0d,GAAS,UACTA,GAAS,SACT,IAAIC,EAAMzY,EAAQ,KAAM,KACxBqI,EAAG8D,aAAaT,GAAYxS,IACxBmP,EAAGQ,OAAOjM,KAAK,SAAU,CACrB4b,MAAOA,EACPvP,KAAO,MAAK/P,EAAKgD,mBAAmBuc,YACpCC,QAAS,CACL,CACIF,MAAO,KACPrK,QAASA,KACL9F,EAAGQ,OAAOM,KAAK,UACfd,EAAGkB,YAAYtF,EAASsU,YAAa7M,EAAW,CAC5CnD,KAAM,OACNpH,QAASkH,EAAGnP,KAAKuB,YAAc,cACjC,GAGV,CACI+d,MAAO,KACPrK,QAASA,KACL9F,EAAGQ,OAAOM,KAAK,UAEfd,EAAGQ,OAAOjM,KAAK,aACfyL,EAAG8P,YAAcjQ,EAAKkQ,QACtB/P,EAAGgQ,gBAAkB1M,EACrBtD,EAAG/J,WAAa0B,EAChBqI,EAAGsQ,IAAIjY,eAAe,CAAEX,OAAO,EAAMC,UAErCqI,EAAGsQ,IAAIhY,OAAOsL,MAAM7L,IAChBiI,EAAGuQ,eAAexY,GAClBiI,EAAGiQ,aAAc,EACjB,IAAIze,EAAMwO,EAAGsQ,IAAItX,SACjBgH,EAAG7J,cAAciD,IAAI5H,EAAK,MAC1BwO,EAAGsQ,IAAI3V,SAASnJ,GAEhBwO,EAAGwQ,uBAAuBhf,EAAK6R,GAG/BrD,EAAGkB,YAAYtF,EAAS6U,SAAU,IAAK5Q,EAAK,IAC7CsM,OAAOzT,IACNsH,EAAGuF,MAAM7M,GACTsH,EAAGiQ,aAAc,CAAI,GACvB,KAIhB,IAEN,KACJ,CACA,KAAKrU,EAAS6U,SACd,CACI,IAAI5Q,EAAOI,EAAKA,KACZoD,EAAYpD,EAAKoD,UAErB,GADArD,EAAG8P,YAAcjQ,EAAKkQ,QAClB1M,IAAcrD,EAAGnP,KAAK6B,GAAI,OAE9B,IAAIlB,EAAMwO,EAAGsQ,IAAItX,SACjBgH,EAAG7J,cAAciD,IAAI5H,EAAK,MAC1BwO,EAAGsQ,IAAI3V,SAASnJ,GAEhBwO,EAAGwQ,uBAAuBhf,EAAK6R,GAC/B,KACJ,CACA,KAAKzH,EAASsU,YACd,CACI,IAAI7M,EAAYpD,EAAKoD,UACjBxD,EAAOI,EAAKA,KACZC,EAAOL,EAAKK,KAChB,OAAQA,GACJ,IAAK,QACL,CAEI,IAAI1O,EAAMwO,EAAGsQ,IAAInX,0BACjB6G,EAAGwQ,uBAAuBhf,EAAK6R,GAE/B,IAAIjI,EAAcyE,EAAKzE,YACvB4E,EAAGsQ,IAAInV,oBAAoBC,GAAawI,MAAK,EAAExI,kBAC3C4E,EAAG0Q,WAAWrN,EAAWjI,EAAY,IAEzC,KACJ,CACA,IAAK,SACL,CAEI,IAAI5J,EAAMwO,EAAG2Q,eAAepa,IAAI8M,GAChCrD,EAAGsQ,IAAI9U,qBAAqBhK,EAAKqO,EAAKzE,aACtC,KACJ,CACA,IAAK,oBACL,CACI,IAAIlB,EAAY2F,EAAK3F,UACrB,GAAI8F,EAAG2Q,eAAeC,IAAIvN,GAAY,CAClC,IAAI7R,EAAMwO,EAAG2Q,eAAepa,IAAI8M,GAChCrD,EAAGsQ,IAAI7U,yBAAyBjK,EAAK0I,EACzC,KAAO,CAGH,IAAI2W,EADJ7Q,EAAGuF,MAAM,mBAAoBlC,EAAWnJ,GAEpC8F,EAAG6Q,WAAWD,IAAIvN,IAClBwN,EAAa7Q,EAAG6Q,WAAWta,IAAI8M,GAC/BwN,EAAWvH,KAAKpP,IAEhB2W,EAAa,CAAC3W,GAElB8F,EAAG6Q,WAAWzX,IAAIiK,EAAWwN,EACjC,CACA,KACJ,CACA,IAAK,OACL,CACI,IAAI/X,EAAU+G,EAAK/G,QACnBkH,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAM9H,EACNoH,KAAM,UAEV,KACJ,EAEJ,KACJ,CACA,KAAKtE,EAASkV,UACd,KAAKlV,EAASmV,YACd,CAEI,IAAI1N,EAAYpD,EAAKoD,UACrB,GAAIrD,EAAG2Q,eAAeC,IAAIvN,GAAY,CAClC,IAAI7R,EAAMwO,EAAG2Q,eAAepa,IAAI8M,GAChCrD,EAAGsQ,IAAIjW,MAAM7I,EACjB,CACA,KACJ,CACA,KAAKoK,EAASoV,SACd,CACI,IAAI3N,EAAYpD,EAAKoD,UACrB,GAAIA,IAAcrD,EAAGnP,KAAK6B,GAAI,OAC9B,IAAImN,EAAOI,EAAKA,KACZD,EAAGiQ,aAAgBpQ,EAAKkQ,UAAY/P,EAAG8P,aAEvC9P,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAM,SACNV,KAAM,SAEVF,EAAGpJ,QAAO,IAGVoJ,EAAGQ,OAAOM,KAAK,UAEnB,KACJ,CACA,QAEItQ,KAAKwL,KAAKhF,QAAQgJ,EAAIC,GACtB,MAGZ,EAGG,MAAMgR,UAAqBvR,EAC9BI,OAAAA,GACI,MAAO,CACHwQ,IAAK,KACLra,YAAY,EACZC,YAAa,KACbC,cAAe,IAAI2B,IACnBxB,aAAc,IAAIwB,IAClBoZ,iBAAkB,IAAIpZ,IACtBnB,WAAY,GACZwa,YAAa,EACbN,WAAY,IAAI/Y,IAChBsZ,eAAgB,IAAItZ,IACpB6Y,eAAgB,IAAI7Y,IACpBgY,YAAa,GACbE,gBAAiB,GACjBC,aAAa,EACbja,cAAc,EAEtB,CAEA4J,UAAAA,GACI,MAAO,CAEHhJ,MAAAA,CAAOya,GAAS,GAYZ,GAXA7gB,KAAKgQ,OAAOM,KAAK,aACjBtQ,KAAKyf,aAAc,EACnBzf,KAAK4gB,eAAelW,QACpB1K,KAAKmgB,eAAezV,QACpB1K,KAAK8F,aAAa4E,QAClB1K,KAAK8f,IAAItV,WACTxK,KAAK8gB,mBACL9gB,KAAK+gB,YACL/gB,KAAKghB,iBAGDH,EAAQ,CACR,IAAIvf,EAAUtB,KAAKgR,GAAG+B,YAAY/S,KAAKwf,iBACvCxf,KAAK0Q,YAAYtF,EAASkV,UAAWtgB,KAAKwf,gBAAiB,CACvDvd,SAAUX,EAAQW,SAClBsd,QAASvf,KAAKsf,aAEtB,CAEAtf,KAAKsf,YAAc,GACnBtf,KAAKwf,gBAAkB,EAC3B,EACAtZ,QAAAA,GACIlG,KAAKwF,cAAe,CACxB,EACAa,QAAAA,GACIrG,KAAKwF,cAAe,CACxB,EACAQ,OAAAA,CAAQkC,GAEJA,EAAE5E,OAAO2d,OAAQ,CACrB,EACAC,UAAAA,GACI,GAAIlhB,KAAK2gB,YAAa,OACtB,IAAIQ,EAAQ3T,KAAKG,MACjB3N,KAAK2gB,YAAc/K,aAAY,KAC3B,IAAIwL,EAAO5T,KAAKG,MAAQwT,EACpBtL,EAAO,IAAIrI,KAAK4T,GACpBphB,KAAKmG,WAAa0P,EAAKlH,UAAU,QAAQ,GAC1C,IACP,EACAoS,SAAAA,GACIvL,cAAcxV,KAAK2gB,aACnB3gB,KAAK2gB,YAAc,EACnB3gB,KAAKmG,WAAa,EACtB,EACA6a,cAAAA,GACI,IAAK,IAAI/D,KAAajd,KAAK0gB,iBAAiBje,SACxCwa,EAAUpT,QAEd7J,KAAK0gB,iBAAiBhW,OAC1B,EACAsV,sBAAAA,CAAuBhf,EAAK6R,GACxB7S,KAAK4gB,eAAehY,IAAI5H,EAAK6R,GAC7B7S,KAAKmgB,eAAevX,IAAIiK,EAAW7R,GACnChB,KAAKsT,aAAaT,GAAYxS,IAC1BL,KAAK8F,aAAa8C,IAAI5H,EAAKX,EAAK,GAExC,EACA0f,cAAAA,CAAexY,GACXvH,KAAK+U,MAAM,sBAAuBkB,WAClCjW,KAAK0F,YAAc6B,EACnB,IAAI2V,EAAS7G,SAASgL,cAAc,iBAChCpE,EAAY,IAAIT,EAAejV,GACnC0V,EAAUA,UAAUC,GACpBld,KAAK0gB,iBAAiB9X,IAAI,QAASqU,EACvC,EACA6D,gBAAAA,GACI9gB,KAAK+U,MAAM,sBACP/U,KAAK0F,cACL1F,KAAK0F,YAAY0E,YAAYK,SAAS3B,GAAUA,EAAMwY,SACtDthB,KAAK0F,YAAc,KACnB1F,KAAKqgB,WAAW3V,QAExB,EACAwV,UAAAA,CAAWrN,EAAWjI,GAClB5K,KAAK+U,MAAM,iBAAkBkB,WAE7BjW,KAAK0Q,YAAYtF,EAASsU,YAAa7M,EAAW,CAC9CnD,KAAM,SACN9E,eAER,EACAlD,gBAAAA,CAAiB1G,EAAK4J,GAClB5K,KAAK+U,MAAM,qBAAsBkB,WAEjC,IAAIpD,EAAY7S,KAAK4gB,eAAe7a,IAAI/E,GACxChB,KAAK0Q,YAAYtF,EAASsU,YAAa7M,EAAW,CAC9CnD,KAAM,QACN9E,eAER,EACAjD,cAAAA,CAAe3G,EAAK0I,GAEhB,GADA1J,KAAK+U,MAAM,eAAgBkB,WACT,OAAdvM,EAAoB,OACxB,IAAImJ,EAAY7S,KAAK4gB,eAAe7a,IAAI/E,GAOxC,GANAhB,KAAK+U,MAAM,MAAOlC,GAClB7S,KAAK0Q,YAAYtF,EAASsU,YAAa7M,EAAW,CAC9CnD,KAAM,oBACNhG,cAGA1J,KAAKqgB,WAAWD,IAAIvN,GAAY,CAChC,IAAIwN,EAAargB,KAAKqgB,WAAWta,IAAI8M,GACrC7S,KAAK+U,MAAM,oBAAqBsL,GAChC,IAAK,IAAI3W,KAAa2W,EAClBrgB,KAAK8f,IAAI7U,yBAAyBjK,EAAK0I,GAE3C1J,KAAKqgB,WAAWzX,IAAIiK,EAAW,GACnC,CACJ,EACApL,OAAAA,CAAQzG,EAAK+H,GACT/I,KAAK+U,MAAM,WAAYkB,WACnBlN,EAAQ,GAAGwY,SACXvhB,KAAK2F,cAAciD,IAAI5H,EAAK+H,EAAQ,IACpC/I,KAAK4a,eACL5a,KAAKwhB,WAAU,KACX,IAAItE,EAAS7G,SAASgL,cAAc,kBAAoBrgB,GACpDhB,KAAK0gB,iBAAiBN,IAAIpf,KAC1BhB,KAAK0gB,iBAAiB3a,IAAI/E,GAAK6I,QAC/B7J,KAAK0gB,iBAAiBnW,OAAOvJ,IAEjC,IAAIic,EAAY,IAAIT,EAAezT,EAAQ,IAC3CkU,EAAUA,UAAUC,GACpBld,KAAK0gB,iBAAiB9X,IAAI5H,EAAKic,EAAU,IAE7Cjd,KAAKkhB,aAEb,EACAtZ,kBAAAA,CAAmB5G,GACfhB,KAAK+U,MAAM,yBAA0BkB,WACjCjW,KAAK2F,cAAcya,IAAIpf,KACvBhB,KAAK2F,cAAcI,IAAI/E,IAAQhB,KAAK2F,cAAcI,IAAI/E,GAAKoJ,YAAYK,SAAS3B,GAAUA,EAAMwY,SAChGthB,KAAK2F,cAAc4E,OAAOvJ,GAC1BhB,KAAK4a,eAEb,EAER,ECvWG,MAAM6G,UAAuBnW,EAChC9E,OAAAA,CAAQgJ,EAAIC,GACRD,EAAGU,QAAQ,CACPC,MAAO,MACPC,KAAM,WAAaX,EAAKC,KACxBA,KAAM,QAEd,EC0NJ,ICnOI,EAAQ,EDmOZ,GACA9M,KAAA,MAEA8e,OAAA,CACA,IAAAvN,EACA,IAAA6H,EACA,IAAAyE,GAEAkB,OAAAA,GAAA,MAAAC,EAAA,KAAAC,gBACA,GAAA7Q,GAAA,KAAA8Q,MACA,KAAA9Q,GAAAA,EAGA,KAAAwD,OAAA,IAAAW,UAAA,KAAAf,YAGA,KAAAI,OAAAiB,iBAAA,YAAAb,QACA,KAAAJ,OAAAiB,iBAAA,eAAAX,WACA,KAAAN,OAAAiB,iBAAA,aAAAR,SACA,KAAAT,OAAAiB,iBAAA,aAAAC,SAGA,KAAA1E,GAAA+Q,UAAA,EAAAnf,KAAA,aAAAA,KAAA,cAGA,KAAAoO,GAAAgR,UAAAC,GAGA,IAAAC,EAAA,IAAA3S,EACAY,EAAA,IAAAyL,EACAkE,EAAA,IAAAV,EACA+C,EAAA,IAAAV,EACAS,EAAA3W,QAAA4E,GACAA,EAAA5E,QAAAuU,GACAA,EAAAvU,QAAA4W,GACA,KAAAnN,gBAAAkN,EAGA,KAAApC,IAAA,IAAAnZ,EACA,KAAAmZ,IAAAtY,aAAA,CACAC,QAAA,KAAAA,QACAC,iBAAA,KAAAA,iBACAC,eAAA,KAAAA,eACAC,mBAAA,KAAAA,qBAIA,KAAAoJ,GAAAoR,gBAAA,CACA,CACAxf,KAAA,SAEA,CACAA,KAAA,eAEA,CACAA,KAAA,YACA+c,MAAA,OACAxD,MAAAA,KACA,KAAAnL,GAAA8Q,MAAAO,OAAAC,WAAA,0BAEAxiB,OAAAA,IACA8hB,EAAA,wCAGA,CACAhf,KAAA,cACA+c,MAAA,OACAxD,MAAAA,KACA,KAAAnL,GAAA8Q,MAAAO,OAAAC,WAAA,SAEAxiB,OAAAA,IACA8hB,EAAA,yCAGA,CACAhf,KAAA,YACA+c,MAAA,OACAxD,MAAAA,KACA,QAAA3W,aACA,YAAA0K,QAAA,CACAC,MAAA,MACAC,KAAA,QACAV,KAAA,SAIA,KAAAM,OAAAjM,KAAA,aAEA,KAAAub,YAAA,GACA,IAAAhe,EAAA,KAAA0P,GAAAuR,oBACApb,GAAA,EACA,KAAA1B,WAAA0B,EACA,KAAA2Y,IAAAjY,eAAA,CAAAX,OAAA,EAAAC,UACA,KAAA2Y,IAAAhY,OAAAsL,MAAA7L,IACA,KAAAwY,eAAAxY,GACA,KAAAkY,aAAA,EAEA,IAAAxd,EAAAX,EAAAW,SACA,KAAAyO,YAAAtF,EAAAiU,WAAA/d,EAAAY,GAAA,CACAD,WACAkF,SACA,IACAwU,OAAAzT,IACA,KAAA6M,MAAA7M,GACA,KAAAuX,aAAA,IACA,EAEA3f,OAAAA,IACA8hB,EAAA,8CAGA,CACAhf,KAAA,YACA+c,MAAA,OACAxD,MAAAA,KACA,QAAA3W,aACA,YAAA0K,QAAA,CACAC,MAAA,MACAC,KAAA,QACAV,KAAA,SAIA,KAAAM,OAAAjM,KAAA,aAEA,KAAAub,YAAA,GACA,IAAAhe,EAAA,KAAA0P,GAAAuR,oBACApb,GAAA,EACA,KAAA1B,WAAA0B,EACA,KAAA2Y,IAAAjY,eAAA,CAAAX,OAAA,EAAAC,UACA,KAAA2Y,IAAAhY,OAAAsL,MAAA7L,IACA,KAAAwY,eAAAxY,GACA,KAAAkY,aAAA,EAEA,IAAAxd,EAAAX,EAAAW,SACA,KAAAyO,YAAAtF,EAAAiU,WAAA/d,EAAAY,GAAA,CACAD,WACAkF,SACA,IACAwU,OAAAzT,IACA,KAAA6M,MAAA7M,GACA,KAAAuX,aAAA,IACA,EAEA3f,OAAAA,IACA8hB,EAAA,0CAMA,KAAA5Q,GAAAwR,qBAAA,SAAAla,GACAsZ,EAAA,eAAAtZ,EAAAmP,aAIA,KAAApE,gBAAA,CACAnR,GAAA,IACAU,KAAA,KACApB,OAAA,IACA,QAAAiP,aACA,GEpYyO,I,UCOrOgS,GAAY,OACd,EACA3iB,EACAwG,GACA,EACA,KACA,KACA,MAIF,EAAemc,EAAiB,Q,sCCNhC,GACA7f,KAAA,oBACA8f,cAAA,EACAC,OAAA,SACA7iB,MAAAA,GAAA,MAAA8hB,EAAA3L,UAAA,GACA,OAAA2L,EAAA,sBAAAgB,IAAA,QAEA,8BACA,SAAAC,SAAA,aACA,CACAxR,QAAAyR,GACAlB,EAAA,OAAAA,EAAA,aAEA,8BAAAA,EAAA,YAAAA,EAAA,QAEAkB,EAAArL,aAAAmK,EAAA,gCAEAkB,EAAAzR,QAAA,MAAAyR,EAAArL,kBAOA,GCpCkQ,IJQ9P,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,Q,0DKdhCsL,EAAAA,WAAIN,UAAUO,EAAkBpgB,KAAMogB,GAOtCD,EAAAA,WAAIlc,OAAOoc,eAAgB,EAC3BF,EAAAA,WAAIG,IAAIC,KACRJ,EAAAA,WAAIG,IAAIE,IAAQ,CAAEC,QAAQ,IAC1BN,EAAAA,WAAIG,IAAII,KACRP,EAAAA,WAAIG,IAAIK,EAAAA,IACRR,EAAAA,WAAIN,UAAU,aAAce,EAAAA,GAE5B,IAAIT,EAAAA,WAAI,CACNjjB,OAAQ8hB,GAAKA,EAAE6B,KACdC,OAAO,O,GCpBNC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CACjD3hB,GAAI2hB,EACJK,QAAQ,EACRF,QAAS,CAAC,GAUX,OANAG,EAAoBN,GAAUpf,KAAKwf,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAG3EK,EAAOC,QAAS,EAGTD,EAAOD,OACf,CAGAJ,EAAoBQ,EAAID,E,WC5BxB,IAAIE,EAAW,GACfT,EAAoBU,EAAI,SAASC,EAAQC,EAAUvjB,EAAIwjB,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAAS3J,EAAI,EAAGA,EAAIqJ,EAAS3N,OAAQsE,IAAK,CACrCwJ,EAAWH,EAASrJ,GAAG,GACvB/Z,EAAKojB,EAASrJ,GAAG,GACjByJ,EAAWJ,EAASrJ,GAAG,GAE3B,IAJA,IAGI4J,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAAS9N,OAAQmO,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAarN,OAAO2E,KAAK6H,EAAoBU,GAAGQ,OAAM,SAAS9jB,GAAO,OAAO4iB,EAAoBU,EAAEtjB,GAAKwjB,EAASK,GAAK,IAChKL,EAASO,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASU,OAAO/J,IAAK,GACrB,IAAIgK,EAAI/jB,SACE8iB,IAANiB,IAAiBT,EAASS,EAC/B,CACD,CACA,OAAOT,CArBP,CAJCE,EAAWA,GAAY,EACvB,IAAI,IAAIzJ,EAAIqJ,EAAS3N,OAAQsE,EAAI,GAAKqJ,EAASrJ,EAAI,GAAG,GAAKyJ,EAAUzJ,IAAKqJ,EAASrJ,GAAKqJ,EAASrJ,EAAI,GACrGqJ,EAASrJ,GAAK,CAACwJ,EAAUvjB,EAAIwjB,EAwB/B,C,eC5BAb,EAAoBqB,EAAI,SAAShB,GAChC,IAAIiB,EAASjB,GAAUA,EAAOkB,WAC7B,WAAa,OAAOlB,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAL,EAAoBwB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNAtB,EAAoBwB,EAAI,SAASpB,EAASsB,GACzC,IAAI,IAAItkB,KAAOskB,EACX1B,EAAoBjf,EAAE2gB,EAAYtkB,KAAS4iB,EAAoBjf,EAAEqf,EAAShjB,IAC5EoW,OAAOmO,eAAevB,EAAShjB,EAAK,CAAEwkB,YAAY,EAAMzf,IAAKuf,EAAWtkB,IAG3E,C,eCPA4iB,EAAoB6B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO1lB,MAAQ,IAAImY,SAAS,cAAb,EAChB,CAAE,MAAOjQ,GACR,GAAsB,kBAAXmM,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxBuP,EAAoB+B,IAAM,SAAS1B,GASlC,OARAA,EAAS7M,OAAO5O,OAAOyb,GAClBA,EAAOvd,WAAUud,EAAOvd,SAAW,IACxC0Q,OAAOmO,eAAetB,EAAQ,UAAW,CACxCuB,YAAY,EACZ5c,IAAK,WACJ,MAAM,IAAIL,MAAM,0FAA4F0b,EAAO/hB,GACpH,IAEM+hB,CACR,C,eCVAL,EAAoBjf,EAAI,SAASiH,EAAKga,GAAQ,OAAOxO,OAAO7S,UAAUshB,eAAephB,KAAKmH,EAAKga,EAAO,C,eCCtGhC,EAAoBoB,EAAI,SAAShB,GACX,qBAAX8B,QAA0BA,OAAOC,aAC1C3O,OAAOmO,eAAevB,EAAS8B,OAAOC,YAAa,CAAEjjB,MAAO,WAE7DsU,OAAOmO,eAAevB,EAAS,aAAc,CAAElhB,OAAO,GACvD,C,eCDA,IAAIkjB,EAAkB,CACrB,IAAK,GAaNpC,EAAoBU,EAAEO,EAAI,SAASoB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B9W,GAC/D,IAKIwU,EAAUoC,EALVzB,EAAWnV,EAAK,GAChB+W,EAAc/W,EAAK,GACnBgX,EAAUhX,EAAK,GAGI2L,EAAI,EAC3B,GAAGwJ,EAAS8B,MAAK,SAASpkB,GAAM,OAA+B,IAAxB8jB,EAAgB9jB,EAAW,IAAI,CACrE,IAAI2hB,KAAYuC,EACZxC,EAAoBjf,EAAEyhB,EAAavC,KACrCD,EAAoBQ,EAAEP,GAAYuC,EAAYvC,IAGhD,GAAGwC,EAAS,IAAI9B,EAAS8B,EAAQzC,EAClC,CAEA,IADGuC,GAA4BA,EAA2B9W,GACrD2L,EAAIwJ,EAAS9N,OAAQsE,IACzBiL,EAAUzB,EAASxJ,GAChB4I,EAAoBjf,EAAEqhB,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOrC,EAAoBU,EAAEC,EAC9B,EAEIgC,EAAqBC,KAAK,uBAAyBA,KAAK,wBAA0B,GACtFD,EAAmB9b,QAAQyb,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBzN,KAAOoN,EAAqBO,KAAK,KAAMF,EAAmBzN,KAAK2N,KAAKF,G,IC/CvF,IAAIG,EAAsB9C,EAAoBU,OAAEP,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,KAAO,IACjH8C,EAAsB9C,EAAoBU,EAAEoC,E","sources":["webpack://html_v2/./src/App.vue","webpack://html_v2/./src/js/emoji.js","webpack://html_v2/./src/js/webrtc.js","webpack://html_v2/./src/js/constant.js","webpack://html_v2/./src/js/imessage.js","webpack://html_v2/./src/js/util.js","webpack://html_v2/./src/js/iprocessor.js","webpack://html_v2/./src/js/general.js","webpack://html_v2/./src/js/group.js","webpack://html_v2/./src/js/voice_visualize.js","webpack://html_v2/./src/js/rtc.js","webpack://html_v2/./src/js/unknown.js","webpack://html_v2/src/App.vue","webpack://html_v2/./src/components/lemon-message-music.vue","webpack://html_v2/./src/App.vue?c036","webpack://html_v2/./src/App.vue?0e40","webpack://html_v2/src/components/lemon-message-music.vue","webpack://html_v2/./src/components/lemon-message-music.vue?b49a","webpack://html_v2/./src/main.js","webpack://html_v2/webpack/bootstrap","webpack://html_v2/webpack/runtime/chunk loaded","webpack://html_v2/webpack/runtime/compat get default export","webpack://html_v2/webpack/runtime/define property getters","webpack://html_v2/webpack/runtime/global","webpack://html_v2/webpack/runtime/harmony module decorator","webpack://html_v2/webpack/runtime/hasOwnProperty shorthand","webpack://html_v2/webpack/runtime/make namespace object","webpack://html_v2/webpack/runtime/jsonp chunk loading","webpack://html_v2/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('main',[_c('lemon-imui',{ref:\"im\",attrs:{\"user\":_vm.user,\"hide-message-name\":false,\"avatarCricle\":true,\"width\":_vm.width,\"height\":_vm.height},on:{\"pull-messages\":_vm.getHistory,\"message-click\":_vm.messageClick,\"change-contact\":_vm.changeContact,\"menu-avatar-click\":_vm.changeAvatar,\"send\":_vm.send},scopedSlots:_vm._u([{key:\"sidebar-message-fixedtop\",fn:function(){return [_c('div',{staticClass:\"flex space-between search-bar\"},[_c('input',{staticClass:\"input-medium\",attrs:{\"type\":\"text\",\"placeholder\":\"搜索\"}}),_c('button',{on:{\"click\":_vm.addGroup}},[_vm._v(\"➕\")])])]},proxy:true},{key:\"sidebar-message\",fn:function(contact){return [_c('lemon-badge',{staticClass:\"lemon-contact__avatar\",attrs:{\"count\":contact.unread}},[_c('lemon-avatar',{attrs:{\"size\":40,\"src\":contact.avatar}})],1),_c('div',{staticClass:\"lemon-contact__inner\"},[_c('p',{staticClass:\"lemon-contact__label\"},[(contact.is_online)?_c('span',{staticClass:\"online-status\"}):_vm._e(),_c('span',{staticClass:\"lemon-contact__name\"},[_vm._v(_vm._s(contact.displayName))]),_c('span',{staticClass:\"lemon-contact__time\"},[_vm._v(_vm._s(contact.lastSendTime ? _vm.timeFormat(contact.lastSendTime) : \"\")+\" \")])]),_c('p',{staticClass:\"lemon-contact__content\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(contact.lastContent)}})])])]}},{key:\"message-title\",fn:function(contact){return [_c('div',{staticClass:\"flex space-between\"},[_c('span',[_vm._v(_vm._s(contact.displayName)),(contact.is_group)?_c('span',[_vm._v(\" (\"+_vm._s(contact.id ? contact.members.size : contact.online_total)+\")\")]):_vm._e()]),_c('b',{staticClass:\"pointer user-select-none\",on:{\"click\":function($event){return _vm.toggleDrawer(contact)}}},[_vm._v(\"···\")])])]}},{key:\"drawer\",fn:function(contact){return [(contact.is_group)?_c('div',{staticClass:\"slot-group\"},[_c('div',{staticClass:\"slot-group-title\"},[_vm._v(\"群通知\")]),_c('hr'),_c('div',{staticClass:\"slot-group-notice\"},[_vm._v(\"公告内容\")]),_c('hr'),_c('div',{staticClass:\"slot-group-title\"},[_vm._v(\"群成员\")]),_c('input',{staticClass:\"slot-search\",attrs:{\"placeholder\":\"搜索群成员\"}}),_c('div',{staticClass:\"slot-group-panel flex flex-top\"},_vm._l((contact.members.values()),function(item){return _c('lemon-contact',{directives:[{name:\"lemon-contextmenu\",rawName:\"v-lemon-contextmenu.contact\",value:(_vm.group_menu),expression:\"group_menu\",modifiers:{\"contact\":true}}],key:item.user_id,attrs:{\"contact\":item}},[_c('div',{staticClass:\"slot-group-member\"},[_c('div',{staticClass:\"slot-group-avatar\"},[_c('img',{attrs:{\"src\":item.avatar ? _vm.upload_url + item.avatar : _vm.default_avatar_url,\"alt\":\"avatar\"}})]),_c('div',{staticClass:\"slot-group-name text-ellipsis\"},[_vm._v(_vm._s(item.username))])])])}),1)]):_vm._e()]}}])}),_c('modal',{attrs:{\"name\":\"login-modal\",\"clickToClose\":false,\"height\":250,\"width\":250,\"adaptive\":true}},[_c('dialog',{staticClass:\"box\",attrs:{\"open\":\"\"}},[_c('div',{staticClass:\"partition-title\"},[_vm._v(\"请登录/注册\")]),_c('div',{staticClass:\"partition-form\"},[_c('form',{attrs:{\"autocomplete\":\"off\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.username),expression:\"username\"}],attrs:{\"type\":\"text\",\"id\":\"username\",\"placeholder\":\"起个名吧，亲:)\",\"maxlength\":\"30\",\"autocomplete\":\"\"},domProps:{\"value\":(_vm.username)},on:{\"input\":function($event){if($event.target.composing)return;_vm.username=$event.target.value}}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.password),expression:\"password\"}],attrs:{\"type\":\"password\",\"id\":\"password\",\"placeholder\":\"密码：默认123456\",\"maxlength\":\"16\"},domProps:{\"value\":(_vm.password)},on:{\"input\":function($event){if($event.target.composing)return;_vm.password=$event.target.value}}}),_c('button',{staticClass:\"large-btn gold-btn\",attrs:{\"type\":\"submit\"},on:{\"click\":_vm.login}},[_vm._v(\" 登录/注册 \")])])])])]),_c('modal',{attrs:{\"name\":\"disconnect-modal\",\"clickToClose\":false,\"height\":25,\"width\":300}},[_vm._v(_vm._s(_vm.disconnect_mess))]),_c('notifications',{attrs:{\"group\":\"tip\",\"position\":\"top center\"}}),_c('viewer',{attrs:{\"images\":_vm.images}}),[_c('image-crop',{attrs:{\"field\":\"img\",\"width\":300,\"height\":300,\"img-format\":\"png\"},on:{\"crop-success\":_vm.cropSuccess},model:{value:(_vm.image_crop.show),callback:function ($$v) {_vm.$set(_vm.image_crop, \"show\", $$v)},expression:\"image_crop.show\"}})],_c('modal',{attrs:{\"name\":\"group-modal\",\"clickToClose\":true,\"height\":500,\"width\":666,\"adaptive\":true}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h3',{staticClass:\"modal-title\"},[_vm._v(\"创建群聊\")]),_c('span',[_vm._v(\"群聊名称：\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.group_name),expression:\"group_name\"}],staticClass:\"input-medium group-name\",attrs:{\"placeholder\":\"请输入群聊名称\"},domProps:{\"value\":(_vm.group_name)},on:{\"input\":function($event){if($event.target.composing)return;_vm.group_name=$event.target.value}}})]),_c('div',{staticClass:\"flex space-between vertical-center modal-body\"},[_c('div',{staticClass:\"group-select\"},[_c('div',[_vm._v(\"联系人\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.left_options),expression:\"left_options\"}],attrs:{\"multiple\":\"\",\"size\":\"10\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.left_options=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.group_available_users.values()),function(item){return _c('option',{key:item.user_id,domProps:{\"value\":item.user_id}},[_vm._v(_vm._s(item.username))])}),0)]),_c('div',{staticClass:\"group-select-middle\"},[_c('button',{on:{\"click\":_vm.moveToLeft}},[_vm._v(\"⬅️\")]),_c('button',{on:{\"click\":_vm.moveToRight}},[_vm._v(\"➡️\")])]),_c('div',{staticClass:\"group-select\"},[_c('div',[_vm._v(\"已选\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.right_options),expression:\"right_options\"}],attrs:{\"multiple\":\"\",\"size\":\"10\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.right_options=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.group_chosen_users.values()),function(item){return _c('option',{key:item.user_id,domProps:{\"value\":item.user_id}},[_vm._v(_vm._s(item.username))])}),0)])]),_c('div',{staticClass:\"flex horizontal-right modal-footer\"},[_c('button',{on:{\"click\":_vm.groupCancel}},[_vm._v(\"取消\")]),_c('button',{on:{\"click\":_vm.groupSubmit}},[_vm._v(\"确定\")])])])]),_c('modal',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.rtc_minimize),expression:\"!rtc_minimize\"}],attrs:{\"name\":\"rtc-modal\",\"clickToClose\":false,\"height\":'auto',\"width\":960,\"scrollable\":true,\"draggable\":\"true\",\"adaptive\":true}},[_c('div',{staticClass:\"flex flex-wrap horizontal-center vertical-center\"},[(_vm.video_flag)?[_c('div',{staticClass:\"local-video\"},[_c('video',{attrs:{\"autoplay\":\"\",\"muted\":\"\"},domProps:{\"muted\":true,\"srcObject\":_vm.local_media}}),_c('div',{staticClass:\"flex video-bar\"},[_c('div',{staticClass:\"video-tag text-ellipsis\"},[_vm._v(_vm._s(_vm.user.displayName))]),_c('canvas',{staticClass:\"voice-visualize-canvas\",attrs:{\"id\":\"local-canvas\",\"width\":\"420\",\"height\":\"30\"}})])]),_vm._l((_vm.remote_medias),function([index, remote_video]){return _c('div',{key:index,staticClass:\"remote-video\"},[_c('video',{attrs:{\"autoplay\":\"\"},domProps:{\"srcObject\":remote_video}}),_c('div',{staticClass:\"flex video-bar\"},[_c('div',{staticClass:\"video-tag text-ellipsis\"},[_vm._v(_vm._s(_vm.remote_users.get(index).username))]),_c('canvas',{staticClass:\"voice-visualize-canvas\",attrs:{\"id\":'remote-canvas-' + index,\"width\":\"420\",\"height\":\"30\"}})])])})]:[_c('div',{staticClass:\"local-audio\"},[_c('audio',{attrs:{\"autoplay\":\"\",\"muted\":\"\"},domProps:{\"srcObject\":_vm.local_media},on:{\"canplay\":_vm.setMute}}),_c('div',{staticClass:\"flex audio-bar\"},[_c('div',[_c('img',{attrs:{\"src\":_vm.user.avatar}}),_c('div',{staticClass:\"text-ellipsis text-center username\"},[_vm._v(_vm._s(_vm.user.displayName))])]),_c('canvas',{staticClass:\"voice-visualize-canvas\",attrs:{\"id\":\"local-canvas\",\"width\":\"380\",\"height\":\"120\"}})])]),_vm._l((_vm.remote_medias),function([index, remote_audio]){return _c('div',{key:index,staticClass:\"remote-audio\"},[_c('audio',{attrs:{\"autoplay\":\"\"},domProps:{\"srcObject\":remote_audio}}),_c('div',{staticClass:\"flex audio-bar\"},[_c('div',[_c('img',{attrs:{\"src\":_vm.remote_users.get(index).avatar ? _vm.upload_url + _vm.remote_users.get(index).avatar : _vm.default_avatar_url}}),_c('div',{staticClass:\"text-ellipsis text-center username\"},[_vm._v(_vm._s(_vm.remote_users.get(index).username))])]),_c('canvas',{staticClass:\"voice-visualize-canvas\",attrs:{\"id\":'remote-canvas-' + index,\"width\":\"380\",\"height\":\"120\"}})])])})]],2),_c('div',{staticClass:\"flex space-between vertical-center\"},[_c('div',[_c('button',{staticClass:\"minimize-button\",on:{\"click\":_vm.minimize}},[_vm._v(\"➖最小化\")])]),_c('div',{staticClass:\"flex vertical-center\"},[_c('span',[_vm._v(_vm._s(_vm.clock_text))]),_c('button',{staticClass:\"flex vertical-center\",on:{\"click\":_vm.hangUp}},[_c('span',{staticClass:\"hang-up-button\"}),_c('span',[_vm._v(\"结束通话\")])])])])]),_c('v-dialog'),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rtc_minimize),expression:\"rtc_minimize\"}],staticClass:\"minimize-call flex flex-wrap horizontal-center\"},[_c('button',{staticClass:\"call-button\",on:{\"click\":_vm.maximize}}),_c('div',[_vm._v(_vm._s(_vm.clock_text))])])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","let base_url = process.env.BASE_URL;\nexport default [\n    {\n        label: \"长草颜\",\n        children: [\n            {\n                \"name\": \"ywz_1\",\n                \"title\": \"不想活了\",\n                \"src\": base_url + \"/static/emoji/ywz/1.gif\"\n            },\n            {\n                \"name\": \"ywz_2\",\n                \"title\": \"不要啦\",\n                \"src\": base_url + \"/static/emoji/ywz/2.gif\"\n            },\n            {\n                \"name\": \"ywz_3\",\n                \"title\": \"买买买\",\n                \"src\": base_url + \"/static/emoji/ywz/3.gif\"\n            },\n            {\n                \"name\": \"ywz_4\",\n                \"title\": \"伤心\",\n                \"src\": base_url + \"/static/emoji/ywz/4.gif\"\n            },\n            {\n                \"name\": \"ywz_5\",\n                \"title\": \"剁剁剁\",\n                \"src\": base_url + \"/static/emoji/ywz/5.gif\"\n            },\n            {\n                \"name\": \"ywz_6\",\n                \"title\": \"加油\",\n                \"src\": base_url + \"/static/emoji/ywz/6.gif\"\n            },\n            {\n                \"name\": \"ywz_7\",\n                \"title\": \"厉害哦\",\n                \"src\": base_url + \"/static/emoji/ywz/7.gif\"\n            },\n            {\n                \"name\": \"ywz_8\",\n                \"title\": \"吃吃吃\",\n                \"src\": base_url + \"/static/emoji/ywz/8.gif\"\n            },\n            {\n                \"name\": \"ywz_9\",\n                \"title\": \"吓尿了\",\n                \"src\": base_url + \"/static/emoji/ywz/9.gif\"\n            },\n            {\n                \"name\": \"ywz_10\",\n                \"title\": \"哈哈\",\n                \"src\": base_url + \"/static/emoji/ywz/10.gif\"\n            },\n            {\n                \"name\": \"ywz_11\",\n                \"title\": \"喜欢你\",\n                \"src\": base_url + \"/static/emoji/ywz/11.gif\"\n            },\n            {\n                \"name\": \"ywz_12\",\n                \"title\": \"对不起\",\n                \"src\": base_url + \"/static/emoji/ywz/12.gif\"\n            },\n            {\n                \"name\": \"ywz_13\",\n                \"title\": \"小鲜肉\",\n                \"src\": base_url + \"/static/emoji/ywz/13.gif\"\n            },\n            {\n                \"name\": \"ywz_14\",\n                \"title\": \"快点\",\n                \"src\": base_url + \"/static/emoji/ywz/14.gif\"\n            },\n            {\n                \"name\": \"ywz_15\",\n                \"title\": \"惊吓\",\n                \"src\": base_url + \"/static/emoji/ywz/15.gif\"\n            },\n            {\n                \"name\": \"ywz_16\",\n                \"title\": \"生日快乐\",\n                \"src\": base_url + \"/static/emoji/ywz/16.gif\"\n            },\n            {\n                \"name\": \"ywz_17\",\n                \"title\": \"有钱\",\n                \"src\": base_url + \"/static/emoji/ywz/17.gif\"\n            },\n            {\n                \"name\": \"ywz_18\",\n                \"title\": \"生气\",\n                \"src\": base_url + \"/static/emoji/ywz/18.gif\"\n            },\n            {\n                \"name\": \"ywz_19\",\n                \"title\": \"美妙极了\",\n                \"src\": base_url + \"/static/emoji/ywz/19.gif\"\n            },\n            {\n                \"name\": \"ywz_20\",\n                \"title\": \"肚子饿\",\n                \"src\": base_url + \"/static/emoji/ywz/20.gif\"\n            },\n            {\n                \"name\": \"ywz_21\",\n                \"title\": \"臭美\",\n                \"src\": base_url + \"/static/emoji/ywz/21.gif\"\n            },\n            {\n                \"name\": \"ywz_22\",\n                \"title\": \"鄙视\",\n                \"src\": base_url + \"/static/emoji/ywz/22.gif\"\n            },\n            {\n                \"name\": \"ywz_23\",\n                \"title\": \"闪瞎啦\",\n                \"src\": base_url + \"/static/emoji/ywz/23.gif\"\n            },\n            {\n                \"name\": \"ywz_24\",\n                \"title\": \"鬼脸\",\n                \"src\": base_url + \"/static/emoji/ywz/24.gif\"\n            }\n        ],\n    },\n    {\n        label: \"野萌君\",\n        children: [\n            {\n                \"name\": \"ymj_0\",\n                \"title\": \"恭喜发财\",\n                \"src\": base_url + \"/static/emoji/ymj/0.gif\"\n            },\n            {\n                \"name\": \"ymj_1\",\n                \"title\": \"哀求\",\n                \"src\": base_url + \"/static/emoji/ymj/1.gif\"\n            },\n            {\n                \"name\": \"ymj_2\",\n                \"title\": \"加油\",\n                \"src\": base_url + \"/static/emoji/ymj/2.gif\"\n            },\n            {\n                \"name\": \"ymj_3\",\n                \"title\": \"滚\",\n                \"src\": base_url + \"/static/emoji/ymj/3.gif\"\n            },\n            {\n                \"name\": \"ymj_4\",\n                \"title\": \"哇\",\n                \"src\": base_url + \"/static/emoji/ymj/4.gif\"\n            },\n            {\n                \"name\": \"ymj_5\",\n                \"title\": \"好委屈\",\n                \"src\": base_url + \"/static/emoji/ymj/5.gif\"\n            },\n            {\n                \"name\": \"ymj_6\",\n                \"title\": \"我滚啦\",\n                \"src\": base_url + \"/static/emoji/ymj/6.gif\"\n            },\n            {\n                \"name\": \"ymj_7\",\n                \"title\": \"你慢慢吃\",\n                \"src\": base_url + \"/static/emoji/ymj/7.gif\"\n            },\n            {\n                \"name\": \"ymj_8\",\n                \"title\": \"好烦\",\n                \"src\": base_url + \"/static/emoji/ymj/8.gif\"\n            },\n            {\n                \"name\": \"ymj_9\",\n                \"title\": \"干不掉我\",\n                \"src\": base_url + \"/static/emoji/ymj/9.gif\"\n            },\n            {\n                \"name\": \"ymj_10\",\n                \"title\": \"出去玩\",\n                \"src\": base_url + \"/static/emoji/ymj/10.gif\"\n            },\n            {\n                \"name\": \"ymj_11\",\n                \"title\": \"哈哈\",\n                \"src\": base_url + \"/static/emoji/ymj/11.gif\"\n            },\n            {\n                \"name\": \"ymj_12\",\n                \"title\": \"睡觉\",\n                \"src\": base_url + \"/static/emoji/ymj/12.gif\"\n            },\n            {\n                \"name\": \"ymj_13\",\n                \"title\": \"看不惯我\",\n                \"src\": base_url + \"/static/emoji/ymj/13.gif\"\n            },\n            {\n                \"name\": \"ymj_14\",\n                \"title\": \"咋啦\",\n                \"src\": base_url + \"/static/emoji/ymj/14.gif\"\n            },\n            {\n                \"name\": \"ymj_15\",\n                \"title\": \"你最好了\",\n                \"src\": base_url + \"/static/emoji/ymj/15.gif\"\n            },\n            {\n                \"name\": \"ymj_16\",\n                \"title\": \"保佑我\",\n                \"src\": base_url + \"/static/emoji/ymj/16.gif\"\n            },\n            {\n                \"name\": \"ymj_17\",\n                \"title\": \"不\",\n                \"src\": base_url + \"/static/emoji/ymj/17.gif\"\n            },\n            {\n                \"name\": \"ymj_18\",\n                \"title\": \"嗯\",\n                \"src\": base_url + \"/static/emoji/ymj/18.gif\"\n            },\n            {\n                \"name\": \"ymj_19\",\n                \"title\": \"嗨\",\n                \"src\": base_url + \"/static/emoji/ymj/19.gif\"\n            },\n            {\n                \"name\": \"ymj_20\",\n                \"title\": \"么么哒\",\n                \"src\": base_url + \"/static/emoji/ymj/20.gif\"\n            },\n            {\n                \"name\": \"ymj_21\",\n                \"title\": \"刚怎么了\",\n                \"src\": base_url + \"/static/emoji/ymj/21.gif\"\n            },\n            {\n                \"name\": \"ymj_22\",\n                \"title\": \"好棒\",\n                \"src\": base_url + \"/static/emoji/ymj/22.gif\"\n            },\n            {\n                \"name\": \"ymj_23\",\n                \"title\": \"别闹\",\n                \"src\": base_url + \"/static/emoji/ymj/23.gif\"\n            }\n        ],\n    },\n];\n","// @see https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Perfect_negotiation\n\nexport default class WebRTC {\n    constructor(config = null) {\n        // @see https://gist.github.com/mondain/b0ec1cf5f60ae726202e\n        // @see https://gist.github.com/sagivo/3a4b2f2c7ac6e1b5267c2f1f59ac6c6b\n        // @see https://freestun.net/\n        // TEST STUN/TURN SERVER https://icetest.atec-systems.com/\n        this.config = config ? config : {\n            iceServers: [\n                {\n                    urls: [\"stun:stun.l.google.com:19302\", \"stun:stun.files.fm:3478\"],\n                },\n                {\n                    urls: 'turns:freestun.net:5350',\n                    username: 'free',\n                    credential: 'free',\n                },\n            ],\n        };\n        this.constraints = {\n            audio: true,\n            video: true\n        };\n\n        this.callbacks = {};\n        this.pcs = new Map();\n        this.stream = null;\n    }\n\n    setCallbacks(callbacks) {\n        const {onTrack, onNegotiateReady, onIceCandidate, onRemoteSteamClose} = callbacks;\n        this.callbacks.onTrack = onTrack;\n        this.callbacks.onNegotiateReady = onNegotiateReady;\n        this.callbacks.onIceCandidate = onIceCandidate;\n        this.callbacks.onRemoteSteamClose = onRemoteSteamClose;\n    }\n\n    setConstraints(constraints) {\n        this.constraints = constraints;\n    }\n\n    async open() {\n        try {\n            if (!this.stream) {\n                // [Caller] a. invite: 2. access the webcam and microphone\n                this.stream = await navigator.mediaDevices.getUserMedia(this.constraints);\n            }\n            return this.stream;\n        } catch (e) {\n            console.error(e);\n            switch (e.name) {\n                case \"NotFoundError\":\n                    alert(\"No camera or microphone were found.\");\n                    break;\n                case \"SecurityError\":\n                case \"PermissionDeniedError\":\n                    // Do nothing; this is the same as the user canceling the call.\n                    break;\n                default:\n                    alert(`Error opening your camera or microphone: ${e.message}`);\n                    break;\n            }\n            throw new Error(\"open media failed\");\n        }\n    }\n\n    create() {\n        // [Caller] a. invite: 1. create an RTCPeerConnection\n        let pc = new RTCPeerConnection(this.config);\n        let key = this.getPeerConnectionLastId();\n        this.pcs.set(key, pc);\n        pc.ontrack = ({ track, streams }) => {\n            track.onunmute = () => {\n                // set remote video srcObject\n                this.callbacks.onTrack(key, streams);\n            };\n        };\n\n        pc.onnegotiationneeded = async () => {\n            try {\n                // [Caller] b. ready to negotiate: 1. create(set) an SDP offer\n                let offer = await pc.createOffer();\n                offer.sdp = this.replaceSDP(offer.sdp);\n                await pc.setLocalDescription(offer);\n\n                // [Caller] b. ready to negotiate: 2. send the offer\n                // type: video-offer\n                this.callbacks.onNegotiateReady(key, pc.localDescription);\n            } catch (e) {\n                console.error(e);\n            }\n        };\n\n        pc.onicecandidate = ({ candidate }) => {\n            // type: new-ice-candidate\n            this.callbacks.onIceCandidate(key, candidate);\n        };\n\n        pc.oniceconnectionstatechange = () => {\n            switch (pc.iceConnectionState) {\n                case \"closed\":\n                {\n                    this.close(key);\n                    break;\n                }\n                case \"failed\":\n                {\n                    pc.restartIce();\n                    break;\n                }\n            }\n        };\n\n        pc.onicegatheringstatechange = (e) => {\n            console.log(e);\n        };\n\n        pc.onsignalingstatechange = () => {\n            switch (pc.signalingState) {\n                case \"closed\":\n                {\n                    this.close(key);\n                    break;\n                }\n            }\n        }\n\n        return key;\n    }\n\n    addTrack(key) {\n        let pc = this.pcs.get(key);\n        // [Caller] a. invite: 3. add the local stream's tracks\n        for (const track of this.stream.getTracks()) {\n            pc.addTrack(track, this.stream);\n        }\n    }\n\n    close(key) {\n        let pc = this.pcs.get(key);\n        pc.ontrack = null;\n        pc.onremovetrack = null;\n        pc.onremovestream = null;\n        pc.onicecandidate = null;\n        pc.oniceconnectionstatechange = null;\n        pc.onsignalingstatechange = null;\n        pc.onicegatheringstatechange = null;\n        pc.onnegotiationneeded = null;\n\n        pc.close();\n        pc = null;\n        this.pcs.delete(key);\n\n        // stop video track\n        this.callbacks.onRemoteSteamClose(key);\n    }\n\n    closeAll() {\n        this.pcs.forEach((pc, key) => {\n            this.close(key);\n        });\n        this.pcs.clear();\n        this.stream = null;\n    }\n\n    getPeerConnectionLastId() {\n        return this.pcs.size;\n    }\n\n    async handleVideoOfferMsg(description) {\n        // [Callee] received video-offer: 1. Create an RTCPeerConnection\n        let key = this.create();\n        let pc = this.pcs.get(key);\n        // [Callee] a. received video-offer: 2. set remote SDP\n        await pc.setRemoteDescription(description);\n        // [Callee] a. received video-offer: 3. access the webcam and microphone\n        // [Callee] a. received video-offer: 4. add the local stream's tracks\n        // [Callee] a. received video-offer: 5. create(set) an SDP answer\n        await this.open();\n        this.addTrack(key);\n        let answer = await pc.createAnswer();\n        answer.sdp = this.replaceSDP(answer.sdp);\n        await pc.setLocalDescription(answer);\n        // [Callee] a. received video-offer: 6. send the answer\n        // type: video-answer\n        return {key, description: pc.localDescription};\n    }\n\n    async handleVideoAnswerMsg(key, description) {\n        // [Caller] c. received video-answer : 1. create(set) an SDP\n        let pc = this.pcs.get(key);\n        return await pc.setRemoteDescription(description);\n    }\n\n    async handleNewICECandidateMsg(key, candidate) {\n        let pc = this.pcs.get(key);\n        return await pc.addIceCandidate(candidate);\n    }\n\n    replaceSDP(sdp) {\n        // audio quality https://stackoverflow.com/questions/46063374/is-it-really-possible-for-webrtc-to-stream-high-quality-audio-without-noise\n        return sdp.replace('useinbandfec=1', 'useinbandfec=1; stereo=1; maxaveragebitrate=320000');\n    }\n}","let base_url = process.env.BASE_URL;\nexport default class Constant {\n    static DEBUG = true;\n    static DEFAULT_AVATAR = `${base_url}/static/chat.png`;\n    static MAX_LIMITS = 100; //断线最大重连次数\n    static COOKIE_EXPIRE_DAYS = 7; //cookie过期天数\n    static MAX_IMAGE_SIZE = 1024 * 1024 * 4; //最大上传图片尺寸\n    static MAX_MUSIC_SIZE = 1024 * 1024 * 16; //最大音乐尺寸\n    static MAX_FILE_SIZE = 1024 * 1024 * 50; //最大音乐尺寸\n\n    // 文本消息\n    static MESSAGE_COMMON = 100;\n    static MESSAGE_SELF = 101;\n    static MESSAGE_OTHER = 102;\n    static MESSAGE_PERSONAL = 103;\n\n    // 用户\n    static USER_ONLINE = 200;//用户上线\n    static USER_QUIT = 201;//用户退出\n    static USER_LIST = 202;//用户列表\n    static USER_QUERY = 203; //用户查询\n    static USER_REGISTER = 204;//用户注册\n    static USER_LOGIN = 205; // 用户登录\n    static USER_DISABLED = 206;//用户禁用\n    static USER_DOWNLINE = 207;//用户下线\n    static USER_INCORRECT = 208;//用户名/密码错误\n    static USER_REMOVE = 209;//用户移除\n    static USER_AVATAR_UPLOAD = 210;//上传头像\n    static USER_AVATAR_SUCCESS = 211;//上传成功\n    static USER_AVATAR_FAIL = 212;//上传失败\n    static USER_ONLINE_TOTAL = 213; // 用户在线数量\n\n    // 图片\n    static IMAGE_COMMON = 300;\n    static IMAGE_SELF = 301;\n    static IMAGE_OTHER = 302;\n    static IMAGE_PERSONAL = 303;\n\n    // 音乐\n    static MUSIC_COMMON = 500;\n    static MUSIC_SELF = 501;\n    static MUSIC_OTHER = 502;\n    static MUSIC_PERSONAL = 503;\n\n    // 文件\n    static FILE_COMMON = 1000;\n    static FILE_SELF = 1001;\n    static FILE_OTHER = 1002;\n    static FILE_PERSONAL = 1003;\n\n    // 群聊\n    static GROUP_CREATE = 1100;\n    static GROUP_QUERY_LIST = 1101;\n    static GROUP_QUERY_MEMBER = 1102;\n    static GROUP_QUERY_INFO = 1103;\n// static GROUP_JOIN = 1104;\n// static GROUP_EXIT = 1105;\n// static GROUP_DEL = 1106;\n\n    // RTC\n    static RTC_CREATE = 600;\n    static RTC_JOIN = 601;\n    static RTC_MESSAGE = 602;\n    static RTC_OFFLINE = 603;\n    static RTC_CLOSE = 604;\n    static RTC_EXIT = 605;\n\n    // 历史记录\n    static HISTORY_MESSAGE_COMMON = 800;\n    static HISTORY_MESSAGE_PERSONAL = 801;\n\n    // 通知\n    static ERROR = 900;\n    static WARNING = 901;\n    static SYSTEM = 902;\n    static FILE_UPLOAD_SUCCESS = 903;\n}\n","export default class IMessage {\n    setNext(next) {\n        this.next = next;\n    }\n\n    getNext() {\n        return this.next;\n    }\n\n    //process(vm, mess) {}\n}","// import {unpack, pack} from 'msgpackr';\n\nexport class DataHelper {\n    static encode(obj) {\n        // return pack(obj);\n        return JSON.stringify(obj);\n    }\n\n    static decode(str) {\n        return JSON.parse(str);\n        // return unpack(new Uint8Array(str)); //ArrayBuffer->Uint8Array\n    }\n\n    static toObject(obj) {\n        let target = {};\n        for (let key in obj) {\n            target[key] = obj[key];\n        }\n        return target;\n    }\n\n    static buildTraceId() {\n        return Math.random().toString(36).substr(2,10);\n    }\n\n    static async sha256(blob) {\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/SubtleCrypto/digest\n        let buffer = await blob.arrayBuffer();\n        let hashBuffer = await crypto.subtle.digest(\"SHA-256\", buffer);\n        let hashArray = Array.from(new Uint8Array(hashBuffer)); // 将缓冲区转换为字节数组\n        return hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\"); // 将字节数组转换为十六进制字符串\n    }\n}\n\nString.prototype.replaceMulti = function (search, replace) {\n    let str = this;\n    search.forEach((value, key) => {\n        str = str.replace(new RegExp(value, 'gi'), replace[key]);\n    });\n    return str;\n};\n\nDate.prototype.format = function (format = 'Y-m-d H:i:s') {\n    let search = ['Y', 'm', 'd', 'H', 'i', 's', 'y'];\n    let replace = [this.getFullYear(), (this.getMonth() + 1).toString().padStart(2, '0'),\n        this.getDate().toString().padStart(2, '0'), this.getHours().toString().padStart(2, '0'),\n        this.getMinutes().toString().padStart(2, '0'), this.getSeconds().toString().padStart(2, '0'),\n        this.getFullYear().toString().padStart(4, '0').substring(2)];\n    return format.replaceMulti(search, replace);\n};\n\nDate.prototype.formatUTC = function (format = 'Y-m-d H:i:s') {\n    let search = ['Y', 'm', 'd', 'H', 'i', 's', 'y'];\n    let replace = [this.getUTCFullYear(), (this.getUTCMonth() + 1).toString().padStart(2, '0'),\n        this.getUTCDate().toString().padStart(2, '0'), this.getUTCHours().toString().padStart(2, '0'),\n        this.getUTCMinutes().toString().padStart(2, '0'), this.getUTCSeconds().toString().padStart(2, '0'),\n        this.getUTCFullYear().toString().padStart(4, '0').substring(2)];\n    return format.replaceMulti(search, replace);\n};\n\nexport function generateUUID() {\n    let time = new Date().getTime();\n    time += performance.now();\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n        char,\n    ) {\n        let rand = (time + Math.random() * 16) % 16 | 0;\n        time = Math.floor(time / 16);\n        return (char === \"x\" ? rand : (rand & 0x3) | 0x8).toString(16);\n    });\n}\n","export default class IProcessor {\n    constructor() {\n        this.methods = this.getMethods();\n        this.data = this.getData;\n    }\n\n    getData() {}\n\n    getMethods() {}\n}","import IMessage from \"./imessage.js\";\nimport Constant from \"./constant.js\";\nimport {DataHelper, generateUUID} from \"./util.js\";\nimport IProcessor from \"./iprocessor.js\";\n\nexport class GeneralMessage extends IMessage {\n    process(vm, mess) {\n        switch (mess.type) {\n            // 用户状态\n            // myself @other TODO 修改消息样式\n            case Constant.MESSAGE_SELF:\n            case Constant.IMAGE_SELF:\n            case Constant.FILE_SELF:\n            case Constant.MUSIC_SELF:\n                break;\n            case Constant.USER_REGISTER: // 需要注册\n                vm.$modal.show('login-modal');\n                break;\n            case Constant.USER_INCORRECT: // 登录出错\n                vm.$notify({\n                    group: 'tip',\n                    text: mess.mess,\n                    type: 'error',\n                });\n                break;\n            case Constant.USER_LOGIN: // 已经登录\n            {\n                let user = mess.user;\n                // 隐藏modal\n                vm.$modal.hide('login-modal');\n                // 更新vm.user\n                vm.user.id = user.user_id;\n                vm.user.displayName = user.username;\n                vm.user.avatar = user.avatar ? vm.upload_url + user.avatar : Constant.DEFAULT_AVATAR;\n                // 刷新cookie 在线用户列表\n                vm.setCookie(\"user\", JSON.stringify(vm.user));\n                vm.online_users.set(user.user_id, user);\n                vm.$notify({\n                    group: 'tip',\n                    text: `${vm.user.displayName}，欢迎回来`,\n                    type: 'success',\n                });\n\n                // 查询在线人数\n                vm.sendMessage(Constant.USER_ONLINE_TOTAL);\n\n                // 查询群组列表\n                vm.sendMessage(Constant.GROUP_QUERY_LIST);\n\n                // 查询在线用户\n                vm.sendMessage(Constant.USER_LIST);\n                break;\n            }\n            case Constant.USER_LIST: // 在线用户\n            {\n                let users = mess.users;\n                for (let user of users) {\n                    vm.online_users.set(user.user_id, user);\n                }\n                break;\n            }\n            case Constant.USER_ONLINE://欢迎消息\n            {\n                let user = mess.user;\n                // 联系人\n                vm.im.appendMessage({\n                    id: generateUUID(),\n                    status: \"succeed\",\n                    type: \"event\",\n                    sendTime: mess.timestamp,\n                    content: `用户 ${user.username} 进入聊天室`,\n                    toContactId: \"0\",\n                }, true);\n                if (vm.user.id !== user.user_id) {\n                    ++vm.online_total;\n                    user.is_online = true;\n                    vm.online_users.set(user.user_id, user);\n                    vm.updateContact(user.user_id, {is_online: true});\n                    vm.updateContact(\"0\", {online_total:vm.online_total, unread: \"+1\"});\n                }\n                break;\n            }\n            case Constant.USER_ONLINE_TOTAL:\n                vm.online_total = mess.mess; // 置为实际数量\n                vm.updateContact(\"0\", {online_total:vm.online_total});\n                break;\n            case Constant.USER_QUIT:\n            {\n                let user = mess.user;\n                if (vm.user.id !== user.user_id) {\n                    vm.im.appendMessage({\n                        id: generateUUID(),\n                        status: \"succeed\",\n                        type: \"event\",\n                        sendTime: mess.timestamp,\n                        content: `用户 ${user.username} 退出聊天室`,\n                        toContactId: \"0\",\n                        fromUser: \"\"\n                    }, true);\n                    vm.online_total = Math.max(--vm.online_total, 1);\n                    vm.online_users.delete(user.user_id);\n                    vm.updateContact(\"0\", {online_total:vm.online_total, unread: \"+1\"});\n                    vm.updateContact(user.user_id, {is_online: false});\n                }\n                break;\n            }\n            case Constant.USER_QUERY:\n            {\n                let user = mess.user;\n                let user_id = user.user_id;\n                vm.addUser(user);\n                // 执行下一步\n                let resolve = vm.query_next.get(user_id);\n                if (resolve) {\n                    resolve(user);\n                }\n                break;\n            }\n            case Constant.USER_DOWNLINE://下线\n            case Constant.USER_REMOVE://移除\n            case Constant.USER_DISABLED: //禁用\n            {\n                vm.user.is_active = 0;\n                vm.disconnect_mess = vm.disconnect_mess = mess.mess;\n                vm.$modal.show('disconnect-modal');\n                break;\n            }\n\n            case Constant.USER_AVATAR_SUCCESS: {\n                vm.user.avatar = vm.upload_url + mess.mess;\n                // 刷新cookie\n                vm.setCookie(\"user\", JSON.stringify(vm.user));\n                // 刷新在线用户\n                let user = vm.online_users.get(vm.user.id);\n                user.avatar = mess.mess;\n                vm.online_users.set(vm.user.id, user);\n                vm.$notify({\n                    group: 'tip',\n                    text: '上传头像成功',\n                    type: 'success',\n                });\n                break;\n            }\n            case Constant.USER_AVATAR_FAIL: {\n                vm.$notify({\n                    group: 'tip',\n                    text: '上传头像失败',\n                    type: 'warn',\n                });\n                break;\n            }\n\n            // 公共、个人消息\n            case Constant.MESSAGE_COMMON: //公共消息\n            case Constant.MESSAGE_OTHER: //other @me\n            case Constant.IMAGE_COMMON:\n            case Constant.IMAGE_OTHER:\n            case Constant.MUSIC_COMMON:\n            case Constant.MUSIC_OTHER:\n            case Constant.FILE_COMMON:\n            case Constant.FILE_OTHER:\n            {\n                let sender_id = mess.sender_id;\n                if (sender_id === vm.user.id) return; // 自己发的，忽略，避免重复\n\n                // 查询收信人（群组）\n                let receiver_id = mess.receiver_id;\n                let is_group = receiver_id && (receiver_id !== vm.user.id);\n                if (is_group) {\n                    let contact = vm.im.findContact(receiver_id);\n                    if (!contact) {\n                        vm.sendMessage(Constant.GROUP_QUERY_INFO, '0', receiver_id);\n                        let promise = new Promise((resolve) => {\n                            vm.query_group_next.set(receiver_id, resolve);\n                        });\n                        promise.then((group) => {\n                            vm.query_group_next.delete(group.id);\n                            // 添加联系人\n                            vm.addGroupContact(group);\n                        });\n                    }\n                }\n\n                // 查询发信人，若找不到用户，则查询异步处理\n                vm.getUserAsync(sender_id, (user) => {\n                    vm.addPersonalContact(user);\n                    vm.receiveMessage(mess, user);\n                });\n                break;\n            }\n\n            case Constant.HISTORY_MESSAGE_COMMON:\n            case Constant.HISTORY_MESSAGE_PERSONAL:\n            {\n                let contact_id = mess.receiver_id;\n                let resolve = vm.pull_next.get(contact_id);\n                if (resolve) {\n                    resolve(mess);\n                }\n                break;\n            }\n\n            // 文件上传\n            case Constant.FILE_UPLOAD_SUCCESS:\n            {\n                // hash, path, size\n                let resolve = vm.upload_next.get(mess.mess.hash);\n                resolve(mess.mess);\n                break;\n            }\n\n            // 通知\n            case Constant.ERROR:\n            case Constant.WARNING:\n            case Constant.SYSTEM:\n            {\n                vm.receiveMessage(mess);\n                break;\n            }\n\n            default:\n            {\n                this.next.process(vm, mess);\n                break;\n            }\n        }\n    }\n}\n\nexport class GeneralProcessor extends IProcessor {\n    getData() {\n        return {\n            im: null,\n            server_url: process.env.VUE_APP_SERVER_URL,\n            upload_url: process.env.VUE_APP_UPLOAD_URL,\n            default_avatar_url: Constant.DEFAULT_AVATAR,\n            width: window.innerWidth - 16,\n            height: window.innerHeight - 16,\n            username: \"\",\n            password: \"\",\n            user: {id: 0, displayName: '', avatar: Constant.DEFAULT_AVATAR, is_active: 1},\n            socket: null,\n            reconnect_times: 0,\n            disconnect_mess: \"\",\n            online_total: 0,\n            online_users: new Map(),\n            pull_next: new Map(),\n            send_next: new Map(),\n            query_next: new Map(),\n            upload_next: new Map(),\n            query_member_next: new Map(),\n            query_group_next: new Map(),\n            images: [],\n            image_crop: {\n                show: false,\n            },\n        };\n    }\n\n    getMethods() {\n        return {\n            // 回调方法\n            onOpen() {\n                // 从cookie中获取信息\n                let user = JSON.parse(this.getCookie('user'));\n                if (typeof user === 'object') {\n                    this.user.id = user.id;\n                    this.user.displayName = user.displayName;\n                    this.user.avatar = user.avatar ? user.avatar : Constant.DEFAULT_AVATAR;\n                    this.sendMessage(Constant.USER_LOGIN);\n                } else {\n                    this.$modal.show('login-modal');\n                }\n            },\n            onMessage(message) {\n                let mess = DataHelper.decode(message.data);\n                mess.timestamp = mess.timestamp * 1000;\n                this.trace(\"receive\", mess);\n                this.$modal.hide('disconnect-modal');\n                this.message_handler.process(this, mess);\n            },\n            onClose() {\n                // 联系人离线\n                if (!this.user.is_active) return; // 被禁用\n                if (this.socket.readyState === WebSocket.OPEN) return; // 重试多次时，避免连接成功后再次调用\n\n                this.disconnect_mess = (new Date()).format() + ' 已断线，重试中...';\n                this.$modal.show('disconnect-modal');\n                let timer;\n                let handler = () => {\n                    try {\n                        //断线重连\n                        if (this.reconnect_times >= Constant.MAX_LIMITS) {\n                            window.clearInterval(timer);\n                            this.$notify({\n                                group: 'tip',\n                                text: '无法连接到服务器，请稍候再试',\n                                type: 'warn',\n                            });\n                            return this.$modal.hide('disconnect-modal');\n                        }\n                        if (this.socket.readyState === WebSocket.OPEN) {\n                            window.clearInterval(timer);\n                            this.socket.addEventListener('message', this.onMessage);\n                            this.socket.addEventListener('close', this.onClose);\n                            this.socket.addEventListener('error', this.onError);\n\n                            this.onOpen();\n\n                            this.reconnect_times = 0;\n                            return this.$modal.hide('disconnect-modal');\n                        }\n                        this.socket = new WebSocket(this.server_url);\n                        this.socket.binaryType = 'arraybuffer';\n                        this.reconnect_times++;\n                    } catch (e) {\n                        this.trace(e);\n                    }\n                };\n                timer = window.setInterval(handler, 2000);\n            },\n            onError(e) {\n                this.trace(e);\n                this.$notify({\n                    group: 'tip',\n                    text: '连接服务器出错',\n                    type: 'error',\n                });\n            },\n\n            // 工具方法\n            timeFormat(timestamp) {\n                let date = new Date(timestamp);\n                let is_today = ((new Date()).getTime() - date.getTime() < 8.64e7);\n                let format = is_today ? 'H:i' : 'y.m.d H:i';\n                return date.format(format);\n            },\n            trace() {\n                if (!Constant.DEBUG)\n                    return;\n                let now = (window.performance.now() / 1000).toFixed(3);\n                console.group(now);\n                console.log(...arguments);\n                console.groupEnd();\n            },\n            getCookie(name) {\n                let nameEQ = name + \"=\";\n                let ca = document.cookie.split(';');    //把cookie分割成组\n                for (let c of ca) {\n                    while (c.charAt(0) === ' ') {          //判断一下字符串有没有前导空格\n                        c = c.substring(1, c.length);      //有的话，从第二位开始取\n                    }\n                    if (c.indexOf(nameEQ) === 0) {       //如果含有我们要的name\n                        return unescape(c.substring(nameEQ.length, c.length));    //解码并截取我们要值\n                    }\n                }\n                return false;\n            },\n            setCookie(name, value) {\n                let exp = new Date();\n                exp.setTime(exp.getTime() + Constant.COOKIE_EXPIRE_DAYS * 24 * 60 * 60 * 1000);\n                document.cookie = name + \"=\" + escape(value) + \";expires=\" + exp.toGMTString();\n            },\n            sendMessage(type, receiver_id = '0', mess = null, id = \"\", trace_id = \"\") {\n                let defaults = {\n                    type: Constant.MESSAGE_COMMON,\n                    receiver_id: '0',\n                    mess: \"\",\n                    trace_id: trace_id ? trace_id : DataHelper.buildTraceId(),\n                };\n                let data = Object.assign(defaults, {\n                    type,\n                    sender_id: this.user.id,\n                    receiver_id,\n                    mess,\n                });\n                if (id) data.id = id;\n                this.trace(\"send\", data);\n                this.socket.send(DataHelper.encode(data));\n            },\n            parseMessage(mess, sender = null) {\n                let id, type, content, fileSize, fileName;\n                id = mess.id;\n                switch (mess.type) {\n                    case Constant.MESSAGE_COMMON:\n                    case Constant.MESSAGE_SELF:\n                    case Constant.MESSAGE_OTHER:\n                    {\n                        type = \"text\";\n                        content = mess.mess;\n                        fileSize = 0;\n                        fileName = \"\";\n                        break;\n                    }\n                    case Constant.IMAGE_COMMON:\n                    case Constant.IMAGE_SELF:\n                    case Constant.IMAGE_OTHER:\n                    {\n                        type = \"image\";\n                        content = this.upload_url + mess.mess.path;\n                        fileSize = mess.mess.size;\n                        fileName = mess.mess.name;\n                        break;\n                    }\n                    case Constant.FILE_COMMON:\n                    case Constant.FILE_SELF:\n                    case Constant.FILE_OTHER:\n                    {\n                        type = \"file\";\n                        content = this.upload_url + mess.mess.path;\n                        fileSize = mess.mess.size;\n                        fileName = mess.mess.name;\n                        break;\n                    }\n                    case Constant.MUSIC_COMMON:\n                    case Constant.MUSIC_SELF:\n                    case Constant.MUSIC_OTHER:\n                    {\n                        type = \"music\";\n                        content = this.upload_url + mess.mess.path;\n                        fileSize = mess.mess.size;\n                        fileName = mess.mess.name;\n                        break;\n                    }\n                    case Constant.GROUP_CREATE:\n                    {\n                        type = \"event\";\n                        let admin_name = (sender.user_id === this.user.id) ? \"你\" : sender.username;\n                        content = admin_name + \"创建了群聊\";\n                        fileSize = 0;\n                        fileName = \"\";\n                        break;\n                    }\n                    case Constant.ERROR:\n                    case Constant.WARNING:\n                    case Constant.SYSTEM:\n                    {\n                        id = generateUUID();\n                        type = \"event\";\n                        content = mess.mess;\n                        fileSize = 0;\n                        fileName = \"\";\n                        break;\n                    }\n                }\n                let toContactId;\n                switch (mess.type) {\n                    case Constant.MESSAGE_OTHER:\n                    case Constant.IMAGE_OTHER:\n                    case Constant.FILE_OTHER:\n                    case Constant.MUSIC_OTHER:\n                    {\n                        toContactId = mess.sender_id;\n                        break;\n                    }\n                    default:\n                    {\n                        toContactId = mess.receiver_id;\n                        break;\n                    }\n                }\n                return {\n                    id: id,\n                    status: \"succeed\",\n                    type,\n                    sendTime: mess.timestamp,\n                    content,\n                    toContactId,\n                    fileSize,\n                    fileName,\n                    fromUser: {\n                        //如果 id == this.user.id消息会显示在右侧，否则在左侧\n                        id: mess.sender_id,\n                        displayName: sender ? sender.username : '',\n                        avatar: sender && sender.avatar ? this.upload_url + sender.avatar : Constant.DEFAULT_AVATAR,\n                    }\n                };\n            },\n            receiveMessage(mess, sender = null) {\n                let parsed = this.parseMessage(mess, sender);\n                this.trace('parsed', parsed);\n                this.im.appendMessage(parsed, true);\n                // this.updateContact(parsed.toContactId, {unread: \"+1\"});\n            },\n            updateContact(contact_id, option) {\n                this.im.updateContact({\n                    id: contact_id,\n                    ...option,\n                });\n            },\n            addPersonalContact(user, lastMessage = \"\") {\n                let data = {\n                    id: user.user_id,\n                    displayName: user.username,\n                    avatar: user.avatar ? this.upload_url + user.avatar : Constant.DEFAULT_AVATAR,\n                    lastContent: lastMessage,\n                    index: \"Personal\",\n\n                    // 新加字段\n                    is_group: false,\n                    is_online: user.is_online,\n                    query_time: ((new Date()).getTime() + performance.now()) / 1000,\n                };\n                this.im.appendContact(data);\n            },\n            addUser(user) {\n                return this.online_users.set(user.user_id, user);\n            },\n            getUser(user_id) {\n                return this.online_users.get(user_id);\n            },\n            getUserAsync(user_id, callback = new Function()) {\n                let user = this.getUser(user_id);\n                if (user) {\n                    callback(user);\n                } else {\n                    this.sendMessage(Constant.USER_QUERY, user_id, user_id);\n                    let promise = new Promise((resolve) => {\n                        this.query_next.set(user_id, resolve);\n                    });\n                    promise.then((user) => {\n                        this.query_next.delete(user.user_id);\n                        // 添加联系人\n                        this.addPersonalContact(user);\n                        return user;\n                    }).then(callback);\n                }\n            },\n            addGroupContact(group, lastMessage = \"\", members = new Map()) {\n                let data = {\n                    id: group.id,\n                    displayName: group.name,\n                    avatar: group.avatar ? this.upload_url + group.avatar : Constant.DEFAULT_AVATAR,\n                    lastContent: lastMessage,\n                    index: \"Group\",\n\n                    // 新加字段\n                    online_total: 0,\n                    is_group: true,\n                    members: members,\n                    query_time: ((new Date()).getTime() + performance.now()) / 1000,\n                };\n                this.im.appendContact(data);\n            },\n\n            // 交互方法\n            login(e) {\n                e.preventDefault();\n                let username = this.username.trim();\n                if (username.length < 3) {\n                    this.$notify({\n                        group: 'tip',\n                        text: \"用户名需要3字符以上\",\n                        type: 'error',\n                    });\n                    return false;\n                }\n                // 登录/注册\n                this.socket.send(DataHelper.encode({\n                    type: Constant.USER_REGISTER,\n                    username: username.substr(0, 30),\n                    password: this.password ? this.password : '123456',\n                }));\n                return false;\n            },\n            getHistory(contact, next) {\n                let query_time = (contact.query_time > 0) ? contact.query_time : ((new Date()).getTime() + performance.now()) / 1000;\n                let type = contact.is_group ? Constant.HISTORY_MESSAGE_COMMON : Constant.HISTORY_MESSAGE_PERSONAL;\n                // 异步查询历史消息\n                let promise = new Promise((resolve, reject) => {\n                    try {\n                        this.sendMessage(type, contact.id, query_time);\n                        this.pull_next.set(contact.id, resolve); // 保存resolve\n                    } catch (e) {\n                        reject(e);\n                        this.trace(e);\n                    }\n                });\n                promise.then((mess) => {\n                    let query_id_list = new Set(); // 要查询的唯一用户ID\n                    let contact_id = mess.receiver_id;\n                    let list = mess.mess;\n                    this.pull_next.delete(contact_id); // 清除resolve\n                    // 更新下次查询时间（以第1条消息为准），精确到4位，和服务器保持一致，并去除边界的一条\n                    list.length && (contact.query_time = list[0].timestamp - 0.0001);\n\n                    // 查询未知的用户信息，消息列表需要展示昵称和头像\n                    for (let one of list) {\n                        let sender_id = one.sender_id;\n                        let user = this.getUser(sender_id);\n                        if (!user) {\n                            query_id_list.add(sender_id);\n                        }\n                    }\n                    let promise_list = [];\n                    query_id_list.forEach((user_id) => {\n                        let promise2 = new Promise((resolve) => {\n                            this.query_next.set(user_id, resolve);\n                            this.sendMessage(Constant.USER_QUERY, user_id, \"\", \"\", user_id);\n                        });\n                        promise2.then((user) => {\n                            this.addPersonalContact(user);\n                        });\n                        promise_list.push(promise2);\n                    });\n                    // 用户信息全部查询完毕，再处理消息\n                    Promise.all(promise_list).then(() => {\n                        let messages = [];\n                        for (let one of list) {\n                            let sender_id = one.sender_id;\n                            let user = this.getUser(sender_id);\n                            one.timestamp = one.timestamp * 1000;\n                            messages.push(this.parseMessage(one, user));\n                        }\n                        let is_end = (list.length < 10);\n                        // 将第二个参数设为true，表示已到末尾\n                        next(messages, is_end);\n\n                        // 清除resolve\n                        query_id_list.forEach((user_id) => {\n                            this.query_next.delete(user_id);\n                        });\n                    });\n                });\n            },\n            // 发送消息\n            send(message, next, file) {\n                try {\n                    this.trace('@send', message, file);\n\n                    // 有文件时，修正type\n                    if (file) {\n                        let music_types = [\n                            \"audio/mpeg\",\n                        ];\n                        if (music_types.includes(file.type)) {\n                            message.type = \"music\";\n                        }\n                    }\n\n                    let receiver_id = message.toContactId;\n                    let contact = this.im.findContact(receiver_id);\n                    let is_personal = !contact.is_group + 0;\n                    let type_map = {\n                        \"image\": [Constant.IMAGE_COMMON, Constant.IMAGE_PERSONAL],\n                        \"file\": [Constant.FILE_COMMON, Constant.FILE_PERSONAL],\n                        \"text\": [Constant.MESSAGE_COMMON, Constant.MESSAGE_PERSONAL],\n                        \"music\": [Constant.MUSIC_COMMON, Constant.MUSIC_PERSONAL],\n                    };\n                    let type = type_map[message.type][is_personal];\n\n                    // 文本直接发送\n                    if (!file) {\n                        this.sendMessage(type, receiver_id, message.content, message.id);\n                        return next();\n                    }\n\n                    // 文件处理\n                    // audio/mpeg image/png\n                    let limit_size;\n                    switch (message.type) {\n                        case \"image\":\n                        default:\n                            limit_size = Constant.MAX_IMAGE_SIZE;\n                            break;\n                        case \"music\":\n                            limit_size = Constant.MAX_MUSIC_SIZE;\n                            break;\n                        case \"file\":\n                            limit_size = Constant.MAX_FILE_SIZE;\n                            break;\n                    }\n                    if (file.size > limit_size) {\n                        this.$notify({\n                            group: 'tip',\n                            text: '文件太大，限制：<' + (limit_size / 1024 ** 2) + 'M',\n                            type: 'error',\n                        });\n                        return next({status:'failed'});\n                    }\n\n                    this.socket.send(file); // WebSocket发送文件时无法携带其他信息\n                    let message_id = message.id;\n                    let hashing = DataHelper.sha256(file);\n                    hashing.then((hash) => {\n                        return new Promise((resolve) => {\n                            this.upload_next.set(hash, resolve);\n                        });\n                    }).then((info) => {\n                        let {hash, path} = info;\n                        this.upload_next.delete(hash);\n                        let data = {\n                            name: file.name,\n                            path,\n                            size: file.size,\n                        };\n                        this.sendMessage(type, receiver_id, data, message.id);\n                        // 更新此条消息的URL\n                        this.im.updateMessage({\n                            id: message_id,\n                            content: this.upload_url + path,\n                        });\n                        next();\n                    });\n                } catch (e) {\n                    this.trace(e);\n                    next({status:'failed'});\n                }\n            },\n\n            // 打开/关闭抽屉，展示群组/私聊成员\n            toggleDrawer() {\n                // let self = this;\n                this.im.changeDrawer({\n                    position: \"rightInside\",\n                    offsetY: 33,\n                    width: 242,\n                    height: this.$el.clientHeight - 33,\n                });\n            },\n\n            // 消息点击\n            messageClick(e, key, message) {\n                let contact_id = message.toContactId;\n                // 标记为已读\n                this.updateContact(contact_id, {unread: 0});\n\n                this.trace(e, key, message);\n                switch (message.type) {\n                    case \"image\":\n                    {\n                        this.imagePreview(message.content);\n                        break;\n                    }\n                    case \"file\":\n                    {\n                        window.open(message.content);\n                        break;\n                    }\n                }\n            },\n\n            // 切换联系人\n            changeContact(contact) {\n                let contact_id = contact.id;\n                this.updateContact(contact_id, {unread: 0});\n                if (contact.is_group && contact_id && !contact.members.size) {\n                    // 查询成员\n                    let group_id = contact_id;\n                    this.sendMessage(Constant.GROUP_QUERY_MEMBER, 0, group_id);\n                    // TODO 更新列表\n                    let promise = new Promise((resolve) => {\n                        this.query_member_next.set(group_id, resolve);\n                    });\n                    promise.then((members) => {\n                        members.forEach((member) => {\n                            contact.members.set(member.user_id, member);\n                        });\n                        this.$forceUpdate();\n                    });\n                }\n            },\n\n            // 图片预览\n            imagePreview(url) {\n                let images = document.querySelectorAll(\".lemon-message__content img[src^=http]\");\n                let index = 0;\n                this.images = [];\n                images.forEach((image, i) => {\n                    this.images.push(image.src);\n                    if (image.src === url) {\n                        index = i;\n                    }\n                });\n                this.$viewerApi({\n                    images: this.images,\n                    options: {\n                        toolbar: true,\n                        initialViewIndex: index,\n                    },\n                });\n            },\n\n            // 打开公告\n            openNotice() {\n                return '';\n            },\n\n            // 添加成员\n            openAddGroupUser() {},\n\n            // 更换头像\n            changeAvatar() {\n                this.image_crop.show = true;\n            },\n\n            cropSuccess(imgDataUrl) {\n                fetch(imgDataUrl)\n                    .then(res => res.blob())\n                    .then(blob => {\n                        let hashing = DataHelper.sha256(blob);\n                        this.socket.send(blob); // 上传文件之后，服务器返回path, size, hash\n                        return hashing; // return to next\n                    }).then((hash) => {\n                    // return Promise，在服务器返回数据时调用resolve\n                    return new Promise((resolve) => {\n                        this.upload_next.set(hash, resolve);\n                    });\n                }).then((info) => {\n                    // 数据来自resolve(xxx)\n                    let {path, size, hash} = info;\n                    this.upload_next.delete(hash);\n                    this.sendMessage(Constant.USER_AVATAR_UPLOAD, '0', {path, size});\n                }).catch((e) => {\n                    this.trace(e);\n                });\n            },\n        };\n    }\n}","import IMessage from \"./imessage.js\";\nimport Constant from \"./constant.js\";\nimport IProcessor from \"./iprocessor.js\";\n\nexport class GroupMessage extends IMessage {\n    process(vm, mess) {\n        switch (mess.type) {\n            // 群聊\n            case Constant.GROUP_CREATE:\n            {\n                let group = mess.mess;\n                vm.groups.set(group.id, group);\n                // 更新联系人\n                vm.addGroupContact(group);\n                // 创建群聊通知\n                let admin_id = group.admin_id;\n                // 管理员昵称可能变化，这里查询最新昵称\n                vm.getUserAsync(admin_id, (user) => {\n                    vm.receiveMessage(mess, user);\n                });\n                break;\n            }\n            case Constant.GROUP_QUERY_LIST:\n            {\n                let groups = mess.mess;\n                for (let group_id of Object.keys(groups)) {\n                    let group = groups[group_id];\n                    group.id = group_id;\n                    vm.groups.set(group_id, group);\n                    vm.addGroupContact(group, \" \");\n                }\n                break;\n            }\n            case Constant.GROUP_QUERY_MEMBER:\n            {\n                let data = mess.mess;\n                let group_id = data.group_id;\n                let members = data.members;\n                let resolve = vm.query_member_next.get(group_id);\n                if (resolve) {\n                    resolve(members);\n                }\n                break;\n            }\n            case Constant.GROUP_QUERY_INFO:\n            {\n                let data = mess.mess;\n                let group_id = data.id;\n                let resolve = vm.query_group_next.get(group_id);\n                if (resolve) {\n                    resolve(data);\n                }\n                break;\n            }\n            default:\n            {\n                this.next.process(vm, mess);\n                break;\n            }\n        }\n    }\n}\n\nexport class GroupProcessor extends IProcessor {\n    getData() {\n        return {\n            group_name: \"\",\n            group_available_users: new Map(),\n            group_chosen_users: new Map(),\n            left_options: [],\n            right_options: [],\n            groups: new Map(),\n            // 成员菜单\n            group_menu: [\n                {\n                    text: \"发消息\",\n                    visible: instance => {\n                        return instance.contact.user_id !== this.user.id;\n                    },\n                    click: (e, instance, hide) => {\n                        const { IMUI, contact } = instance;\n                        IMUI.$parent.addPersonalContact(contact, \"临时会话\");\n                        IMUI.changeContact(contact.user_id);\n                        hide();\n                        IMUI.closeDrawer();\n                    },\n                },\n            ],\n        };\n    }\n\n    getMethods() {\n        return {\n            // 创建群聊\n            addGroup() {\n                this.group_name = \"\";\n                this.group_available_users = new Map(this.online_users);\n                this.group_available_users.delete(this.user.id);\n                this.group_chosen_users.clear();\n                this.$modal.show('group-modal');\n            },\n            moveToLeft() {\n                this.right_options.forEach((user_id) => {\n                    let user = this.group_chosen_users.get(user_id);\n                    this.group_available_users.set(user_id, user);\n                    this.group_chosen_users.delete(user_id);\n                });\n                this.$forceUpdate();\n            },\n            moveToRight() {\n                this.left_options.forEach((user_id) => {\n                    let user = this.group_available_users.get(user_id);\n                    this.group_chosen_users.set(user_id, user);\n                    this.group_available_users.delete(user_id);\n                });\n                this.$forceUpdate();\n            },\n            groupCancel() {\n                this.$modal.hide('group-modal');\n            },\n            groupSubmit() {\n                if (this.group_name === \"\") {\n                    return this.$notify({\n                        group: 'tip',\n                        text: '请输入群聊名称',\n                        type: 'error',\n                    });\n                }\n                let chosen_num = this.group_chosen_users.size;\n                if (chosen_num < 2) {\n                    return this.$notify({\n                        group: 'tip',\n                        text: '群聊人数不能少于2人',\n                        type: 'error',\n                    });\n                }\n\n                // 请求\n                let mess = {\n                    name: this.group_name,\n                    members: [...this.group_chosen_users.keys()],\n                };\n                this.sendMessage(Constant.GROUP_CREATE, 0, mess);\n                this.$modal.hide('group-modal');\n            },\n        };\n    }\n}","// see https://developer.mozilla.org/en-US/docs/Web/API/AnalyserNode\n// see https://github.com/mdn/webaudio-examples/blob/main/voice-change-o-matic/scripts/app.js\n// see https://mdn.github.io/webaudio-examples/voice-change-o-matic/\nexport default class VoiceVisualize {\n    constructor(stream) {\n        const audioCtx = new AudioContext();\n        this.analyser = audioCtx.createAnalyser();\n        // this.analyser.minDecibels = -90;\n        // this.analyser.maxDecibels = -10;\n        // this.analyser.smoothingTimeConstant = 0.85;\n        this.source = audioCtx.createMediaStreamSource(stream);\n        this.source.connect(this.analyser);\n        this.drawVisual = null;\n    }\n\n    visualize(canvas, visualSetting = \"sine-wave\") {\n        const canvasCtx = canvas.getContext(\"2d\");\n\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n        switch (visualSetting) {\n            case \"sine-wave\":\n            {\n                this.analyser.fftSize = 512;\n                const bufferLength = this.analyser.fftSize;\n                console.log(bufferLength);\n\n                // We can use Float32Array instead of Uint8Array if we want higher precision\n                // const dataArray = new Float32Array(bufferLength);\n                const dataArray = new Uint8Array(bufferLength);\n\n                canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n                const draw = () => {\n                    this.drawVisual = requestAnimationFrame(draw);\n\n                    this.analyser.getByteTimeDomainData(dataArray);\n\n                    canvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n                    canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n\n                    canvasCtx.lineWidth = 1;\n                    canvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n\n                    canvasCtx.beginPath();\n\n                    const sliceWidth = (WIDTH * 1.0) / bufferLength;\n                    let x = 0;\n\n                    for (let i = 0; i < bufferLength; i++) {\n                        const v = dataArray[i] / 128.0;\n                        const y = (v * HEIGHT) / 2;\n\n                        if (i === 0) {\n                            canvasCtx.moveTo(x, y);\n                        } else {\n                            canvasCtx.lineTo(x, y);\n                        }\n\n                        x += sliceWidth;\n                    }\n\n                    canvasCtx.lineTo(WIDTH, HEIGHT / 2);\n                    canvasCtx.stroke();\n                };\n\n                draw();\n                break;\n            }\n            case \"frequency-bars\":\n            {\n                this.analyser.fftSize = 256;\n                const bufferLengthAlt = this.analyser.frequencyBinCount;\n                console.log(bufferLengthAlt);\n\n                // See comment above for Float32Array()\n                const dataArrayAlt = new Uint8Array(bufferLengthAlt);\n\n                canvasCtx.clearRect(0, 0, WIDTH, HEIGHT);\n\n                const drawAlt = () => {\n                    this.drawVisual = requestAnimationFrame(drawAlt);\n\n                    this.analyser.getByteFrequencyData(dataArrayAlt);\n\n                    canvasCtx.fillStyle = \"rgb(0, 0, 0)\";\n                    canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n\n                    const barWidth = (WIDTH / bufferLengthAlt) * 2.5;\n                    let x = 0;\n\n                    for (let i = 0; i < bufferLengthAlt; i++) {\n                        const barHeight = dataArrayAlt[i];\n\n                        canvasCtx.fillStyle = \"rgb(\" + (barHeight + 100) + \",50,50)\";\n                        canvasCtx.fillRect(\n                            x,\n                            HEIGHT - barHeight / 2,\n                            barWidth,\n                            barHeight / 2\n                        );\n\n                        x += barWidth + 1;\n                    }\n                };\n\n                drawAlt();\n                break;\n            }\n        }\n    }\n\n    close() {\n        cancelAnimationFrame(this.drawVisual);\n        this.source.disconnect();\n        this.source = null;\n        this.analyser = null;\n    }\n}","import IMessage from \"./imessage.js\";\nimport Constant from \"./constant.js\";\nimport IProcessor from \"./iprocessor.js\";\nimport VoiceVisualize from \"./voice_visualize.js\";\n\nexport class RTCMessage extends IMessage {\n    process(vm, mess) {\n        switch (mess.type) {\n            // RTC\n            case Constant.RTC_CREATE:\n            {\n                let data = mess.mess;\n                let sender_id = mess.sender_id;\n                let receiver_id = mess.receiver_id;\n                if (sender_id === vm.user.id) {\n                    // 本人创建，仅更新room_id\n                    vm.rtc_room_id = data.room_id;\n                    vm.rtc_receiver_id = receiver_id;\n                    return;\n                } else if (vm.rtc_running) {\n                    // 已经在聊天，忽略\n                    let message = vm.user.displayName + \" 正在聊天中\";\n                    vm.sendMessage(Constant.RTC_MESSAGE, sender_id, {\n                        type: \"deny\",\n                        message,\n                    });\n                    return;\n                }\n\n                // 弹窗提示\n                let video = data.video;\n                let is_group = data.is_group;\n                let title = '<div class=\"flex vertical-center\">';\n                title += '<span class=\"call-button\"></span>';\n                title += '<span>';\n                title += is_group ? '多人聊天' : '单人聊天';\n                title += '</span>';\n                title += '</div>';\n                let tag = video ? '视频': '语音';\n                vm.getUserAsync(sender_id, (user) => {\n                    vm.$modal.show('dialog', {\n                        title: title,\n                        text: `<b>${user.username}</b> 邀请您${tag}通话，是否接听？`,\n                        buttons: [\n                            {\n                                title: '拒绝',\n                                handler: () => {\n                                    vm.$modal.hide('dialog');\n                                    vm.sendMessage(Constant.RTC_MESSAGE, sender_id, {\n                                        type: \"deny\",\n                                        message: vm.user.displayName + \" 拒绝了您的通话请求\",\n                                    });\n                                }\n                            },\n                            {\n                                title: '接听',\n                                handler: () => {\n                                    vm.$modal.hide('dialog');\n                                    // 接受，显示弹窗\n                                    vm.$modal.show('rtc-modal');\n                                    vm.rtc_room_id = data.room_id; // 更新room_id\n                                    vm.rtc_receiver_id = receiver_id;\n                                    vm.video_flag = video;\n                                    vm.rtc.setConstraints({ audio: true, video });\n                                    // 打开摄像头，创建连接，添加轨道，设置local，稍后(onNegotiateReady)发送offer\n                                    vm.rtc.open().then((stream) => {\n                                        vm.setLocalStream(stream);\n                                        vm.rtc_running = true;\n                                        let key = vm.rtc.create();\n                                        vm.remote_medias.set(key, null);\n                                        vm.rtc.addTrack(key);\n                                        // 创建key<=>sender关联，后面要用\n                                        vm.associateKeyWithSender(key, sender_id);\n\n                                        // 请求加入房间\n                                        vm.sendMessage(Constant.RTC_JOIN, '0', data);\n                                    }).catch((e) => {\n                                        vm.trace(e);\n                                        vm.rtc_running = true;\n                                    });\n                                }\n                            },\n                        ]\n                    });\n                });\n                break;\n            }\n            case Constant.RTC_JOIN:\n            {\n                let data = mess.mess;\n                let sender_id = mess.sender_id;\n                vm.rtc_room_id = data.room_id;\n                if (sender_id === vm.user.id) return;\n                // 创建连接，添加轨道，设置local，稍后(onNegotiateReady)发送offer\n                let key = vm.rtc.create();\n                vm.remote_medias.set(key, null);\n                vm.rtc.addTrack(key);\n                // 创建key<=>sender关联，后面要用\n                vm.associateKeyWithSender(key, sender_id);\n                break;\n            }\n            case Constant.RTC_MESSAGE:\n            {\n                let sender_id = mess.sender_id;\n                let data = mess.mess;\n                let type = data.type;\n                switch (type) {\n                    case \"offer\":\n                    {\n                        // 创建key<=>sender关联，后面要用\n                        let key = vm.rtc.getPeerConnectionLastId();\n                        vm.associateKeyWithSender(key, sender_id);\n                        // 创建连接，设置remote，打开摄像头，添加轨道，发送answer\n                        let description = data.description;\n                        vm.rtc.handleVideoOfferMsg(description).then(({description}) => {\n                            vm.sendAnswer(sender_id, description);\n                        });\n                        break;\n                    }\n                    case \"answer\":\n                    {\n                        // 设置remote\n                        let key = vm.rtc_sender_key.get(sender_id);\n                        vm.rtc.handleVideoAnswerMsg(key, data.description);\n                        break;\n                    }\n                    case \"new-ice-candidate\":\n                    {\n                        let candidate = data.candidate;\n                        if (vm.rtc_sender_key.has(sender_id)) {\n                            let key = vm.rtc_sender_key.get(sender_id);\n                            vm.rtc.handleNewICECandidateMsg(key, candidate);\n                        } else {\n                            // 还未建立连接（作为callee时出现），先保存起来，一会再处理\n                            vm.trace('record candidate', sender_id, candidate);\n                            let candidates;\n                            if (vm.candidates.has(sender_id)) {\n                                candidates = vm.candidates.get(sender_id);\n                                candidates.push(candidate);\n                            } else {\n                                candidates = [candidate];\n                            }\n                            vm.candidates.set(sender_id, candidates);\n                        }\n                        break;\n                    }\n                    case \"deny\":\n                    {\n                        let message = data.message;\n                        vm.$notify({\n                            group: 'tip',\n                            text: message,\n                            type: 'error',\n                        });\n                        break;\n                    }\n                }\n                break;\n            }\n            case Constant.RTC_CLOSE:\n            case Constant.RTC_OFFLINE:\n            {\n                // 关闭远端video\n                let sender_id = mess.sender_id;\n                if (vm.rtc_sender_key.has(sender_id)) {\n                    let key = vm.rtc_sender_key.get(sender_id);\n                    vm.rtc.close(key);\n                }\n                break;\n            }\n            case Constant.RTC_EXIT:\n            {\n                let sender_id = mess.sender_id;\n                if (sender_id === vm.user.id) return;\n                let data = mess.mess;\n                if (vm.rtc_running && (data.room_id === vm.rtc_room_id)) {\n                    // 已接听，关闭聊天窗口\n                    vm.$notify({\n                        group: 'tip',\n                        text: '聊天已经结束',\n                        type: 'warn',\n                    });\n                    vm.hangUp(false);\n                } else {\n                    // 未接听，关闭弹窗提示\n                    vm.$modal.hide('dialog');\n                }\n                break;\n            }\n            default:\n            {\n                this.next.process(vm, mess);\n                break;\n            }\n        }\n    }\n}\n\nexport class RTCProcessor extends IProcessor {\n    getData() {\n        return {\n            rtc: null,\n            video_flag: true,\n            local_media: null,\n            remote_medias: new Map(),\n            remote_users: new Map(),\n            voice_visualizes: new Map(),\n            clock_text: \"\",\n            clock_timer: 0,\n            candidates: new Map(),\n            rtc_key_sender: new Map(),\n            rtc_sender_key: new Map(),\n            rtc_room_id: \"\",\n            rtc_receiver_id: \"\",\n            rtc_running: false,\n            rtc_minimize: false,\n        };\n    }\n\n    getMethods() {\n        return {\n            // WebRTC\n            hangUp(notify = true) {\n                this.$modal.hide('rtc-modal');\n                this.rtc_running = false;\n                this.rtc_key_sender.clear();\n                this.rtc_sender_key.clear();\n                this.remote_users.clear();\n                this.rtc.closeAll();\n                this.closeLocalStream();\n                this.clockStop();\n                this.closeVisualize();\n\n                // 通知其他人\n                if (notify) {\n                    let contact = this.im.findContact(this.rtc_receiver_id);\n                    this.sendMessage(Constant.RTC_CLOSE, this.rtc_receiver_id, {\n                        is_group: contact.is_group,\n                        room_id: this.rtc_room_id,\n                    });\n                }\n\n                this.rtc_room_id = \"\";\n                this.rtc_receiver_id = \"\";\n            },\n            minimize() {\n                this.rtc_minimize = true;\n            },\n            maximize() {\n                this.rtc_minimize = false;\n            },\n            setMute(e) {\n                // muted prop not working, used js\n                e.target.muted = true;\n            },\n            clockStart() {\n                if (this.clock_timer) return;\n                let begin = Date.now();\n                this.clock_timer = setInterval(() => {\n                    let diff = Date.now() - begin;\n                    let date = new Date(diff);\n                    this.clock_text = date.formatUTC('H:i:s');\n                }, 1000);\n            },\n            clockStop() {\n                clearInterval(this.clock_timer);\n                this.clock_timer = 0;\n                this.clock_text = \"\";\n            },\n            closeVisualize() {\n                for (let visualize of this.voice_visualizes.values()) {\n                    visualize.close();\n                }\n                this.voice_visualizes.clear();\n            },\n            associateKeyWithSender(key, sender_id) {\n                this.rtc_key_sender.set(key, sender_id);\n                this.rtc_sender_key.set(sender_id, key);\n                this.getUserAsync(sender_id, (user) => {\n                    this.remote_users.set(key, user);\n                });\n            },\n            setLocalStream(stream) {\n                this.trace('set local stream', ...arguments);\n                this.local_media = stream;\n                let canvas = document.querySelector(\"#local-canvas\");\n                let visualize = new VoiceVisualize(stream);\n                visualize.visualize(canvas);\n                this.voice_visualizes.set('local', visualize);\n            },\n            closeLocalStream() {\n                this.trace('close local stream');\n                if (this.local_media) {\n                    this.local_media.getTracks().forEach((track) => track.stop());\n                    this.local_media = null;\n                    this.candidates.clear();\n                }\n            },\n            sendAnswer(sender_id, description) {\n                this.trace('send answer', ...arguments);\n                // 发送answer到远端\n                this.sendMessage(Constant.RTC_MESSAGE, sender_id, {\n                    type: \"answer\",\n                    description,\n                });\n            },\n            onNegotiateReady(key, description) {\n                this.trace('negotiate ready', ...arguments);\n                // 发送offer到远端\n                let sender_id = this.rtc_key_sender.get(key);\n                this.sendMessage(Constant.RTC_MESSAGE, sender_id, {\n                    type: \"offer\",\n                    description,\n                });\n            },\n            onIceCandidate(key, candidate) {\n                this.trace('candidate', ...arguments);\n                if (candidate === null) return;\n                let sender_id = this.rtc_key_sender.get(key);\n                this.trace('ice', sender_id);\n                this.sendMessage(Constant.RTC_MESSAGE, sender_id, {\n                    type: \"new-ice-candidate\",\n                    candidate,\n                });\n                // 若有Interactive Connectivity Establishment candidates，则处理\n                if (this.candidates.has(sender_id)) {\n                    let candidates = this.candidates.get(sender_id);\n                    this.trace('handle candidates', candidates);\n                    for (let candidate of candidates) {\n                        this.rtc.handleNewICECandidateMsg(key, candidate);\n                    }\n                    this.candidates.set(sender_id, []);\n                }\n            },\n            onTrack(key, streams) {\n                this.trace('track', ...arguments);\n                if (streams[0].active) {\n                    this.remote_medias.set(key, streams[0]);\n                    this.$forceUpdate();\n                    this.$nextTick(() => {\n                        let canvas = document.querySelector(\"#remote-canvas-\" + key);\n                        if (this.voice_visualizes.has(key)) {\n                            this.voice_visualizes.get(key).close();\n                            this.voice_visualizes.delete(key);\n                        }\n                        let visualize = new VoiceVisualize(streams[0]);\n                        visualize.visualize(canvas);\n                        this.voice_visualizes.set(key, visualize);\n                    });\n                    this.clockStart();\n                }\n            },\n            onRemoteSteamClose(key) {\n                this.trace('remote stream close', ...arguments);\n                if (this.remote_medias.has(key)) {\n                    this.remote_medias.get(key) && this.remote_medias.get(key).getTracks().forEach((track) => track.stop());\n                    this.remote_medias.delete(key);\n                    this.$forceUpdate();\n                }\n            },\n        };\n    }\n}","import IMessage from \"./imessage.js\";\n\nexport class UnknownMessage extends IMessage {\n    process(vm, mess) {\n        vm.$notify({\n            group: 'tip',\n            text: '未知的消息类型：' + mess.type,\n            type: 'warn',\n        });\n    }\n}","<template>\n    <main>\n        <lemon-imui :user=\"user\" ref=\"im\"\n                    :hide-message-name=\"false\"\n                    :avatarCricle=\"true\"\n                    :width=\"width\"\n                    :height=\"height\"\n                    @pull-messages=\"getHistory\"\n                    @message-click=\"messageClick\"\n                    @change-contact=\"changeContact\"\n                    @menu-avatar-click=\"changeAvatar\"\n                    @send=\"send\">\n\n            <!--搜索、创建群聊-->\n            <template #sidebar-message-fixedtop=\"\">\n                <div class=\"flex space-between search-bar\">\n                    <input type=\"text\" class=\"input-medium\" placeholder=\"搜索\" />\n                    <button @click=\"addGroup\">➕</button>\n                </div>\n            </template>\n\n            <!--最近消息（可删除，默认无状态显示）-->\n            <template #sidebar-message=\"contact\">\n                <lemon-badge\n                    :count=\"contact.unread\"\n                    class=\"lemon-contact__avatar\">\n                    <lemon-avatar :size=\"40\" :src=\"contact.avatar\" />\n                </lemon-badge>\n                <div class=\"lemon-contact__inner\">\n                    <p class=\"lemon-contact__label\">\n                        <span class=\"online-status\" v-if=\"contact.is_online\"></span>\n                        <span class=\"lemon-contact__name\">{{contact.displayName}}</span>\n                        <span class=\"lemon-contact__time\">{{contact.lastSendTime ? timeFormat(contact.lastSendTime) : \"\"}} </span>\n                    </p>\n                    <p class=\"lemon-contact__content\">\n                        <span v-html=\"contact.lastContent\"></span>\n                    </p>\n                </div>\n            </template>\n\n            <!--聊天窗口标题（可删除，默认无人数显示）-->\n            <template #message-title=\"contact\">\n                <div class=\"flex space-between\">\n                    <span>{{contact.displayName}}<span v-if=\"contact.is_group\"> ({{contact.id ? contact.members.size : contact.online_total}})</span></span>\n                    <b @click=\"toggleDrawer(contact)\" class=\"pointer user-select-none\">···</b>\n                </div>\n            </template>\n\n            <!--聊天窗口右侧栏（可删除，默认群成员显示）-->\n            <template #drawer=\"contact\">\n                <div class=\"slot-group\" v-if=\"contact.is_group\">\n                    <div class=\"slot-group-title\">群通知</div>\n                    <hr/>\n                    <div class=\"slot-group-notice\">公告内容</div>\n                    <hr/>\n                    <div class=\"slot-group-title\">群成员</div>\n                    <input class=\"slot-search\" placeholder=\"搜索群成员\"/>\n                    <div class=\"slot-group-panel flex flex-top\">\n                        <lemon-contact\n                            v-for=\"item of contact.members.values()\"\n                            :key=\"item.user_id\"\n                            :contact=\"item\"\n                            v-lemon-contextmenu.contact=\"group_menu\">\n                            <div class=\"slot-group-member\">\n                                <div class=\"slot-group-avatar\">\n                                    <img :src=\"item.avatar ? upload_url + item.avatar : default_avatar_url\" alt=\"avatar\" />\n                                </div>\n                                <div class=\"slot-group-name text-ellipsis\">{{item.username}}</div>\n                            </div>\n                        </lemon-contact>\n                    </div>\n                </div>\n            </template>\n        </lemon-imui>\n\n        <!--注册/登录弹框-->\n        <modal name=\"login-modal\" :clickToClose=\"false\" :height=\"250\" :width=\"250\" :adaptive=\"true\">\n            <dialog class=\"box\" open>\n                <div class=\"partition-title\">请登录/注册</div>\n                <div class=\"partition-form\">\n                    <form autocomplete=\"off\">\n                        <input type=\"text\" id=\"username\" v-model=\"username\" placeholder=\"起个名吧，亲:)\"\n                               maxlength=\"30\" autocomplete/>\n                        <input type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"密码：默认123456\"\n                               maxlength=\"16\"/>\n                        <button type=\"submit\" class=\"large-btn gold-btn\" v-on:click=\"login\">\n                            登录/注册\n                        </button>\n                    </form>\n                </div>\n            </dialog>\n        </modal>\n\n        <!--掉线提示-->\n        <modal name=\"disconnect-modal\" :clickToClose=\"false\" :height=\"25\" :width=\"300\">{{disconnect_mess}}</modal>\n\n        <!--提示框-->\n        <notifications group=\"tip\" position=\"top center\" />\n\n        <!--图片预览-->\n        <viewer :images=\"images\"></viewer>\n\n        <!--头像裁剪-->\n        <template>\n            <image-crop\n                field=\"img\"\n                @crop-success=\"cropSuccess\"\n                v-model=\"image_crop.show\"\n                :width=\"300\"\n                :height=\"300\"\n                img-format=\"png\"></image-crop>\n        </template>\n\n        <!--创建群聊-->\n        <modal name=\"group-modal\" :clickToClose=\"true\" :height=\"500\" :width=\"666\" :adaptive=\"true\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <h3 class=\"modal-title\">创建群聊</h3>\n                    <span>群聊名称：</span>\n                    <input v-model=\"group_name\" class=\"input-medium group-name\" placeholder=\"请输入群聊名称\" />\n                </div>\n                <div class=\"flex space-between vertical-center modal-body\">\n                    <div class=\"group-select\">\n                        <div>联系人</div>\n                        <select multiple v-model=\"left_options\" size=\"10\">\n                            <option v-for=\"item of group_available_users.values()\" :key=\"item.user_id\" :value=\"item.user_id\">{{item.username}}</option>\n                        </select>\n                    </div>\n                    <div class=\"group-select-middle\">\n                        <button @click=\"moveToLeft\">⬅️</button>\n                        <button @click=\"moveToRight\">➡️</button>\n                    </div>\n                    <div class=\"group-select\">\n                        <div>已选</div>\n                        <select multiple v-model=\"right_options\" size=\"10\">\n                            <option v-for=\"item of group_chosen_users.values()\" :key=\"item.user_id\" :value=\"item.user_id\">{{item.username}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"flex horizontal-right modal-footer\">\n                    <button @click=\"groupCancel\">取消</button>\n                    <button @click=\"groupSubmit\">确定</button>\n                </div>\n            </div>\n        </modal>\n\n        <!--WebRTC-->\n        <modal name=\"rtc-modal\" :clickToClose=\"false\" :height=\"'auto'\" :width=\"960\" :scrollable=\"true\" draggable=\"true\" v-show=\"!rtc_minimize\" :adaptive=\"true\">\n            <div class=\"flex flex-wrap horizontal-center vertical-center\">\n                <template v-if=\"video_flag\">\n                    <div class=\"local-video\">\n                        <video autoplay muted :srcObject.prop=\"local_media\"></video>\n                        <div class=\"flex video-bar\">\n                            <div class=\"video-tag text-ellipsis\">{{user.displayName}}</div>\n                            <canvas class=\"voice-visualize-canvas\" id=\"local-canvas\" width=\"420\" height=\"30\" />\n                        </div>\n                    </div>\n                    <div class=\"remote-video\"\n                         v-for=\"[index, remote_video] of remote_medias\" :key=\"index\">\n                        <video autoplay :srcObject.prop=\"remote_video\"></video>\n                        <div class=\"flex video-bar\">\n                            <div class=\"video-tag text-ellipsis\">{{remote_users.get(index).username}}</div>\n                            <canvas class=\"voice-visualize-canvas\" :id=\"'remote-canvas-' + index\" width=\"420\" height=\"30\" />\n                        </div>\n                    </div>\n                </template>\n                <template v-else>\n                    <div class=\"local-audio\">\n                        <audio autoplay muted :srcObject.prop=\"local_media\" @canplay=\"setMute\"></audio>\n                        <div class=\"flex audio-bar\">\n                            <div>\n                                <img :src=\"user.avatar\" />\n                                <div class=\"text-ellipsis text-center username\">{{user.displayName}}</div>\n                            </div>\n                            <canvas class=\"voice-visualize-canvas\" id=\"local-canvas\" width=\"380\" height=\"120\" />\n                        </div>\n                    </div>\n                    <div class=\"remote-audio\"\n                         v-for=\"[index, remote_audio] of remote_medias\" :key=\"index\">\n                        <audio autoplay :srcObject.prop=\"remote_audio\"></audio>\n                        <div class=\"flex audio-bar\">\n                            <div>\n                                <img :src=\"remote_users.get(index).avatar ? upload_url + remote_users.get(index).avatar : default_avatar_url\" />\n                                <div class=\"text-ellipsis text-center username\">{{remote_users.get(index).username}}</div>\n                            </div>\n                            <canvas class=\"voice-visualize-canvas\" :id=\"'remote-canvas-' + index\" width=\"380\" height=\"120\" />\n                        </div>\n                    </div>\n                </template>\n            </div>\n            <div class=\"flex space-between vertical-center\">\n                <div>\n                    <button @click=\"minimize\" class=\"minimize-button\">➖最小化</button>\n                </div>\n                <div class=\"flex vertical-center\">\n                    <span>{{clock_text}}</span>\n                    <button @click=\"hangUp\" class=\"flex vertical-center\">\n                        <span class=\"hang-up-button\"></span>\n                        <span>结束通话</span>\n                    </button>\n                </div>\n            </div>\n        </modal>\n\n        <!--对话框-->\n        <v-dialog />\n\n        <div class=\"minimize-call flex flex-wrap horizontal-center\" v-show=\"rtc_minimize\">\n            <button @click=\"maximize\" class=\"call-button\"></button>\n            <div>{{clock_text}}</div>\n        </div>\n    </main>\n</template>\n\n<script>\nimport './css/login.css';\nimport './css/main.css';\nimport 'weui-icon';\n\nimport emoji from './js/emoji.js';\nimport WebRTC from \"./js/webrtc.js\";\nimport Constant from \"./js/constant.js\";\nimport {GeneralMessage, GeneralProcessor} from \"./js/general.js\";\nimport {GroupMessage, GroupProcessor} from \"./js/group.js\";\nimport {RTCMessage, RTCProcessor} from \"./js/rtc.js\";\nimport {UnknownMessage} from \"./js/unknown.js\";\n\nexport default {\n    name: 'App',\n    // data和methods在Processor中\n    mixins: [\n        new GeneralProcessor(),\n        new GroupProcessor(),\n        new RTCProcessor(),\n    ],\n    mounted() {\n        const {im} = this.$refs;\n        this.im = im;\n\n        // 连接服务器，监听事件\n        this.socket = new WebSocket(this.server_url);\n        // this.socket.binaryType = 'arraybuffer'; //设为二进制的原始缓冲区\n\n        this.socket.addEventListener('open', this.onOpen);\n        this.socket.addEventListener('message', this.onMessage);\n        this.socket.addEventListener('close', this.onClose);\n        this.socket.addEventListener('error', this.onError);\n\n        // 菜单\n        this.im.initMenus([{name: \"messages\"}, {name: \"contacts\"}]);\n\n        // 初始化表情包\n        this.im.initEmoji(emoji);\n\n        // 初始化消息处理\n        let general = new GeneralMessage();\n        let group = new GroupMessage();\n        let rtc = new RTCMessage();\n        let unknown = new UnknownMessage();\n        general.setNext(group);\n        group.setNext(rtc);\n        rtc.setNext(unknown);\n        this.message_handler = general;\n\n        // 初始化RTC\n        this.rtc = new WebRTC();\n        this.rtc.setCallbacks({\n            onTrack: this.onTrack,\n            onNegotiateReady: this.onNegotiateReady,\n            onIceCandidate: this.onIceCandidate,\n            onRemoteSteamClose: this.onRemoteSteamClose,\n        });\n\n        // 初始化工具栏\n        this.im.initEditorTools([\n            {\n                name: 'emoji'\n            },\n            {\n                name: 'uploadImage'\n            },\n            {\n                name: 'uploadDoc',\n                title: \"上传文档\",\n                click: () => {\n                    this.im.$refs.editor.selectFile(\".doc,.docx,.xls,.xlsx\");\n                },\n                render: () => {\n                    return <i class=\"weui-icon-outlined-note\"></i>;\n                },\n            },\n            {\n                name: \"uploadMusic\",\n                title: \"上传音乐\",\n                click: () => {\n                    this.im.$refs.editor.selectFile(\".mp3\");\n                },\n                render: () => {\n                    return <i class=\"weui-icon-outlined-music\"></i>;\n                },\n            },\n            {\n                name: \"videoChat\",\n                title: \"视频聊天\",\n                click: () => {\n                    if (this.rtc_minimize) {\n                        return this.$notify({\n                            group: 'tip',\n                            text: '已在通话中',\n                            type: 'warn',\n                        });\n                    }\n\n                    this.$modal.show('rtc-modal');\n\n                    this.rtc_room_id = \"\";\n                    let contact = this.im.getCurrentContact();\n                    let video = true;\n                    this.video_flag = video;\n                    this.rtc.setConstraints({ audio: true, video });\n                    this.rtc.open().then((stream) => {\n                        this.setLocalStream(stream);\n                        this.rtc_running = true;\n                        // 请求CREATE ROOM\n                        let is_group = contact.is_group;\n                        this.sendMessage(Constant.RTC_CREATE, contact.id, {\n                            is_group,\n                            video,\n                        });\n                    }).catch((e) => {\n                        this.trace(e);\n                        this.rtc_running = true;\n                    });\n                },\n                render: () => {\n                    return <i class=\"weui-icon-outlined-video-call\"></i>;\n                },\n            },\n            {\n                name: \"VoiceChat\",\n                title: \"语音聊天\",\n                click: () => {\n                    if (this.rtc_minimize) {\n                        return this.$notify({\n                            group: 'tip',\n                            text: '已在通话中',\n                            type: 'warn',\n                        });\n                    }\n\n                    this.$modal.show('rtc-modal');\n\n                    this.rtc_room_id = \"\";\n                    let contact = this.im.getCurrentContact();\n                    let video = false;\n                    this.video_flag = video;\n                    this.rtc.setConstraints({ audio: true, video });\n                    this.rtc.open().then((stream) => {\n                        this.setLocalStream(stream);\n                        this.rtc_running = true;\n                        // 请求CREATE ROOM\n                        let is_group = contact.is_group;\n                        this.sendMessage(Constant.RTC_CREATE, contact.id, {\n                            is_group,\n                            video,\n                        });\n                    }).catch((e) => {\n                        this.trace(e);\n                        this.rtc_running = true;\n                    });\n                },\n                render: () => {\n                    return <i class=\"weui-icon-outlined-mike\"></i>;\n                },\n            },\n        ]);\n\n        // 自定义消息-音乐\n        this.im.setLastContentRender('music', (message) => {\n            return <span>[音乐]{message.fileName}</span>;\n        });\n\n        // 大厅\n        this.addGroupContact({\n            id: '0',\n            name: '大厅',\n            avatar: '',\n        }, \"\", this.online_users);\n    },\n}\n</script>","var render, staticRenderFns\nimport script from \"./lemon-message-music.vue?vue&type=script&lang=js\"\nexport * from \"./lemon-message-music.vue?vue&type=script&lang=js\"\nimport style0 from \"./lemon-message-music.vue?vue&type=style&index=0&id=feb7b23c&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7cc47c47\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<style>\n.lemon-message .lemon-message__audio_name {\n    padding: 0 0 8px 0;\n    text-align: center;\n    color: #5C3BB5;\n}\n\n.lemon-message::before {\n    display: none;\n}\n</style>\n<script>\nexport default {\n    name: \"lemonMessageMusic\",\n    inheritAttrs: false,\n    inject: [\"IMUI\"],\n    render() {\n        return (\n            <lemon-message-basic\n                class=\"lemon-message-audio\"\n                props={{...this.$attrs}}\n                scopedSlots={{\n                    content: props => {\n                        return (\n                            <div>\n                                <div class=\"lemon-message__audio_name\">\n                                    <i>🎵</i>\n                                    <span>{props.fileName}</span>\n                                </div>\n                                <audio controls src={props.content} title={props.fileName}></audio>\n                            </div>\n                        );\n                    }\n                }}\n            />\n        );\n    }\n};\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./lemon-message-music.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./lemon-message-music.vue?vue&type=script&lang=js\"","import Vue from 'vue'\nimport App from './App.vue'\nimport LemonIMUI from 'lemon-imui-rx';\nimport 'lemon-imui-rx/dist/index.css';\nimport lemonMessageMusic from './components/lemon-message-music.vue';\nVue.component(lemonMessageMusic.name, lemonMessageMusic);\nimport VModal from 'vue-js-modal';\nimport Notifications from 'vue-notification';\nimport 'viewerjs/dist/viewer.css';\nimport VueViewer from 'v-viewer';\nimport ImageCrop from 'vue-image-crop-upload/upload-2';\n\nVue.config.productionTip = false;\nVue.use(LemonIMUI);\nVue.use(VModal, { dialog: true });\nVue.use(Notifications);\nVue.use(VueViewer);\nVue.component('image-crop', ImageCrop);\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkhtml_v2\"] = self[\"webpackChunkhtml_v2\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(1069); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","ref","attrs","user","width","height","on","getHistory","messageClick","changeContact","changeAvatar","send","scopedSlots","_u","key","fn","staticClass","addGroup","_v","proxy","contact","unread","avatar","is_online","_e","_s","displayName","lastSendTime","timeFormat","domProps","lastContent","is_group","id","members","size","online_total","$event","toggleDrawer","_l","values","item","directives","name","rawName","value","group_menu","expression","modifiers","user_id","upload_url","default_avatar_url","username","target","composing","password","login","disconnect_mess","images","cropSuccess","model","image_crop","show","callback","$$v","$set","group_name","left_options","$$selectedVal","Array","prototype","filter","call","options","o","selected","map","val","_value","multiple","group_available_users","moveToLeft","moveToRight","right_options","group_chosen_users","groupCancel","groupSubmit","rtc_minimize","video_flag","local_media","remote_medias","index","remote_video","remote_users","get","setMute","remote_audio","minimize","clock_text","hangUp","maximize","staticRenderFns","base_url","process","label","children","WebRTC","constructor","config","iceServers","urls","credential","constraints","audio","video","callbacks","pcs","Map","stream","setCallbacks","onTrack","onNegotiateReady","onIceCandidate","onRemoteSteamClose","setConstraints","open","navigator","mediaDevices","getUserMedia","e","console","error","alert","message","Error","create","pc","RTCPeerConnection","getPeerConnectionLastId","set","ontrack","track","streams","onunmute","onnegotiationneeded","async","offer","createOffer","sdp","replaceSDP","setLocalDescription","localDescription","onicecandidate","candidate","oniceconnectionstatechange","iceConnectionState","close","restartIce","onicegatheringstatechange","log","onsignalingstatechange","signalingState","addTrack","getTracks","onremovetrack","onremovestream","delete","closeAll","forEach","clear","handleVideoOfferMsg","description","setRemoteDescription","answer","createAnswer","handleVideoAnswerMsg","handleNewICECandidateMsg","addIceCandidate","replace","Constant","_defineProperty","IMessage","setNext","next","getNext","DataHelper","encode","obj","JSON","stringify","decode","str","parse","toObject","buildTraceId","Math","random","toString","substr","sha256","blob","buffer","arrayBuffer","hashBuffer","crypto","subtle","digest","hashArray","from","Uint8Array","b","padStart","join","generateUUID","time","Date","getTime","performance","now","char","rand","floor","String","replaceMulti","search","RegExp","format","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","substring","formatUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","IProcessor","methods","getMethods","data","getData","GeneralMessage","vm","mess","type","MESSAGE_SELF","IMAGE_SELF","FILE_SELF","MUSIC_SELF","USER_REGISTER","$modal","USER_INCORRECT","$notify","group","text","USER_LOGIN","hide","DEFAULT_AVATAR","setCookie","online_users","sendMessage","USER_ONLINE_TOTAL","GROUP_QUERY_LIST","USER_LIST","users","USER_ONLINE","im","appendMessage","status","sendTime","timestamp","content","toContactId","updateContact","USER_QUIT","fromUser","max","USER_QUERY","addUser","resolve","query_next","USER_DOWNLINE","USER_REMOVE","USER_DISABLED","is_active","USER_AVATAR_SUCCESS","USER_AVATAR_FAIL","MESSAGE_COMMON","MESSAGE_OTHER","IMAGE_COMMON","IMAGE_OTHER","MUSIC_COMMON","MUSIC_OTHER","FILE_COMMON","FILE_OTHER","sender_id","receiver_id","findContact","GROUP_QUERY_INFO","promise","Promise","query_group_next","then","addGroupContact","getUserAsync","addPersonalContact","receiveMessage","HISTORY_MESSAGE_COMMON","HISTORY_MESSAGE_PERSONAL","contact_id","pull_next","FILE_UPLOAD_SUCCESS","upload_next","hash","ERROR","WARNING","SYSTEM","GeneralProcessor","server_url","window","innerWidth","innerHeight","socket","reconnect_times","send_next","query_member_next","onOpen","getCookie","onMessage","trace","message_handler","onClose","readyState","WebSocket","OPEN","timer","handler","MAX_LIMITS","clearInterval","addEventListener","onError","binaryType","setInterval","date","is_today","DEBUG","toFixed","arguments","groupEnd","nameEQ","ca","document","cookie","split","c","charAt","length","indexOf","unescape","exp","setTime","COOKIE_EXPIRE_DAYS","escape","toGMTString","trace_id","defaults","Object","assign","parseMessage","sender","fileSize","fileName","path","GROUP_CREATE","admin_name","parsed","option","lastMessage","query_time","appendContact","getUser","Function","preventDefault","trim","reject","query_id_list","Set","list","one","add","promise_list","promise2","push","all","messages","is_end","file","music_types","includes","limit_size","is_personal","type_map","IMAGE_PERSONAL","FILE_PERSONAL","MESSAGE_PERSONAL","MUSIC_PERSONAL","MAX_IMAGE_SIZE","MAX_MUSIC_SIZE","MAX_FILE_SIZE","message_id","hashing","info","updateMessage","changeDrawer","position","offsetY","$el","clientHeight","imagePreview","group_id","GROUP_QUERY_MEMBER","member","$forceUpdate","url","querySelectorAll","image","i","src","$viewerApi","toolbar","initialViewIndex","openNotice","openAddGroupUser","imgDataUrl","fetch","res","USER_AVATAR_UPLOAD","catch","GroupMessage","groups","admin_id","keys","GroupProcessor","visible","instance","click","IMUI","$parent","closeDrawer","chosen_num","VoiceVisualize","audioCtx","AudioContext","analyser","createAnalyser","source","createMediaStreamSource","connect","drawVisual","visualize","canvas","visualSetting","canvasCtx","getContext","WIDTH","HEIGHT","fftSize","bufferLength","dataArray","clearRect","draw","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","v","y","moveTo","lineTo","stroke","bufferLengthAlt","frequencyBinCount","dataArrayAlt","drawAlt","getByteFrequencyData","barWidth","barHeight","cancelAnimationFrame","disconnect","RTCMessage","RTC_CREATE","rtc_room_id","room_id","rtc_receiver_id","rtc_running","RTC_MESSAGE","title","tag","buttons","rtc","setLocalStream","associateKeyWithSender","RTC_JOIN","sendAnswer","rtc_sender_key","has","candidates","RTC_CLOSE","RTC_OFFLINE","RTC_EXIT","RTCProcessor","voice_visualizes","clock_timer","rtc_key_sender","notify","closeLocalStream","clockStop","closeVisualize","muted","clockStart","begin","diff","querySelector","stop","active","$nextTick","UnknownMessage","mixins","mounted","h","$createElement","$refs","initMenus","initEmoji","emoji","general","unknown","initEditorTools","editor","selectFile","getCurrentContact","setLastContentRender","component","inheritAttrs","inject","_mergeJSXProps","$attrs","props","Vue","lemonMessageMusic","productionTip","use","LemonIMUI","VModal","dialog","Notifications","VueViewer","ImageCrop","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","g","globalThis","hmd","prop","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}